import React from 'react';
import { AlertProps, ButtonProps, PasswordFieldProps, PrimitiveProps } from '../../primitives/types';
type PasswordFieldPrimitiveProps = PrimitiveProps<PasswordFieldProps, 'input'>;
type ButtonPrimitiveProps = PrimitiveProps<ButtonProps, 'button'>;
type AlertPrimitiveProps = PrimitiveProps<AlertProps, 'div'>;
type CommonPasswordFieldProps = Partial<PasswordFieldPrimitiveProps> & Required<Pick<PasswordFieldPrimitiveProps, 'onBlur' | 'onChange' | 'name'>> & {
    fieldValidationErrors?: string[];
};
type CommonAlertProps = Partial<PrimitiveProps<AlertProps, 'div'>> & Required<Pick<AlertPrimitiveProps, 'children'>>;
type CommonButtonProps<T extends 'submit' | 'default' = 'default'> = Partial<ButtonPrimitiveProps> & Required<Pick<ButtonPrimitiveProps, T extends 'submit' ? never : 'onClick'>>;
export type PasswordFieldComponent<Props = {}> = React.ComponentType<Props & CommonPasswordFieldProps>;
export type ButtonComponent<Props = {}> = React.ComponentType<Props & CommonButtonProps>;
export type SubmitButtonComponent<Props = {}> = React.ComponentType<Props & CommonButtonProps<'submit'>>;
export type ErrorMessageComponent<Props = {}> = React.ComponentType<Props & CommonAlertProps>;
export type FormValues = Record<string, string>;
export type BlurredFields = string[];
export type ValidationError = Record<string, string[]>;
export {};
