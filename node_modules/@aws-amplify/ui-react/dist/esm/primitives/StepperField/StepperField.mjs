import{__rest as e}from"tslib";import*as t from"react";import a from"classnames";import{useStepper as r}from"./useStepper.mjs";import"../Field/FieldClearButton.mjs";import{FieldDescription as i}from"../Field/FieldDescription.mjs";import{FieldErrorMessage as s}from"../Field/FieldErrorMessage.mjs";import"../Field/Field.mjs";import{FieldGroup as l}from"../FieldGroup/FieldGroup.mjs";import"../FieldGroupIcon/FieldGroupIcon.mjs";import{FieldGroupIconButton as o}from"../FieldGroupIcon/FieldGroupIconButton.mjs";import{Flex as n}from"../Flex/Flex.mjs";import{IconAdd as d}from"../Icon/icons/IconAdd.mjs";import{ComponentClassNames as m,ComponentText as p}from"../shared/constants.mjs";import"../View/View.mjs";import{IconRemove as c}from"../Icon/icons/IconRemove.mjs";import{Input as u}from"../Input/Input.mjs";import{Label as b}from"../Label/Label.mjs";import{classNameModifier as F,classNameModifierByFlag as f}from"@aws-amplify/ui";import{splitPrimitiveProps as j}from"../utils/splitPrimitiveProps.mjs";import{useStableId as I}from"../utils/useStableId.mjs";const h="decrease-icon",S="increase-icon",v=t.forwardRef(((v,B)=>{const{className:E,defaultValue:g,descriptiveText:D,errorMessage:y,hasError:C=!1,id:L,inputStyles:O,isDisabled:R,isReadOnly:N,isRequired:V,increaseButtonLabel:x=p.StepperField.increaseButtonLabel,decreaseButtonLabel:z=p.StepperField.decreaseButtonLabel,label:G,labelHidden:w=!1,onStepChange:H,size:M,testId:$,value:q,variation:P}=v,T=e(v,["className","defaultValue","descriptiveText","errorMessage","hasError","id","inputStyles","isDisabled","isReadOnly","isRequired","increaseButtonLabel","decreaseButtonLabel","label","labelHidden","onStepChange","size","testId","value","variation"]),k=I(L),W=I(),A=D?W:void 0,{styleProps:J,rest:K}=j(T),{step:Q,value:U,inputValue:X,handleDecrease:Y,handleIncrease:Z,handleOnBlur:_,handleOnChange:ee,handleOnWheel:te,setInputValue:ae,shouldDisableDecreaseButton:re,shouldDisableIncreaseButton:ie}=r(Object.assign(Object.assign({},v),{defaultValue:g,onStepChange:H}));return t.useEffect((()=>{void 0!==q&&ae(q)}),[q,ae]),t.createElement(n,Object.assign({className:a(m.Field,F(m.Field,M),m.StepperField,E),"data-size":M,"data-variation":P,testId:$},J),t.createElement(b,{htmlFor:k,visuallyHidden:w},G),t.createElement(i,{id:W,labelHidden:w,descriptiveText:D}),t.createElement(l,{outerStartComponent:t.createElement(o,{"aria-controls":k,ariaLabel:`${z} ${U-Q}`,className:a(m.StepperFieldButtonDecrease,F(m.StepperFieldButtonDecrease,P),f(m.StepperFieldButtonDecrease,"disabled",re)),"data-invalid":C,isDisabled:re,onClick:Y,size:M},t.createElement(c,{"data-testid":h})),outerEndComponent:t.createElement(o,{"aria-controls":k,ariaLabel:`${x} ${U+Q}`,className:a(m.StepperFieldButtonIncrease,F(m.StepperFieldButtonIncrease,P),f(m.StepperFieldButtonIncrease,"disabled",ie)),"data-invalid":C,isDisabled:ie,onClick:Z,size:M},t.createElement(d,{"data-testid":S}))},t.createElement(u,Object.assign({"aria-describedby":A,className:m.StepperFieldInput,hasError:C,id:k,isDisabled:R,isReadOnly:N,isRequired:V,onBlur:_,onChange:ee,onWheel:te,ref:B,size:M,variation:P,type:"number",value:X},O,K))),t.createElement(s,{hasError:C,errorMessage:y}))}));v.displayName="StepperField";export{h as DECREASE_ICON,S as INCREASE_ICON,v as StepperField};
