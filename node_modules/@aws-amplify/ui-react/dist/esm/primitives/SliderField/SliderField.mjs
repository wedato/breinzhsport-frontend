import{__rest as e}from"tslib";import r from"classnames";import*as t from"@radix-ui/react-slider";import*as a from"react";import{sanitizeNamespaceImport as i,isFunction as l,classNameModifier as o}from"@aws-amplify/ui";import{ComponentClassNames as s}from"../shared/constants.mjs";import"../Field/FieldClearButton.mjs";import{FieldDescription as d}from"../Field/FieldDescription.mjs";import{FieldErrorMessage as m}from"../Field/FieldErrorMessage.mjs";import"../Field/Field.mjs";import{FieldGroup as n}from"../FieldGroup/FieldGroup.mjs";import{Flex as c}from"../Flex/Flex.mjs";import{Label as u}from"../Label/Label.mjs";import{splitPrimitiveProps as p}from"../utils/splitPrimitiveProps.mjs";import{View as b}from"../View/View.mjs";import{useStableId as F}from"../utils/useStableId.mjs";const{Range:f,Root:S,Thumb:g,Track:C}=i(t),E="slider-label",h="slider-root",k="slider-track",v="slider-range",T=a.forwardRef(((t,i)=>{var{ariaValuetext:T,className:j,defaultValue:y=0,descriptiveText:V,emptyTrackColor:x,errorMessage:N,filledTrackColor:R,formatValue:z,hasError:H=!1,id:w,isDisabled:I,isValueHidden:M=!1,label:D,labelHidden:G=!1,onChange:L,orientation:P="horizontal",outerEndComponent:O,outerStartComponent:B,testId:q,thumbColor:A,trackSize:J,value:K,size:Q}=t,U=e(t,["ariaValuetext","className","defaultValue","descriptiveText","emptyTrackColor","errorMessage","filledTrackColor","formatValue","hasError","id","isDisabled","isValueHidden","label","labelHidden","onChange","orientation","outerEndComponent","outerStartComponent","testId","thumbColor","trackSize","value","size"]);const W=F(w),X=F(),Y=F(),Z=V?Y:void 0,{styleProps:$,rest:_}=p(U),ee=void 0!==K,[re,te]=a.useState(ee?K:y),ae=ee?[K]:void 0,ie=ee?void 0:[y],le=a.useCallback((e=>{te(e[0]),l(L)&&L(e[0])}),[L]),oe=a.useMemo((()=>{const e=l(z)?z(re):re;return"string"==typeof z?a.createElement(b,{as:"span"},e):e}),[re,z]),se="vertical"===P,de=r(s.SliderFieldTrack,o(s.SliderFieldTrack,P),o(s.SliderFieldTrack,Q)),me=r(s.SliderFieldRoot,o(s.SliderFieldRoot,P),o(s.SliderFieldRoot,Q),j);return a.createElement(c,Object.assign({className:r(s.Field,o(s.Field,Q),s.SliderField),testId:q,"data-size":Q},$),a.createElement(u,{className:s.SliderFieldLabel,id:X,testId:E,visuallyHidden:G},a.createElement(b,{as:"span"},D),M?null:oe),a.createElement(d,{id:Y,labelHidden:G,descriptiveText:V}),a.createElement(n,{className:s.SliderFieldGroup,id:W,orientation:P,outerStartComponent:B,outerEndComponent:O},a.createElement(S,Object.assign({className:me,"data-testid":h,disabled:I,defaultValue:ie,onValueChange:le,orientation:P,ref:i,value:ae},_),a.createElement(C,{className:de,"data-testid":k,style:{backgroundColor:String(x),[""+(se?"width":"height")]:J}},a.createElement(f,{className:r(s.SliderFieldRange,o(s.SliderFieldRange,P)),"data-testid":v,style:{backgroundColor:String(R)}})),a.createElement(g,{"aria-describedby":Z,"aria-labelledby":X,"aria-valuetext":T,className:r(s.SliderFieldThumb,o(s.SliderFieldThumb,Q)),style:{backgroundColor:String(A)}}))),a.createElement(m,{hasError:H,errorMessage:N}))}));T.displayName="SliderField";export{E as SLIDER_LABEL_TEST_ID,v as SLIDER_RANGE_TEST_ID,h as SLIDER_ROOT_TEST_ID,k as SLIDER_TRACK_TEST_ID,T as SliderField};
