import{__awaiter as i}from"tslib";import e from"react";import r from"lodash/isEqual.js";import{Logger as t}from"aws-amplify";import{getDefaultPasswordValidators as s,runFieldValidators as o,getDefaultConfirmPasswordValidators as m,translate as a,changePassword as l}from"@aws-amplify/ui";import{useAuth as n}from"../../../hooks/useAuth.mjs";import"@aws-amplify/datastore";import"@aws-amplify/storage";import"../../ThemeProvider/AmplifyContext.mjs";import"../../../primitives/shared/constants.mjs";import"../../../helpers/constants.mjs";import"../../../primitives/Alert/AlertIcon.mjs";import"classnames";import{View as p}from"../../../primitives/View/View.mjs";import"../../../primitives/Field/FieldClearButton.mjs";import"../../../primitives/Field/FieldDescription.mjs";import"../../../primitives/Field/FieldErrorMessage.mjs";import"../../../primitives/Field/Field.mjs";import"../../../primitives/Alert/Alert.mjs";import"../../../primitives/Autocomplete/Autocomplete.mjs";import"../../../primitives/Badge/Badge.mjs";import"../../../primitives/Button/Button.mjs";import"../../../primitives/ButtonGroup/ButtonGroup.mjs";import"../../../primitives/Card/Card.mjs";import"../../../primitives/CheckboxField/CheckboxField.mjs";import"../../../primitives/Collection/Collection.mjs";import"../../../primitives/Divider/Divider.mjs";import"../../../primitives/Expander/Expander.mjs";import"../../../primitives/Expander/ExpanderItem.mjs";import"../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs";import"../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs";import{Flex as d}from"../../../primitives/Flex/Flex.mjs";import"../../../primitives/Grid/Grid.mjs";import"../../../primitives/Heading/Heading.mjs";import"../../../primitives/HighlightMatch/HighlightMatch.mjs";import"../../../primitives/Icon/Icon.mjs";import"../../../primitives/Image/Image.mjs";import"../../../primitives/Link/Link.mjs";import"../../../primitives/Loader/Loader.mjs";import"../../../primitives/Menu/Menu.mjs";import"../../../primitives/Menu/MenuButton.mjs";import"../../../primitives/Menu/MenuItem.mjs";import"../../../primitives/Pagination/Pagination.mjs";import"../../../primitives/PasswordField/PasswordField.mjs";import"../../../primitives/PhoneNumberField/PhoneNumberField.mjs";import"../../../primitives/Placeholder/Placeholder.mjs";import"../../../primitives/Radio/Radio.mjs";import"../../../primitives/RadioGroupField/RadioGroupField.mjs";import"../../../primitives/Rating/Rating.mjs";import"../../../primitives/ScrollView/ScrollView.mjs";import"../../../primitives/SearchField/SearchField.mjs";import"../../../primitives/SelectField/SelectField.mjs";import"../../../primitives/SliderField/SliderField.mjs";import"../../../primitives/StepperField/StepperField.mjs";import"../../../primitives/SwitchField/SwitchField.mjs";import"../../../primitives/Table/Table.mjs";import"../../../primitives/Table/TableBody.mjs";import"../../../primitives/Table/TableCell.mjs";import"../../../primitives/Table/TableFoot.mjs";import"../../../primitives/Table/TableHead.mjs";import"../../../primitives/Table/TableRow.mjs";import"../../../primitives/Tabs/Tabs.mjs";import"../../../primitives/Text/Text.mjs";import"../../../primitives/TextAreaField/TextAreaField.mjs";import"../../../primitives/TextField/TextField.mjs";import"../../../primitives/ToggleButton/ToggleButton.mjs";import"../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs";import"../../../primitives/VisuallyHidden/VisuallyHidden.mjs";import{ComponentClassName as u}from"../constants.mjs";import c from"./defaults.mjs";const v=new t("ChangePassword");function w({onSuccess:t,onError:w,validators:j,components:F}){const[g,P]=e.useState(null),[f,b]=e.useState({}),[h,T]=e.useState({}),C=e.useRef([]),{user:B,isLoading:S}=n(),E=((i,e)=>{var r,t;const{currentPassword:s,newPassword:o,confirmPassword:m}=i;return!(s&&o&&m)||((null===(r=e.newPassword)||void 0===r?void 0:r.length)>0||(null===(t=e.confirmPassword)||void 0===t?void 0:t.length)>0)})(f,h),y=e.useMemo((()=>null!=j?j:s()),[j]),x=e.useCallback((({formValues:i,eventType:e})=>{const{newPassword:r}=i,t=C.current.includes("newPassword");return o({value:r,validators:y,eventType:e,hasBlurred:t})}),[y]),M=e.useCallback((({formValues:i,eventType:e})=>{const{newPassword:r,confirmPassword:t}=i,s=C.current.includes("confirmPassword"),a=m(r);return o({value:t,validators:a,eventType:e,hasBlurred:s})}),[]),G=e.useCallback((i=>{const e={newPassword:x(i),confirmPassword:M(i)};r(h,e)||T(e)}),[M,x,h]),V=a("Current Password"),I=a("New Password"),R=a("Confirm Password"),A=a("Update password"),{CurrentPasswordField:k,NewPasswordField:D,ConfirmPasswordField:H,SubmitButton:N,ErrorMessage:q}=e.useMemo((()=>Object.assign(Object.assign({},c),null!=F?F:{})),[F]),L=i=>{i.preventDefault();const{name:e,value:r}=i.target,t=Object.assign(Object.assign({},f),{[e]:r});G({formValues:t,eventType:"change"}),b(t)},O=i=>{i.preventDefault();const{name:e}=i.target;if(!C.current.includes(e)){const i=[...C.current,e];C.current=i,G({formValues:f,eventType:"blur"})}};return S?null:B?e.createElement(p,{as:"form",className:u.ChangePassword,onSubmit:e=>i(this,void 0,void 0,(function*(){if(e.preventDefault(),!B)return;const{currentPassword:i,newPassword:r}=f;g&&P(null);try{yield l({user:B,currentPassword:i,newPassword:r}),null==t||t()}catch(i){const e=i;e.message&&P(e.message),null==w||w(e)}}))},e.createElement(d,{direction:"column"},e.createElement(k,{autoComplete:"current-password",isRequired:!0,label:V,name:"currentPassword",onBlur:O,onChange:L}),e.createElement(D,{autoComplete:"new-password",fieldValidationErrors:null==h?void 0:h.newPassword,isRequired:!0,label:I,name:"newPassword",onBlur:O,onChange:L}),e.createElement(H,{autoComplete:"new-password",fieldValidationErrors:null==h?void 0:h.confirmPassword,isRequired:!0,label:R,name:"confirmPassword",onBlur:O,onChange:L}),e.createElement(N,{isDisabled:E,type:"submit"},A),g?e.createElement(q,null,g):null)):(v.warn("<ChangePassword /> requires user to be authenticated."),null)}w.CurrentPasswordField=c.CurrentPasswordField,w.NewPasswordField=c.NewPasswordField,w.ConfirmPasswordField=c.ConfirmPasswordField,w.SubmitButton=c.SubmitButton,w.ErrorMessage=c.ErrorMessage;export{w as default};
