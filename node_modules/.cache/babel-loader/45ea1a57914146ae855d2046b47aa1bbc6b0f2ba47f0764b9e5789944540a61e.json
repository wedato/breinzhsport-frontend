{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport PlatformNotSupportedError from './PlatformNotSupportedError';\nvar PushNotification = /** @class */function () {\n  function PushNotification() {\n    var _this = this;\n    /**\n     * Configure PushNotification\n     * @param {Object} config - PushNotification configuration object\n     */\n    this.configure = function (_) {\n      if (_ === void 0) {\n        _ = {};\n      }\n      throw new PlatformNotSupportedError();\n    };\n    /**\n     * Get a plugin from added plugins\n     * @param {string} providerName - the name of the plugin to get\n     */\n    this.getPluggable = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    /**\n     * Add plugin into PushNotification\n     * @param {PushNotificationProvider} pluggable - an instance of the plugin\n     */\n    this.addPluggable = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    /**\n     * Remove a plugin from added plugins\n     * @param {string} providerName - the name of the plugin to remove\n     */\n    this.removePluggable = function () {\n      throw new PlatformNotSupportedError();\n    };\n    this.enable = function () {\n      throw new PlatformNotSupportedError();\n    };\n    this.identifyUser = function () {\n      throw new PlatformNotSupportedError();\n    };\n    this.getLaunchNotification = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.getBadgeCount = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.setBadgeCount = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.getPermissionStatus = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.requestPermissions = function (_) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.onNotificationReceivedInBackground = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.onNotificationReceivedInForeground = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.onTokenReceived = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.onNotificationOpened = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n  }\n  /**\n   * Get the name of this module\n   * @returns {string} name of this module\n   */\n  PushNotification.prototype.getModuleName = function () {\n    throw new PlatformNotSupportedError();\n  };\n  return PushNotification;\n}();\nexport default PushNotification;","map":{"version":3,"names":["PlatformNotSupportedError","PushNotification","_this","configure","_","getPluggable","addPluggable","removePluggable","enable","identifyUser","getLaunchNotification","__awaiter","getBadgeCount","setBadgeCount","getPermissionStatus","requestPermissions","onNotificationReceivedInBackground","onNotificationReceivedInForeground","onTokenReceived","onNotificationOpened","prototype","getModuleName"],"sources":["C:\\Users\\jonat\\aws_poc\\frontend\\node_modules\\@aws-amplify\\notifications\\src\\PushNotification\\PushNotification.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport PlatformNotSupportedError from './PlatformNotSupportedError';\nimport {\n\tNotificationsSubCategory,\n\tOnPushNotificationMessageHandler,\n\tOnTokenReceivedHandler,\n\tPushNotificationConfig,\n\tPushNotificationInterface,\n\tPushNotificationMessage,\n\tPushNotificationPermissions,\n\tPushNotificationPermissionStatus,\n\tPushNotificationProvider,\n} from './types';\n\nexport default class PushNotification implements PushNotificationInterface {\n\t/**\n\t * Configure PushNotification\n\t * @param {Object} config - PushNotification configuration object\n\t */\n\tconfigure = (_: PushNotificationConfig = {}): PushNotificationConfig => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\t/**\n\t * Get the name of this module\n\t * @returns {string} name of this module\n\t */\n\tgetModuleName(): NotificationsSubCategory {\n\t\tthrow new PlatformNotSupportedError();\n\t}\n\n\t/**\n\t * Get a plugin from added plugins\n\t * @param {string} providerName - the name of the plugin to get\n\t */\n\tgetPluggable = (_: string) => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\t/**\n\t * Add plugin into PushNotification\n\t * @param {PushNotificationProvider} pluggable - an instance of the plugin\n\t */\n\taddPluggable = (_: PushNotificationProvider): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\t/**\n\t * Remove a plugin from added plugins\n\t * @param {string} providerName - the name of the plugin to remove\n\t */\n\tremovePluggable = (): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tenable = (): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tidentifyUser = (): Promise<void[]> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tgetLaunchNotification = async (): Promise<PushNotificationMessage> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tgetBadgeCount = async (): Promise<number | null> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tsetBadgeCount = (_: number): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tgetPermissionStatus = async (): Promise<PushNotificationPermissionStatus> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\trequestPermissions = async (\n\t\t_?: PushNotificationPermissions\n\t): Promise<boolean> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonNotificationReceivedInBackground = (\n\t\t_: OnPushNotificationMessageHandler\n\t): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonNotificationReceivedInForeground = (\n\t\t_: OnPushNotificationMessageHandler\n\t): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonTokenReceived = (_: OnTokenReceivedHandler): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonNotificationOpened = (_: OnPushNotificationMessageHandler): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n}\n"],"mappings":"AAAA;AACA;;AAEA,OAAOA,yBAAyB,MAAM,6BAA6B;AAanE,IAAAC,gBAAA;EAAA,SAAAA,iBAAA;IAAA,IAAAC,KAAA;IACC;;;;IAIA,KAAAC,SAAS,GAAG,UAACC,CAA8B;MAA9B,IAAAA,CAAA;QAAAA,CAAA,KAA8B;MAAA;MAC1C,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAUD;;;;IAIA,KAAAK,YAAY,GAAG,UAACD,CAAS;MACxB,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAED;;;;IAIA,KAAAM,YAAY,GAAG,UAACF,CAA2B;MAC1C,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAED;;;;IAIA,KAAAO,eAAe,GAAG;MACjB,MAAM,IAAIP,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAQ,MAAM,GAAG;MACR,MAAM,IAAIR,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAS,YAAY,GAAG;MACd,MAAM,IAAIT,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAU,qBAAqB,GAAG;MAAA,OAAAC,SAAA,CAAAT,KAAA;;UACvB,MAAM,IAAIF,yBAAyB,EAAE;;;KACrC;IAED,KAAAY,aAAa,GAAG;MAAA,OAAAD,SAAA,CAAAT,KAAA;;UACf,MAAM,IAAIF,yBAAyB,EAAE;;;KACrC;IAED,KAAAa,aAAa,GAAG,UAACT,CAAS;MACzB,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAc,mBAAmB,GAAG;MAAA,OAAAH,SAAA,CAAAT,KAAA;;UACrB,MAAM,IAAIF,yBAAyB,EAAE;;;KACrC;IAED,KAAAe,kBAAkB,GAAG,UACpBX,CAA+B;MAAA,OAAAO,SAAA,CAAAT,KAAA;;UAE/B,MAAM,IAAIF,yBAAyB,EAAE;;;KACrC;IAED,KAAAgB,kCAAkC,GAAG,UACpCZ,CAAmC;MAEnC,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAiB,kCAAkC,GAAG,UACpCb,CAAmC;MAEnC,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAkB,eAAe,GAAG,UAACd,CAAyB;MAC3C,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;IAED,KAAAmB,oBAAoB,GAAG,UAACf,CAAmC;MAC1D,MAAM,IAAIJ,yBAAyB,EAAE;IACtC,CAAC;EACF;EAjFC;;;;EAIAC,gBAAA,CAAAmB,SAAA,CAAAC,aAAa,GAAb;IACC,MAAM,IAAIrB,yBAAyB,EAAE;EACtC,CAAC;EA2EF,OAAAC,gBAAC;AAAD,CAAC,CA1FD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}