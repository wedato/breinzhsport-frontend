{"ast":null,"code":"import { Amplify as e } from \"aws-amplify\";\nimport \"../../types/authenticator/user.mjs\";\nimport \"../../types/authenticator/attributes.mjs\";\nimport \"../../types/primitives/componentClassName.mjs\";\nimport \"../../i18n/translations.mjs\";\nimport { hasSpecialChars as s } from \"../authenticator/utils.mjs\";\nconst a = () => {\n    const s = e.configure(),\n      a = null == s ? void 0 : s.aws_cognito_password_protection_settings;\n    if (!a) return null;\n    const {\n      passwordPolicyCharacters: t = [],\n      passwordPolicyMinLength: o\n    } = a;\n    return {\n      minLength: o,\n      needsLowerCase: t.includes(\"REQUIRES_LOWERCASE\"),\n      needsUpperCase: t.includes(\"REQUIRES_UPPERCASE\"),\n      needsNumber: t.includes(\"REQUIRES_NUMBERS\"),\n      needsSpecialChar: t.includes(\"REQUIRES_SYMBOLS\")\n    };\n  },\n  t = e => ({\n    validationMode: \"onTouched\",\n    validator: s => s.length >= e,\n    message: `Password must have at least ${e} characters`\n  }),\n  o = {\n    validationMode: \"onTouched\",\n    validator: e => /[a-z]/.test(e),\n    message: \"Password must have lower case letters\"\n  },\n  r = {\n    validationMode: \"onTouched\",\n    validator: e => /[A-Z]/.test(e),\n    message: \"Password must have upper case letters\"\n  },\n  n = {\n    validationMode: \"onTouched\",\n    validator: e => /[0-9]/.test(e),\n    message: \"Password must have numbers\"\n  },\n  i = {\n    validationMode: \"onTouched\",\n    validator: e => s(e),\n    message: \"Password must have special characters\"\n  },\n  d = e => ({\n    validationMode: \"onTouched\",\n    validator: s => e === s,\n    message: \"Your passwords must match\"\n  }),\n  u = () => {\n    const e = a();\n    if (!e) return [];\n    const s = [],\n      {\n        minLength: d,\n        needsLowerCase: u,\n        needsUpperCase: l,\n        needsNumber: c,\n        needsSpecialChar: h\n      } = e;\n    return d && s.push(t(d)), u && s.push(o), l && s.push(r), c && s.push(n), h && s.push(i), s;\n  },\n  l = e => [d(e)],\n  c = ({\n    validationMode: e,\n    eventType: s,\n    hasBlurred: a\n  }) => {\n    switch (e) {\n      case \"onBlur\":\n        return \"blur\" === s;\n      case \"onChange\":\n        return \"change\" === s;\n      case \"onTouched\":\n        return \"blur\" === s || a;\n    }\n  },\n  h = ({\n    value: e,\n    validators: s,\n    eventType: a,\n    hasBlurred: t\n  }) => e ? s.reduce((s, o) => {\n    const {\n      validator: r,\n      validationMode: n,\n      message: i\n    } = o;\n    if (c({\n      validationMode: n,\n      eventType: a,\n      hasBlurred: t\n    })) {\n      return !r(e) ? [...s, i] : s;\n    }\n    return s;\n  }, []) : [];\nexport { l as getDefaultConfirmPasswordValidators, u as getDefaultPasswordValidators, t as getHasMinLength, d as getMatchesConfirmPassword, a as getPasswordRequirement, o as hasLowerCase, n as hasNumber, i as hasSpecialChar, r as hasUpperCase, h as runFieldValidators, c as shouldValidate };","map":{"version":3,"names":["Amplify","e","hasSpecialChars","s","a","configure","aws_cognito_password_protection_settings","passwordPolicyCharacters","t","passwordPolicyMinLength","o","minLength","needsLowerCase","includes","needsUpperCase","needsNumber","needsSpecialChar","validationMode","validator","length","message","test","r","n","i","d","u","l","c","h","push","eventType","hasBlurred","value","validators","reduce","getDefaultConfirmPasswordValidators","getDefaultPasswordValidators","getHasMinLength","getMatchesConfirmPassword","getPasswordRequirement","hasLowerCase","hasNumber","hasSpecialChar","hasUpperCase","runFieldValidators","shouldValidate"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/ui/dist/esm/helpers/accountSettings/validator.mjs"],"sourcesContent":["import{Amplify as e}from\"aws-amplify\";import\"../../types/authenticator/user.mjs\";import\"../../types/authenticator/attributes.mjs\";import\"../../types/primitives/componentClassName.mjs\";import\"../../i18n/translations.mjs\";import{hasSpecialChars as s}from\"../authenticator/utils.mjs\";const a=()=>{const s=e.configure(),a=null==s?void 0:s.aws_cognito_password_protection_settings;if(!a)return null;const{passwordPolicyCharacters:t=[],passwordPolicyMinLength:o}=a;return{minLength:o,needsLowerCase:t.includes(\"REQUIRES_LOWERCASE\"),needsUpperCase:t.includes(\"REQUIRES_UPPERCASE\"),needsNumber:t.includes(\"REQUIRES_NUMBERS\"),needsSpecialChar:t.includes(\"REQUIRES_SYMBOLS\")}},t=e=>({validationMode:\"onTouched\",validator:s=>s.length>=e,message:`Password must have at least ${e} characters`}),o={validationMode:\"onTouched\",validator:e=>/[a-z]/.test(e),message:\"Password must have lower case letters\"},r={validationMode:\"onTouched\",validator:e=>/[A-Z]/.test(e),message:\"Password must have upper case letters\"},n={validationMode:\"onTouched\",validator:e=>/[0-9]/.test(e),message:\"Password must have numbers\"},i={validationMode:\"onTouched\",validator:e=>s(e),message:\"Password must have special characters\"},d=e=>({validationMode:\"onTouched\",validator:s=>e===s,message:\"Your passwords must match\"}),u=()=>{const e=a();if(!e)return[];const s=[],{minLength:d,needsLowerCase:u,needsUpperCase:l,needsNumber:c,needsSpecialChar:h}=e;return d&&s.push(t(d)),u&&s.push(o),l&&s.push(r),c&&s.push(n),h&&s.push(i),s},l=e=>[d(e)],c=({validationMode:e,eventType:s,hasBlurred:a})=>{switch(e){case\"onBlur\":return\"blur\"===s;case\"onChange\":return\"change\"===s;case\"onTouched\":return\"blur\"===s||a}},h=({value:e,validators:s,eventType:a,hasBlurred:t})=>e?s.reduce(((s,o)=>{const{validator:r,validationMode:n,message:i}=o;if(c({validationMode:n,eventType:a,hasBlurred:t})){return!r(e)?[...s,i]:s}return s}),[]):[];export{l as getDefaultConfirmPasswordValidators,u as getDefaultPasswordValidators,t as getHasMinLength,d as getMatchesConfirmPassword,a as getPasswordRequirement,o as hasLowerCase,n as hasNumber,i as hasSpecialChar,r as hasUpperCase,h as runFieldValidators,c as shouldValidate};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}