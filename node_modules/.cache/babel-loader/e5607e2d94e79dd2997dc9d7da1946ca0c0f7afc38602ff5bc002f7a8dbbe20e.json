{"ast":null,"code":"const ModeHandler = function (mode, DrawContext) {\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n  mode.start.call(ctx);\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\nexport default ModeHandler;","map":{"version":3,"names":["ModeHandler","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","handles","iHandle","length","handle","skipRender","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/lib/mode_handler.js"],"sourcesContent":["\nconst ModeHandler = function(mode, DrawContext) {\n\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nexport default ModeHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}