{"ast":null,"code":"/* global document */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nfunction FullscreenControl(props) {\n  const ctrl = useControl(({\n    mapLib\n  }) => new mapLib.FullscreenControl({\n    container: props.containerId && document.getElementById(props.containerId)\n  }), {\n    position: props.position\n  });\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n  return null;\n}\nexport default React.memo(FullscreenControl);","map":{"version":3,"names":["React","useEffect","applyReactStyle","useControl","FullscreenControl","props","ctrl","mapLib","container","containerId","document","getElementById","position","_controlContainer","style","memo"],"sources":["C:\\Users\\jonat\\aws_poc\\frontend\\node_modules\\react-map-gl\\src\\components\\fullscreen-control.ts"],"sourcesContent":["/* global document */\nimport * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxFullscreenControl} from '../types';\n\nexport type FullscreenControlProps = {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl(props: FullscreenControlProps): null {\n  const ctrl = useControl<MapboxFullscreenControl>(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }),\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(FullscreenControl);\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,OAAOC,UAAU,MAAM,eAAe;AActC,SAASC,iBAAiBA,CAACC,KAA6B;EACtD,MAAMC,IAAI,GAAGH,UAAU,CACrB,CAAC;IAACI;EAAM,CAAC,KACP,IAAIA,MAAM,CAACH,iBAAiB,CAAC;IAC3BI,SAAS,EAAEH,KAAK,CAACI,WAAW,IAAIC,QAAQ,CAACC,cAAc,CAACN,KAAK,CAACI,WAAW;GAC1E,CAAC,EACJ;IAACG,QAAQ,EAAEP,KAAK,CAACO;EAAQ,CAAC,CAC3B;EAEDX,SAAS,CAAC,MAAK;IACb;IACAC,eAAe,CAACI,IAAI,CAACO,iBAAiB,EAAER,KAAK,CAACS,KAAK,CAAC;EACtD,CAAC,EAAE,CAACT,KAAK,CAACS,KAAK,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb;AAEA,eAAed,KAAK,CAACe,IAAI,CAACX,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}