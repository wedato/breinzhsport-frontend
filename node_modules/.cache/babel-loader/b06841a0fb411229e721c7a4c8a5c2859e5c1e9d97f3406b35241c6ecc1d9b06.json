{"ast":null,"code":"import { getActorContext as o, getActorState as s } from \"../actor.mjs\";\nimport { defaultFormFieldOptions as e } from \"../constants.mjs\";\nimport { getPrimaryAlias as r } from \"../context.mjs\";\nimport { isAuthFieldWithDefaults as t } from \"../form.mjs\";\nconst n = (s, r) => {\n    const {\n      country_code: t\n    } = o(s);\n    let n = e[r];\n    const {\n      type: a\n    } = n;\n    return \"tel\" === a && (n = Object.assign(Object.assign({}, n), {\n      dialCode: t\n    })), n;\n  },\n  a = o => {\n    const s = r(o);\n    return Object.assign(Object.assign({}, n(o, s)), {\n      autocomplete: \"username\"\n    });\n  },\n  c = o => ({\n    confirmation_code: Object.assign(Object.assign({}, n(o, \"confirmation_code\")), {\n      label: \"Code *\",\n      placeholder: \"Code\"\n    })\n  }),\n  i = {\n    signIn: o => ({\n      username: Object.assign({}, a(o)),\n      password: Object.assign(Object.assign({}, n(o, \"password\")), {\n        autocomplete: \"current-password\"\n      })\n    }),\n    signUp: o => {\n      const {\n          loginMechanisms: s,\n          signUpAttributes: e\n        } = o.context.config,\n        c = r(o),\n        i = Array.from(new Set([...s, \"password\", \"confirm_password\", ...e])),\n        d = {};\n      for (const s of i) if (t(s)) {\n        const e = s === c ? a(o) : n(o, s);\n        d[s] = Object.assign({}, e);\n      } else console.debug(`Authenticator does not have a default implementation for ${s}. Customize SignUp FormFields to add your own.`);\n      return d;\n    },\n    confirmSignUp: o => ({\n      confirmation_code: Object.assign(Object.assign({}, n(o, \"confirmation_code\")), {\n        placeholder: \"Enter your code\"\n      })\n    }),\n    confirmSignIn: c,\n    forceNewPassword: o => {\n      const e = s(o),\n        {\n          requiredAttributes: r\n        } = e.context,\n        a = Array.from(new Set([\"password\", \"confirm_password\", ...r])),\n        c = {};\n      for (const s of a) t(s) ? c[s] = Object.assign({}, n(o, s)) : console.debug(`Authenticator does not have a default implementation for ${s}. Customize ForceNewPassword FormFields to add your own.`);\n      return c;\n    },\n    resetPassword: o => {\n      const s = r(o),\n        {\n          label: t\n        } = e[s];\n      return {\n        username: Object.assign(Object.assign({}, a(o)), {\n          label: `Enter your ${t.toLowerCase()}`,\n          placeholder: `Enter your ${t.toLowerCase()}`\n        })\n      };\n    },\n    confirmResetPassword: o => Object.assign(Object.assign({}, c(o)), {\n      password: Object.assign(Object.assign({}, n(o, \"password\")), {\n        label: \"New Password\",\n        placeholder: \"New Password\"\n      }),\n      confirm_password: Object.assign(Object.assign({}, n(o, \"confirm_password\")), {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password\"\n      })\n    }),\n    confirmVerifyUser: c,\n    setupTOTP: c\n  };\nexport { i as defaultFormFieldsGetters, a as getAliasDefaultFormField };","map":{"version":3,"names":["getActorContext","o","getActorState","s","defaultFormFieldOptions","e","getPrimaryAlias","r","isAuthFieldWithDefaults","t","n","country_code","type","a","Object","assign","dialCode","autocomplete","c","confirmation_code","label","placeholder","i","signIn","username","password","signUp","loginMechanisms","signUpAttributes","context","config","Array","from","Set","d","console","debug","confirmSignUp","confirmSignIn","forceNewPassword","requiredAttributes","resetPassword","toLowerCase","confirmResetPassword","confirm_password","confirmVerifyUser","setupTOTP","defaultFormFieldsGetters","getAliasDefaultFormField"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/ui/dist/esm/helpers/authenticator/formFields/defaults.mjs"],"sourcesContent":["import{getActorContext as o,getActorState as s}from\"../actor.mjs\";import{defaultFormFieldOptions as e}from\"../constants.mjs\";import{getPrimaryAlias as r}from\"../context.mjs\";import{isAuthFieldWithDefaults as t}from\"../form.mjs\";const n=(s,r)=>{const{country_code:t}=o(s);let n=e[r];const{type:a}=n;return\"tel\"===a&&(n=Object.assign(Object.assign({},n),{dialCode:t})),n},a=o=>{const s=r(o);return Object.assign(Object.assign({},n(o,s)),{autocomplete:\"username\"})},c=o=>({confirmation_code:Object.assign(Object.assign({},n(o,\"confirmation_code\")),{label:\"Code *\",placeholder:\"Code\"})}),i={signIn:o=>({username:Object.assign({},a(o)),password:Object.assign(Object.assign({},n(o,\"password\")),{autocomplete:\"current-password\"})}),signUp:o=>{const{loginMechanisms:s,signUpAttributes:e}=o.context.config,c=r(o),i=Array.from(new Set([...s,\"password\",\"confirm_password\",...e])),d={};for(const s of i)if(t(s)){const e=s===c?a(o):n(o,s);d[s]=Object.assign({},e)}else console.debug(`Authenticator does not have a default implementation for ${s}. Customize SignUp FormFields to add your own.`);return d},confirmSignUp:o=>({confirmation_code:Object.assign(Object.assign({},n(o,\"confirmation_code\")),{placeholder:\"Enter your code\"})}),confirmSignIn:c,forceNewPassword:o=>{const e=s(o),{requiredAttributes:r}=e.context,a=Array.from(new Set([\"password\",\"confirm_password\",...r])),c={};for(const s of a)t(s)?c[s]=Object.assign({},n(o,s)):console.debug(`Authenticator does not have a default implementation for ${s}. Customize ForceNewPassword FormFields to add your own.`);return c},resetPassword:o=>{const s=r(o),{label:t}=e[s];return{username:Object.assign(Object.assign({},a(o)),{label:`Enter your ${t.toLowerCase()}`,placeholder:`Enter your ${t.toLowerCase()}`})}},confirmResetPassword:o=>Object.assign(Object.assign({},c(o)),{password:Object.assign(Object.assign({},n(o,\"password\")),{label:\"New Password\",placeholder:\"New Password\"}),confirm_password:Object.assign(Object.assign({},n(o,\"confirm_password\")),{label:\"Confirm Password\",placeholder:\"Confirm Password\"})}),confirmVerifyUser:c,setupTOTP:c};export{i as defaultFormFieldsGetters,a as getAliasDefaultFormField};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}