{"ast":null,"code":"'use strict';\n\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar whichCollection = require('which-collection');\nvar whichTypedArray = require('which-typed-array');\nvar isArray = require('isarray');\nvar isDate = require('is-date-object');\nvar isRegex = require('is-regex');\nvar isWeakRef = require('is-weakref');\nvar isFinalizationRegistry = require('is-finalizationregistry');\nvar name = require('function.prototype.name');\nvar isGeneratorFunction = require('is-generator-function');\nvar isAsyncFunction = require('is-async-function');\nvar callBound = require('call-bound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar toStringTag = hasToStringTag && Symbol.toStringTag;\nvar $Object = Object;\n\n/** @type {undefined | ((value: ThisParameterType<typeof Promise.prototype.then>, ...args: Parameters<typeof Promise.prototype.then>) => ReturnType<typeof Promise.prototype.then>)} */\nvar promiseThen = callBound('Promise.prototype.then', true);\n/** @type {<T = unknown>(value: unknown) => value is Promise<T>} */\nvar isPromise = function isPromise(value) {\n  if (!value || typeof value !== 'object' || !promiseThen) {\n    return false;\n  }\n  try {\n    promiseThen(value, null, function () {});\n    return true;\n  } catch (e) {}\n  return false;\n};\n\n/** @type {(builtinName: unknown) => boolean} */\nvar isKnownBuiltin = function isKnownBuiltin(builtinName) {\n  return !!builtinName\n  // primitives\n  && builtinName !== 'BigInt' && builtinName !== 'Boolean' && builtinName !== 'Null' && builtinName !== 'Number' && builtinName !== 'String' && builtinName !== 'Symbol' && builtinName !== 'Undefined'\n  // namespaces\n  && builtinName !== 'Math' && builtinName !== 'JSON' && builtinName !== 'Reflect' && builtinName !== 'Atomics'\n  // collections\n  && builtinName !== 'Map' && builtinName !== 'Set' && builtinName !== 'WeakMap' && builtinName !== 'WeakSet'\n  // typed arrays\n  && builtinName !== 'BigInt64Array' && builtinName !== 'BigUint64Array' && builtinName !== 'Float32Array' && builtinName !== 'Float64Array' && builtinName !== 'Int16Array' && builtinName !== 'Int32Array' && builtinName !== 'Int8Array' && builtinName !== 'Uint16Array' && builtinName !== 'Uint32Array' && builtinName !== 'Uint8Array' && builtinName !== 'Uint8ClampedArray'\n  // checked explicitly\n  && builtinName !== 'Array' && builtinName !== 'Date' && builtinName !== 'FinalizationRegistry' && builtinName !== 'Promise' && builtinName !== 'RegExp' && builtinName !== 'WeakRef'\n  // functions\n  && builtinName !== 'Function' && builtinName !== 'GeneratorFunction' && builtinName !== 'AsyncFunction';\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichBuiltinType(value) {\n  if (value == null) {\n    return value;\n  }\n  // covers: primitives, {,Weak}Map/Set, typed arrays\n  var which = whichBoxedPrimitive($Object(value)) || whichCollection(value) || whichTypedArray(value);\n  if (which) {\n    return which;\n  }\n  if (isArray(value)) {\n    return 'Array';\n  }\n  if (isDate(value)) {\n    return 'Date';\n  }\n  if (isRegex(value)) {\n    return 'RegExp';\n  }\n  if (isWeakRef(value)) {\n    return 'WeakRef';\n  }\n  if (isFinalizationRegistry(value)) {\n    return 'FinalizationRegistry';\n  }\n  if (typeof value === 'function') {\n    if (isGeneratorFunction(value)) {\n      return 'GeneratorFunction';\n    }\n    if (isAsyncFunction(value)) {\n      return 'AsyncFunction';\n    }\n    return 'Function';\n  }\n  if (isPromise(value)) {\n    return 'Promise';\n  }\n  // @ts-expect-error TS can't figure out that `value` is an `object` after the `which` check above\n  if (toStringTag && toStringTag in value) {\n    var tag = value[toStringTag];\n    if (isKnownBuiltin(tag)) {\n      return tag;\n    }\n  }\n  if (typeof value.constructor === 'function') {\n    // eslint-disable-next-line no-extra-parens\n    var constructorName = name(/** @type {Parameters<name>[0]} */value.constructor);\n    if (isKnownBuiltin(constructorName)) {\n      return constructorName;\n    }\n  }\n  return 'Object';\n};","map":{"version":3,"names":["whichBoxedPrimitive","require","whichCollection","whichTypedArray","isArray","isDate","isRegex","isWeakRef","isFinalizationRegistry","name","isGeneratorFunction","isAsyncFunction","callBound","hasToStringTag","toStringTag","Symbol","$Object","Object","promiseThen","isPromise","value","e","isKnownBuiltin","builtinName","module","exports","whichBuiltinType","which","tag","constructor","constructorName"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/which-builtin-type/index.js"],"sourcesContent":["'use strict';\n\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar whichCollection = require('which-collection');\nvar whichTypedArray = require('which-typed-array');\nvar isArray = require('isarray');\nvar isDate = require('is-date-object');\nvar isRegex = require('is-regex');\nvar isWeakRef = require('is-weakref');\nvar isFinalizationRegistry = require('is-finalizationregistry');\nvar name = require('function.prototype.name');\nvar isGeneratorFunction = require('is-generator-function');\nvar isAsyncFunction = require('is-async-function');\nvar callBound = require('call-bound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar toStringTag = hasToStringTag && Symbol.toStringTag;\n\nvar $Object = Object;\n\n/** @type {undefined | ((value: ThisParameterType<typeof Promise.prototype.then>, ...args: Parameters<typeof Promise.prototype.then>) => ReturnType<typeof Promise.prototype.then>)} */\nvar promiseThen = callBound('Promise.prototype.then', true);\n/** @type {<T = unknown>(value: unknown) => value is Promise<T>} */\nvar isPromise = function isPromise(value) {\n\tif (!value || typeof value !== 'object' || !promiseThen) {\n\t\treturn false;\n\t}\n\ttry {\n\t\tpromiseThen(value, null, function () {});\n\t\treturn true;\n\t} catch (e) {}\n\treturn false;\n};\n\n/** @type {(builtinName: unknown) => boolean} */\nvar isKnownBuiltin = function isKnownBuiltin(builtinName) {\n\treturn !!builtinName\n\t\t// primitives\n\t\t&& builtinName !== 'BigInt'\n\t\t&& builtinName !== 'Boolean'\n\t\t&& builtinName !== 'Null'\n\t\t&& builtinName !== 'Number'\n\t\t&& builtinName !== 'String'\n\t\t&& builtinName !== 'Symbol'\n\t\t&& builtinName !== 'Undefined'\n\t\t// namespaces\n\t\t&& builtinName !== 'Math'\n\t\t&& builtinName !== 'JSON'\n\t\t&& builtinName !== 'Reflect'\n\t\t&& builtinName !== 'Atomics'\n\t\t// collections\n\t\t&& builtinName !== 'Map'\n\t\t&& builtinName !== 'Set'\n\t\t&& builtinName !== 'WeakMap'\n\t\t&& builtinName !== 'WeakSet'\n\t\t// typed arrays\n\t\t&& builtinName !== 'BigInt64Array'\n\t\t&& builtinName !== 'BigUint64Array'\n\t\t&& builtinName !== 'Float32Array'\n\t\t&& builtinName !== 'Float64Array'\n\t\t&& builtinName !== 'Int16Array'\n\t\t&& builtinName !== 'Int32Array'\n\t\t&& builtinName !== 'Int8Array'\n\t\t&& builtinName !== 'Uint16Array'\n\t\t&& builtinName !== 'Uint32Array'\n\t\t&& builtinName !== 'Uint8Array'\n\t\t&& builtinName !== 'Uint8ClampedArray'\n\t\t// checked explicitly\n\t\t&& builtinName !== 'Array'\n\t\t&& builtinName !== 'Date'\n\t\t&& builtinName !== 'FinalizationRegistry'\n\t\t&& builtinName !== 'Promise'\n\t\t&& builtinName !== 'RegExp'\n\t\t&& builtinName !== 'WeakRef'\n\t\t// functions\n\t\t&& builtinName !== 'Function'\n\t\t&& builtinName !== 'GeneratorFunction'\n\t\t&& builtinName !== 'AsyncFunction';\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichBuiltinType(value) {\n\tif (value == null) {\n\t\treturn value;\n\t}\n\t// covers: primitives, {,Weak}Map/Set, typed arrays\n\tvar which = whichBoxedPrimitive($Object(value)) || whichCollection(value) || whichTypedArray(value);\n\tif (which) {\n\t\treturn which;\n\t}\n\tif (isArray(value)) {\n\t\treturn 'Array';\n\t}\n\tif (isDate(value)) {\n\t\treturn 'Date';\n\t}\n\tif (isRegex(value)) {\n\t\treturn 'RegExp';\n\t}\n\tif (isWeakRef(value)) {\n\t\treturn 'WeakRef';\n\t}\n\tif (isFinalizationRegistry(value)) {\n\t\treturn 'FinalizationRegistry';\n\t}\n\tif (typeof value === 'function') {\n\t\tif (isGeneratorFunction(value)) {\n\t\t\treturn 'GeneratorFunction';\n\t\t}\n\t\tif (isAsyncFunction(value)) {\n\t\t\treturn 'AsyncFunction';\n\t\t}\n\t\treturn 'Function';\n\t}\n\tif (isPromise(value)) {\n\t\treturn 'Promise';\n\t}\n\t// @ts-expect-error TS can't figure out that `value` is an `object` after the `which` check above\n\tif (toStringTag && toStringTag in value) {\n\t\tvar tag = value[toStringTag];\n\t\tif (isKnownBuiltin(tag)) {\n\t\t\treturn tag;\n\t\t}\n\t}\n\tif (typeof value.constructor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar constructorName = name(/** @type {Parameters<name>[0]} */ (value.constructor));\n\t\tif (isKnownBuiltin(constructorName)) {\n\t\t\treturn constructorName;\n\t\t}\n\t}\n\treturn 'Object';\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}