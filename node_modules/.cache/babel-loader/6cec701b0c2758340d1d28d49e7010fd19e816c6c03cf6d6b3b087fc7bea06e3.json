{"ast":null,"code":"const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst Constants = require(\"../../lib/utils/constants\");\nconst doubleClickZoom = require(\"../../lib/utils/double_click_zoom\");\nconst circle = require('@turf/circle').default;\nconst CircleMode = {\n  ...MapboxDraw.modes.draw_polygon\n};\nconst DEFAULT_RADIUS_IN_KM = 2;\nCircleMode.onSetup = function (opts) {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      isCircle: true,\n      center: []\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n  this.addFeature(polygon);\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    initialRadiusInKm: opts.initialRadiusInKm || DEFAULT_RADIUS_IN_KM,\n    polygon,\n    currentVertexPosition: 0\n  };\n};\nCircleMode.clickAnywhere = function (state, e) {\n  if (state.currentVertexPosition === 0) {\n    state.currentVertexPosition++;\n    const center = [e.lngLat.lng, e.lngLat.lat];\n    const circleFeature = circle(center, state.initialRadiusInKm);\n    state.polygon.incomingCoords(circleFeature.geometry.coordinates);\n    state.polygon.properties.center = center;\n    state.polygon.properties.radiusInKm = state.initialRadiusInKm;\n  }\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.polygon.id]\n  });\n};\nmodule.exports = CircleMode;","map":{"version":3,"names":["MapboxDraw","require","Constants","doubleClickZoom","circle","default","CircleMode","modes","draw_polygon","DEFAULT_RADIUS_IN_KM","onSetup","opts","polygon","newFeature","type","geojsonTypes","FEATURE","properties","isCircle","center","geometry","POLYGON","coordinates","addFeature","clearSelectedFeatures","disable","updateUIClasses","mouse","cursors","ADD","activateUIButton","types","setActionableState","trash","initialRadiusInKm","currentVertexPosition","clickAnywhere","state","e","lngLat","lng","lat","circleFeature","incomingCoords","radiusInKm","changeMode","SIMPLE_SELECT","featureIds","id","module","exports"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/maplibre-gl-draw-circle/lib/modes/CircleMode.js"],"sourcesContent":["const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst Constants = require(\"../../lib/utils/constants\");\nconst doubleClickZoom = require(\"../../lib/utils/double_click_zoom\");\nconst circle = require('@turf/circle').default;\n\nconst CircleMode = {...MapboxDraw.modes.draw_polygon};\nconst DEFAULT_RADIUS_IN_KM = 2;\n\nCircleMode.onSetup = function(opts) {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      isCircle: true,\n      center: []\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    initialRadiusInKm: opts.initialRadiusInKm || DEFAULT_RADIUS_IN_KM,\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nCircleMode.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition === 0) {\n    state.currentVertexPosition++;\n    const center = [e.lngLat.lng, e.lngLat.lat];\n    const circleFeature = circle(center, state.initialRadiusInKm);\n    state.polygon.incomingCoords(circleFeature.geometry.coordinates);\n    state.polygon.properties.center = center;\n    state.polygon.properties.radiusInKm = state.initialRadiusInKm;\n  }\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nmodule.exports = CircleMode;"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACpD,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,eAAe,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AACpE,MAAMG,MAAM,GAAGH,OAAO,CAAC,cAAc,CAAC,CAACI,OAAO;AAE9C,MAAMC,UAAU,GAAG;EAAC,GAAGN,UAAU,CAACO,KAAK,CAACC;AAAY,CAAC;AACrD,MAAMC,oBAAoB,GAAG,CAAC;AAE9BH,UAAU,CAACI,OAAO,GAAG,UAASC,IAAI,EAAE;EAClC,MAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC;IAC9BC,IAAI,EAAEZ,SAAS,CAACa,YAAY,CAACC,OAAO;IACpCC,UAAU,EAAE;MACVC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC;IACDC,QAAQ,EAAE;MACRN,IAAI,EAAEZ,SAAS,CAACa,YAAY,CAACM,OAAO;MACpCC,WAAW,EAAE,CAAC,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACC,UAAU,CAACX,OAAO,CAAC;EAExB,IAAI,CAACY,qBAAqB,CAAC,CAAC;EAC5BrB,eAAe,CAACsB,OAAO,CAAC,IAAI,CAAC;EAC7B,IAAI,CAACC,eAAe,CAAC;IAAEC,KAAK,EAAEzB,SAAS,CAAC0B,OAAO,CAACC;EAAI,CAAC,CAAC;EACtD,IAAI,CAACC,gBAAgB,CAAC5B,SAAS,CAAC6B,KAAK,CAACV,OAAO,CAAC;EAC9C,IAAI,CAACW,kBAAkB,CAAC;IACtBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,OAAO;IACLC,iBAAiB,EAAEvB,IAAI,CAACuB,iBAAiB,IAAIzB,oBAAoB;IACjEG,OAAO;IACPuB,qBAAqB,EAAE;EACzB,CAAC;AACH,CAAC;AAED7B,UAAU,CAAC8B,aAAa,GAAG,UAASC,KAAK,EAAEC,CAAC,EAAE;EAC5C,IAAID,KAAK,CAACF,qBAAqB,KAAK,CAAC,EAAE;IACrCE,KAAK,CAACF,qBAAqB,EAAE;IAC7B,MAAMhB,MAAM,GAAG,CAACmB,CAAC,CAACC,MAAM,CAACC,GAAG,EAAEF,CAAC,CAACC,MAAM,CAACE,GAAG,CAAC;IAC3C,MAAMC,aAAa,GAAGtC,MAAM,CAACe,MAAM,EAAEkB,KAAK,CAACH,iBAAiB,CAAC;IAC7DG,KAAK,CAACzB,OAAO,CAAC+B,cAAc,CAACD,aAAa,CAACtB,QAAQ,CAACE,WAAW,CAAC;IAChEe,KAAK,CAACzB,OAAO,CAACK,UAAU,CAACE,MAAM,GAAGA,MAAM;IACxCkB,KAAK,CAACzB,OAAO,CAACK,UAAU,CAAC2B,UAAU,GAAGP,KAAK,CAACH,iBAAiB;EAC/D;EACA,OAAO,IAAI,CAACW,UAAU,CAAC3C,SAAS,CAACK,KAAK,CAACuC,aAAa,EAAE;IAAEC,UAAU,EAAE,CAACV,KAAK,CAACzB,OAAO,CAACoC,EAAE;EAAE,CAAC,CAAC;AAC3F,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG5C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}