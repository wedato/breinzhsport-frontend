{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, DateUtils, Signer } from '@aws-amplify/core';\nimport axios from 'axios';\nimport { parse, format } from 'url';\nvar logger = new Logger('RestClient');\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nvar RestClient = /** @class */function () {\n  /**\n   * @param {RestClientOptions} [options] - Instance options\n   */\n  function RestClient(options) {\n    this._region = 'us-east-1'; // this will be updated by endpoint function\n    this._service = 'execute-api'; // this can be updated by endpoint function\n    this._custom_header = undefined; // this can be updated by endpoint function\n    /**\n     * This weak map provides functionality to let clients cancel\n     * in-flight axios requests. https://github.com/axios/axios#cancellation\n     *\n     * 1. For every axios request, a unique cancel token is generated and added in the request.\n     * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n     * 3. The promise is returned to the client.\n     * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n     * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n     * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n     * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n     *\n     * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n     */\n    this._cancelTokenMap = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n    if (this._cancelTokenMap == null) {\n      this._cancelTokenMap = new WeakMap();\n    }\n  }\n  /**\n  * Update AWS credentials\n  * @param {AWSCredentials} credentials - AWS credentials\n  *\n  updateCredentials(credentials: AWSCredentials) {\n      this.options.credentials = credentials;\n  }\n  */\n  /**\n   * Basic HTTP request. Customizable\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {string} method - Request HTTP method\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parsed_url, url, region, service, custom_header, params, libraryHeaders, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl, credentials, error_1, signedParams, response, error_2, headers, dateHeader, responseDate, requestDate, rawClientDate;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            logger.debug(method, urlOrApiInfo);\n            region = 'us-east-1';\n            service = 'execute-api';\n            custom_header = undefined;\n            if (typeof urlOrApiInfo === 'string') {\n              parsed_url = this._parseUrl(urlOrApiInfo);\n              url = urlOrApiInfo;\n            } else {\n              url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service;\n              parsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n            }\n            params = {\n              method: method,\n              url: url,\n              host: parsed_url.host,\n              path: parsed_url.path,\n              headers: {},\n              data: null,\n              responseType: 'json',\n              timeout: 0,\n              cancelToken: null\n            };\n            libraryHeaders = {};\n            initParams = Object.assign({}, init);\n            isAllResponse = initParams.response;\n            if (initParams.body) {\n              if (typeof FormData === 'function' && initParams.body instanceof FormData) {\n                libraryHeaders['Content-Type'] = 'multipart/form-data';\n                params.data = initParams.body;\n              } else {\n                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n                params.data = JSON.stringify(initParams.body);\n              }\n            }\n            if (initParams.responseType) {\n              params.responseType = initParams.responseType;\n            }\n            if (initParams.withCredentials) {\n              params['withCredentials'] = initParams.withCredentials;\n            }\n            if (initParams.timeout) {\n              params.timeout = initParams.timeout;\n            }\n            if (initParams.cancellableToken) {\n              params.cancelToken = initParams.cancellableToken.token;\n            }\n            params['signerServiceInfo'] = initParams.signerServiceInfo;\n            if (!(typeof custom_header === 'function')) return [3 /*break*/, 2];\n            return [4 /*yield*/, custom_header()];\n          case 1:\n            _a = _c.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _a = undefined;\n            _c.label = 3;\n          case 3:\n            custom_header_obj = _a;\n            params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);\n            _b = parse(url, true, true), search = _b.search, parsedUrl = __rest(_b, [\"search\"]);\n            params.url = format(__assign(__assign({}, parsedUrl), {\n              query: __assign(__assign({}, parsedUrl.query), initParams.queryStringParameters || {})\n            }));\n            // Do not sign the request if client has added 'Authorization' header,\n            // which means custom authorizer.\n            if (typeof params.headers['Authorization'] !== 'undefined') {\n              params.headers = Object.keys(params.headers).reduce(function (acc, k) {\n                if (params.headers[k]) {\n                  acc[k] = params.headers[k];\n                }\n                return acc;\n                // tslint:disable-next-line:align\n              }, {});\n              return [2 /*return*/, this._request(params, isAllResponse)];\n            }\n            _c.label = 4;\n          case 4:\n            _c.trys.push([4, 6,, 7]);\n            return [4 /*yield*/, this.Credentials.get()];\n          case 5:\n            credentials = _c.sent();\n            return [3 /*break*/, 7];\n          case 6:\n            error_1 = _c.sent();\n            logger.debug('No credentials available, the request will be unsigned');\n            return [2 /*return*/, this._request(params, isAllResponse)];\n          case 7:\n            _c.trys.push([7, 9,, 10]);\n            signedParams = this._sign(__assign({}, params), credentials, {\n              region: region,\n              service: service\n            });\n            return [4 /*yield*/, axios(signedParams)];\n          case 8:\n            response = _c.sent();\n            return [2 /*return*/, isAllResponse ? response : response.data];\n          case 9:\n            error_2 = _c.sent();\n            logger.debug(error_2);\n            if (DateUtils.isClockSkewError(error_2)) {\n              headers = error_2.response.headers;\n              dateHeader = headers && (headers.date || headers.Date);\n              responseDate = new Date(dateHeader);\n              requestDate = DateUtils.getDateFromHeaderString(signedParams.headers['x-amz-date']);\n              // Compare local clock to the server clock\n              if (DateUtils.isClockSkewed(responseDate)) {\n                rawClientDate = requestDate.getTime() - DateUtils.getClockOffset();\n                DateUtils.setClockOffset(responseDate.getTime() - rawClientDate);\n                return [2 /*return*/, this.ajax(urlOrApiInfo, method, init)];\n              }\n            }\n            throw error_2;\n          case 10:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * GET HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {JSON} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.get = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'GET', init);\n  };\n  /**\n   * PUT HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.put = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PUT', init);\n  };\n  /**\n   * PATCH HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.patch = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PATCH', init);\n  };\n  /**\n   * POST HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.post = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'POST', init);\n  };\n  /**\n   * DELETE HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.del = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'DELETE', init);\n  };\n  /**\n   * HEAD HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestClient.prototype.head = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'HEAD', init);\n  };\n  /**\n   * Cancel an inflight API request\n   * @param {Promise<any>} request - The request promise to cancel\n   * @param {string} [message] - A message to include in the cancelation exception\n   */\n  RestClient.prototype.cancel = function (request, message) {\n    var source = this._cancelTokenMap.get(request);\n    if (source) {\n      source.cancel(message);\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n  RestClient.prototype.hasCancelToken = function (request) {\n    return this._cancelTokenMap.has(request);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  RestClient.prototype.isCancel = function (error) {\n    return axios.isCancel(error);\n  };\n  /**\n   * Retrieves a new and unique cancel token which can be\n   * provided in an axios request to be cancelled later.\n   */\n  RestClient.prototype.getCancellableToken = function () {\n    return axios.CancelToken.source();\n  };\n  /**\n   * Updates the weakmap with a response promise and its\n   * cancel token such that the cancel token can be easily\n   * retrieved (and used for cancelling the request)\n   */\n  RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {\n    this._cancelTokenMap.set(promise, cancelTokenSource);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  RestClient.prototype.endpoint = function (apiName) {\n    var _this = this;\n    var cloud_logic_array = this._options.endpoints;\n    var response = '';\n    if (!Array.isArray(cloud_logic_array)) {\n      return response;\n    }\n    cloud_logic_array.forEach(function (v) {\n      if (v.name === apiName) {\n        response = v.endpoint;\n        if (typeof v.region === 'string') {\n          _this._region = v.region;\n        } else if (typeof _this._options.region === 'string') {\n          _this._region = _this._options.region;\n        }\n        if (typeof v.service === 'string') {\n          _this._service = v.service || 'execute-api';\n        } else {\n          _this._service = 'execute-api';\n        }\n        if (typeof v.custom_header === 'function') {\n          _this._custom_header = v.custom_header;\n        } else {\n          _this._custom_header = undefined;\n        }\n      }\n    });\n    return response;\n  };\n  /** private methods **/\n  RestClient.prototype._sign = function (params, credentials, _a) {\n    var service = _a.service,\n      region = _a.region;\n    var signerServiceInfoParams = params.signerServiceInfo,\n      otherParams = __rest(params, [\"signerServiceInfo\"]);\n    var endpoint_region = region || this._region || this._options.region;\n    var endpoint_service = service || this._service || this._options.service;\n    var creds = {\n      secret_key: credentials.secretAccessKey,\n      access_key: credentials.accessKeyId,\n      session_token: credentials.sessionToken\n    };\n    var endpointInfo = {\n      region: endpoint_region,\n      service: endpoint_service\n    };\n    var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);\n    var signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n    if (signed_params.data) {\n      signed_params.body = signed_params.data;\n    }\n    logger.debug('Signed Request: ', signed_params);\n    delete signed_params.headers['host'];\n    return signed_params;\n  };\n  RestClient.prototype._request = function (params, isAllResponse) {\n    if (isAllResponse === void 0) {\n      isAllResponse = false;\n    }\n    return axios(params).then(function (response) {\n      return isAllResponse ? response : response.data;\n    }).catch(function (error) {\n      logger.debug(error);\n      throw error;\n    });\n  };\n  RestClient.prototype._parseUrl = function (url) {\n    var parts = url.split('/');\n    return {\n      host: parts[2],\n      path: '/' + parts.slice(3).join('/')\n    };\n  };\n  return RestClient;\n}();\nexport { RestClient };","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","ConsoleLogger","Logger","Credentials","DateUtils","Signer","axios","parse","format","logger","RestClient","options","_region","_service","_custom_header","undefined","_cancelTokenMap","_options","debug","WeakMap","prototype","ajax","urlOrApiInfo","method","init","parsed_url","url","region","service","custom_header","params","libraryHeaders","initParams","isAllResponse","custom_header_obj","_a","_b","search","parsedUrl","credentials","error_1","signedParams","response","error_2","headers","dateHeader","responseDate","requestDate","rawClientDate","_c","label","_parseUrl","endpoint","host","path","data","responseType","timeout","cancelToken","Object","assign","body","FormData","JSON","stringify","withCredentials","cancellableToken","token","signerServiceInfo","sent","query","queryStringParameters","keys","reduce","acc","k","_request","trys","push","get","_sign","isClockSkewError","date","Date","getDateFromHeaderString","isClockSkewed","getTime","getClockOffset","setClockOffset","put","patch","post","del","head","cancel","request","message","source","hasCancelToken","has","isCancel","error","getCancellableToken","CancelToken","updateRequestToBeCancellable","promise","cancelTokenSource","set","apiName","_this","cloud_logic_array","endpoints","Array","isArray","forEach","v","name","signerServiceInfoParams","otherParams","endpoint_region","endpoint_service","creds","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","endpointInfo","signed_params","sign","then","catch","parts","split","slice","join"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/api-rest/lib-esm/RestClient.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, DateUtils, Signer, } from '@aws-amplify/core';\nimport axios from 'axios';\nimport { parse, format } from 'url';\nvar logger = new Logger('RestClient');\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nvar RestClient = /** @class */ (function () {\n    /**\n     * @param {RestClientOptions} [options] - Instance options\n     */\n    function RestClient(options) {\n        this._region = 'us-east-1'; // this will be updated by endpoint function\n        this._service = 'execute-api'; // this can be updated by endpoint function\n        this._custom_header = undefined; // this can be updated by endpoint function\n        /**\n         * This weak map provides functionality to let clients cancel\n         * in-flight axios requests. https://github.com/axios/axios#cancellation\n         *\n         * 1. For every axios request, a unique cancel token is generated and added in the request.\n         * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n         * 3. The promise is returned to the client.\n         * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n         * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n         * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n         * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n         *\n         * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n         */\n        this._cancelTokenMap = null;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n        if (this._cancelTokenMap == null) {\n            this._cancelTokenMap = new WeakMap();\n        }\n    }\n    /**\n    * Update AWS credentials\n    * @param {AWSCredentials} credentials - AWS credentials\n    *\n    updateCredentials(credentials: AWSCredentials) {\n        this.options.credentials = credentials;\n    }\n*/\n    /**\n     * Basic HTTP request. Customizable\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {string} method - Request HTTP method\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsed_url, url, region, service, custom_header, params, libraryHeaders, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl, credentials, error_1, signedParams, response, error_2, headers, dateHeader, responseDate, requestDate, rawClientDate;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        logger.debug(method, urlOrApiInfo);\n                        region = 'us-east-1';\n                        service = 'execute-api';\n                        custom_header = undefined;\n                        if (typeof urlOrApiInfo === 'string') {\n                            parsed_url = this._parseUrl(urlOrApiInfo);\n                            url = urlOrApiInfo;\n                        }\n                        else {\n                            (url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service);\n                            parsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n                        }\n                        params = {\n                            method: method,\n                            url: url,\n                            host: parsed_url.host,\n                            path: parsed_url.path,\n                            headers: {},\n                            data: null,\n                            responseType: 'json',\n                            timeout: 0,\n                            cancelToken: null,\n                        };\n                        libraryHeaders = {};\n                        initParams = Object.assign({}, init);\n                        isAllResponse = initParams.response;\n                        if (initParams.body) {\n                            if (typeof FormData === 'function' &&\n                                initParams.body instanceof FormData) {\n                                libraryHeaders['Content-Type'] = 'multipart/form-data';\n                                params.data = initParams.body;\n                            }\n                            else {\n                                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n                                params.data = JSON.stringify(initParams.body);\n                            }\n                        }\n                        if (initParams.responseType) {\n                            params.responseType = initParams.responseType;\n                        }\n                        if (initParams.withCredentials) {\n                            params['withCredentials'] = initParams.withCredentials;\n                        }\n                        if (initParams.timeout) {\n                            params.timeout = initParams.timeout;\n                        }\n                        if (initParams.cancellableToken) {\n                            params.cancelToken = initParams.cancellableToken.token;\n                        }\n                        params['signerServiceInfo'] = initParams.signerServiceInfo;\n                        if (!(typeof custom_header === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, custom_header()];\n                    case 1:\n                        _a = _c.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = undefined;\n                        _c.label = 3;\n                    case 3:\n                        custom_header_obj = _a;\n                        params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);\n                        _b = parse(url, true, true), search = _b.search, parsedUrl = __rest(_b, [\"search\"]);\n                        params.url = format(__assign(__assign({}, parsedUrl), { query: __assign(__assign({}, parsedUrl.query), (initParams.queryStringParameters || {})) }));\n                        // Do not sign the request if client has added 'Authorization' header,\n                        // which means custom authorizer.\n                        if (typeof params.headers['Authorization'] !== 'undefined') {\n                            params.headers = Object.keys(params.headers).reduce(function (acc, k) {\n                                if (params.headers[k]) {\n                                    acc[k] = params.headers[k];\n                                }\n                                return acc;\n                                // tslint:disable-next-line:align\n                            }, {});\n                            return [2 /*return*/, this._request(params, isAllResponse)];\n                        }\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.Credentials.get()];\n                    case 5:\n                        credentials = _c.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        error_1 = _c.sent();\n                        logger.debug('No credentials available, the request will be unsigned');\n                        return [2 /*return*/, this._request(params, isAllResponse)];\n                    case 7:\n                        _c.trys.push([7, 9, , 10]);\n                        signedParams = this._sign(__assign({}, params), credentials, {\n                            region: region,\n                            service: service,\n                        });\n                        return [4 /*yield*/, axios(signedParams)];\n                    case 8:\n                        response = _c.sent();\n                        return [2 /*return*/, isAllResponse ? response : response.data];\n                    case 9:\n                        error_2 = _c.sent();\n                        logger.debug(error_2);\n                        if (DateUtils.isClockSkewError(error_2)) {\n                            headers = error_2.response.headers;\n                            dateHeader = headers && (headers.date || headers.Date);\n                            responseDate = new Date(dateHeader);\n                            requestDate = DateUtils.getDateFromHeaderString(signedParams.headers['x-amz-date']);\n                            // Compare local clock to the server clock\n                            if (DateUtils.isClockSkewed(responseDate)) {\n                                rawClientDate = requestDate.getTime() - DateUtils.getClockOffset();\n                                DateUtils.setClockOffset(responseDate.getTime() - rawClientDate);\n                                return [2 /*return*/, this.ajax(urlOrApiInfo, method, init)];\n                            }\n                        }\n                        throw error_2;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * GET HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {JSON} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.get = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'GET', init);\n    };\n    /**\n     * PUT HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.put = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'PUT', init);\n    };\n    /**\n     * PATCH HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.patch = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'PATCH', init);\n    };\n    /**\n     * POST HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.post = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'POST', init);\n    };\n    /**\n     * DELETE HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.del = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'DELETE', init);\n    };\n    /**\n     * HEAD HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.head = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'HEAD', init);\n    };\n    /**\n     * Cancel an inflight API request\n     * @param {Promise<any>} request - The request promise to cancel\n     * @param {string} [message] - A message to include in the cancelation exception\n     */\n    RestClient.prototype.cancel = function (request, message) {\n        var source = this._cancelTokenMap.get(request);\n        if (source) {\n            source.cancel(message);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    RestClient.prototype.hasCancelToken = function (request) {\n        return this._cancelTokenMap.has(request);\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    RestClient.prototype.isCancel = function (error) {\n        return axios.isCancel(error);\n    };\n    /**\n     * Retrieves a new and unique cancel token which can be\n     * provided in an axios request to be cancelled later.\n     */\n    RestClient.prototype.getCancellableToken = function () {\n        return axios.CancelToken.source();\n    };\n    /**\n     * Updates the weakmap with a response promise and its\n     * cancel token such that the cancel token can be easily\n     * retrieved (and used for cancelling the request)\n     */\n    RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {\n        this._cancelTokenMap.set(promise, cancelTokenSource);\n    };\n    /**\n     * Getting endpoint for API\n     * @param {string} apiName - The name of the api\n     * @return {string} - The endpoint of the api\n     */\n    RestClient.prototype.endpoint = function (apiName) {\n        var _this = this;\n        var cloud_logic_array = this._options.endpoints;\n        var response = '';\n        if (!Array.isArray(cloud_logic_array)) {\n            return response;\n        }\n        cloud_logic_array.forEach(function (v) {\n            if (v.name === apiName) {\n                response = v.endpoint;\n                if (typeof v.region === 'string') {\n                    _this._region = v.region;\n                }\n                else if (typeof _this._options.region === 'string') {\n                    _this._region = _this._options.region;\n                }\n                if (typeof v.service === 'string') {\n                    _this._service = v.service || 'execute-api';\n                }\n                else {\n                    _this._service = 'execute-api';\n                }\n                if (typeof v.custom_header === 'function') {\n                    _this._custom_header = v.custom_header;\n                }\n                else {\n                    _this._custom_header = undefined;\n                }\n            }\n        });\n        return response;\n    };\n    /** private methods **/\n    RestClient.prototype._sign = function (params, credentials, _a) {\n        var service = _a.service, region = _a.region;\n        var signerServiceInfoParams = params.signerServiceInfo, otherParams = __rest(params, [\"signerServiceInfo\"]);\n        var endpoint_region = region || this._region || this._options.region;\n        var endpoint_service = service || this._service || this._options.service;\n        var creds = {\n            secret_key: credentials.secretAccessKey,\n            access_key: credentials.accessKeyId,\n            session_token: credentials.sessionToken,\n        };\n        var endpointInfo = {\n            region: endpoint_region,\n            service: endpoint_service,\n        };\n        var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);\n        var signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n        if (signed_params.data) {\n            signed_params.body = signed_params.data;\n        }\n        logger.debug('Signed Request: ', signed_params);\n        delete signed_params.headers['host'];\n        return signed_params;\n    };\n    RestClient.prototype._request = function (params, isAllResponse) {\n        if (isAllResponse === void 0) { isAllResponse = false; }\n        return axios(params)\n            .then(function (response) { return (isAllResponse ? response : response.data); })\n            .catch(function (error) {\n            logger.debug(error);\n            throw error;\n        });\n    };\n    RestClient.prototype._parseUrl = function (url) {\n        var parts = url.split('/');\n        return {\n            host: parts[2],\n            path: '/' + parts.slice(3).join('/'),\n        };\n    };\n    return RestClient;\n}());\nexport { RestClient };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}