{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var PushNotificationPermissionStatus;\n(function (PushNotificationPermissionStatus) {\n  PushNotificationPermissionStatus[\"DENIED\"] = \"DENIED\";\n  PushNotificationPermissionStatus[\"GRANTED\"] = \"GRANTED\";\n  PushNotificationPermissionStatus[\"SHOULD_REQUEST\"] = \"SHOULD_REQUEST\";\n  PushNotificationPermissionStatus[\"SHOULD_EXPLAIN_THEN_REQUEST\"] = \"SHOULD_EXPLAIN_THEN_REQUEST\";\n})(PushNotificationPermissionStatus || (PushNotificationPermissionStatus = {}));","map":{"version":3,"names":["PushNotificationPermissionStatus"],"sources":["C:\\Users\\jonat\\aws_poc\\frontend\\node_modules\\@aws-amplify\\notifications\\src\\PushNotification\\types.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { EventListener } from '../common';\nimport { AWSPinpointProviderConfig } from '../common/AWSPinpointProviderCommon/types';\nimport {\n\tNotificationsProvider,\n\tNotificationsSubCategory as NotificationsSubCategories,\n\tUserInfo,\n} from '../types';\n\nexport type NotificationsSubCategory = Extract<\n\tNotificationsSubCategories,\n\t'PushNotification'\n>;\n\nexport interface PushNotificationInterface {\n\tconfigure: (config: PushNotificationConfig) => PushNotificationConfig;\n\tgetModuleName: () => NotificationsSubCategory;\n\tgetPluggable: (providerName: string) => PushNotificationProvider;\n\taddPluggable: (pluggable: PushNotificationProvider) => void;\n\tremovePluggable: (providerName: string) => void;\n\tenable: () => void;\n\tidentifyUser: (userId: string, userInfo: UserInfo) => Promise<void[]>;\n\tgetLaunchNotification: () => Promise<PushNotificationMessage>;\n\tgetBadgeCount: () => Promise<number>;\n\tsetBadgeCount: (count: number) => void;\n\tgetPermissionStatus: () => Promise<PushNotificationPermissionStatus>;\n\trequestPermissions: (\n\t\tpermissions?: PushNotificationPermissions\n\t) => Promise<boolean>;\n\tonNotificationReceivedInBackground: (\n\t\thandler: OnPushNotificationMessageHandler\n\t) => EventListener<OnPushNotificationMessageHandler>;\n\tonNotificationReceivedInForeground: (\n\t\thandler: OnPushNotificationMessageHandler\n\t) => EventListener<OnPushNotificationMessageHandler>;\n\tonNotificationOpened: (\n\t\thandler: OnPushNotificationMessageHandler\n\t) => EventListener<OnPushNotificationMessageHandler>;\n\tonTokenReceived: (\n\t\thandler: OnTokenReceivedHandler\n\t) => EventListener<OnTokenReceivedHandler>;\n}\n\nexport interface PushNotificationProvider extends NotificationsProvider {\n\t// return sub-category ('PushNotification')\n\tgetSubCategory(): NotificationsSubCategory;\n\n\t// register device with provider\n\tregisterDevice(token: string): Promise<void>;\n}\n\nexport interface PushNotificationConfig {\n\tAWSPinpoint?: AWSPinpointProviderConfig;\n}\n\nexport interface PushNotificationMessage {\n\ttitle?: string;\n\tbody?: string;\n\timageUrl?: string;\n\tdeeplinkUrl?: string;\n\tgoToUrl?: string;\n\tfcmOptions?: FcmPlatformOptions;\n\tapnsOptions?: ApnsPlatformOptions;\n\tdata?: Record<string, unknown>;\n}\n\ninterface FcmPlatformOptions {\n\tchannelId: string;\n\tmessageId: string;\n\tsenderId: string;\n\tsendTime: Date;\n}\n\ninterface ApnsPlatformOptions {\n\tsubtitle?: string;\n}\n\nexport interface PushNotificationPermissions\n\textends Partial<Record<string, boolean>> {\n\talert?: boolean;\n\tbadge?: boolean;\n\tsound?: boolean;\n}\n\nexport enum PushNotificationPermissionStatus {\n\tDENIED = 'DENIED',\n\tGRANTED = 'GRANTED',\n\tSHOULD_REQUEST = 'SHOULD_REQUEST',\n\tSHOULD_EXPLAIN_THEN_REQUEST = 'SHOULD_EXPLAIN_THEN_REQUEST',\n}\n\nexport type OnTokenReceivedHandler = (token: string) => any;\n\nexport type OnPushNotificationMessageHandler = (\n\tmessage: PushNotificationMessage\n) => any;\n\nexport const enum PushNotificationEvent {\n\tBACKGROUND_MESSAGE_RECEIVED,\n\tFOREGROUND_MESSAGE_RECEIVED,\n\tLAUNCH_NOTIFICATION_OPENED,\n\tNOTIFICATION_OPENED,\n\tTOKEN_RECEIVED,\n}\n\nexport interface NormalizedValues {\n\tbody?: string;\n\timageUrl?: string;\n\ttitle?: string;\n\taction?: Pick<PushNotificationMessage, 'goToUrl' | 'deeplinkUrl'>;\n\toptions?: Pick<PushNotificationMessage, 'apnsOptions' | 'fcmOptions'>;\n\tdata?: Record<string, unknown>;\n}\n"],"mappings":"AAAA;AACA;AAqFA,WAAYA,gCAKX;AALD,WAAYA,gCAAgC;EAC3CA,gCAAA,qBAAiB;EACjBA,gCAAA,uBAAmB;EACnBA,gCAAA,qCAAiC;EACjCA,gCAAA,+DAA2D;AAC5D,CAAC,EALWA,gCAAgC,KAAhCA,gCAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}