{"ast":null,"code":"import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants.js';\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  MultiLineString: 1,\n  Polygon: 2\n};\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map(feature => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map(feature => {\n    delete feature.area;\n    return feature;\n  });\n}\nexport default sortFeatures;","map":{"version":3,"names":["area","Constants","FEATURE_SORT_RANKS","Point","LineString","MultiLineString","Polygon","comparator","a","b","score","geometry","type","geojsonTypes","POLYGON","sortFeatures","features","map","feature","FEATURE","property","sort"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/lib/sort_features.js"],"sourcesContent":["import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants.js';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  MultiLineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAO,KAAKC,SAAS,MAAM,iBAAiB;AAE5C,MAAMC,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CAAC;EACRC,UAAU,EAAE,CAAC;EACbC,eAAe,EAAE,CAAC;EAClBC,OAAO,EAAE;AACX,CAAC;AAED,SAASC,UAAUA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,MAAMC,KAAK,GAAGR,kBAAkB,CAACM,CAAC,CAACG,QAAQ,CAACC,IAAI,CAAC,GAAGV,kBAAkB,CAACO,CAAC,CAACE,QAAQ,CAACC,IAAI,CAAC;EAEvF,IAAIF,KAAK,KAAK,CAAC,IAAIF,CAAC,CAACG,QAAQ,CAACC,IAAI,KAAKX,SAAS,CAACY,YAAY,CAACC,OAAO,EAAE;IACrE,OAAON,CAAC,CAACR,IAAI,GAAGS,CAAC,CAACT,IAAI;EACxB;EAEA,OAAOU,KAAK;AACd;;AAEA;AACA,SAASK,YAAYA,CAACC,QAAQ,EAAE;EAC9B,OAAOA,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAK;IAC/B,IAAIA,OAAO,CAACP,QAAQ,CAACC,IAAI,KAAKX,SAAS,CAACY,YAAY,CAACC,OAAO,EAAE;MAC5DI,OAAO,CAAClB,IAAI,GAAGA,IAAI,CAACW,QAAQ,CAAC;QAC3BC,IAAI,EAAEX,SAAS,CAACY,YAAY,CAACM,OAAO;QACpCC,QAAQ,EAAE,CAAC,CAAC;QACZT,QAAQ,EAAEO,OAAO,CAACP;MACpB,CAAC,CAAC;IACJ;IACA,OAAOO,OAAO;EAChB,CAAC,CAAC,CAACG,IAAI,CAACd,UAAU,CAAC,CAACU,GAAG,CAAEC,OAAO,IAAK;IACnC,OAAOA,OAAO,CAAClB,IAAI;IACnB,OAAOkB,OAAO;EAChB,CAAC,CAAC;AACJ;AAEA,eAAeH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}