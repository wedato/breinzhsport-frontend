{"ast":null,"code":"\"use strict\";\n\nvar CallCapturer = require('../../patchers/call_capturer.js');\nvar capturer = new CallCapturer();\n/**\n * Represents a AWS client call. Automatically captures data from the supplied response object,\n * Data captured depends on the whitelisting file supplied.\n * The base whitelisting file can be found at /lib/resources/aws_whitelist.json.\n * @constructor\n * @param {any} res - The response object from the AWS call. Typed as any to avoid AWS SDK dependency. Otherwise would be AWS.Response.\n * @param {string} serviceName - The service name of the AWS client.\n * @see https://github.com/aws/aws-sdk-js/blob/master/lib/response.js\n */\nfunction Aws(res, serviceName) {\n  this.init(res, serviceName);\n}\nAws.prototype.init = function init(res, serviceName) {\n  //TODO: account ID\n  this.operation = formatOperation(res.request.operation) || '';\n  if (res && res.request && res.request.httpRequest && res.request.httpRequest.region) {\n    this.region = res.request.httpRequest.region;\n  }\n  if (res && res.requestId) {\n    this.request_id = res.requestId;\n  }\n  this.retries = res.retryCount || 0;\n  if (res.extendedRequestId && serviceName && serviceName.toLowerCase() === 's3') {\n    this.id_2 = res.extendedRequestId;\n  }\n  if (serviceName) {\n    this.addData(capturer.capture(serviceName.toLowerCase(), res));\n  }\n};\nAws.prototype.addData = function addData(data) {\n  for (var attribute in data) {\n    this[attribute] = data[attribute];\n  }\n};\n/**\n * Overrides the default whitelisting file to specify what params to capture on each AWS Service call.\n * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n * @exports setAWSWhitelist\n */\nvar setAWSWhitelist = function setAWSWhitelist(source) {\n  if (!source || source instanceof String || !(typeof source === 'string' || source instanceof Object)) {\n    throw new Error('Please specify a path to the local whitelist file, or supply a whitelist source object.');\n  }\n  capturer = new CallCapturer(source);\n};\n/**\n * Appends to the default whitelisting file to specify what params to capture on each AWS Service call.\n * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n * @exports appendAWSWhitelist\n */\nvar appendAWSWhitelist = function appendAWSWhitelist(source) {\n  if (!source || source instanceof String || !(typeof source === 'string' || source instanceof Object)) {\n    throw new Error('Please specify a path to the local whitelist file, or supply a whitelist source object.');\n  }\n  capturer.append(source);\n};\nfunction formatOperation(operation) {\n  if (!operation) {\n    return;\n  }\n  return operation.charAt(0).toUpperCase() + operation.slice(1);\n}\nmodule.exports = Aws;\nmodule.exports.appendAWSWhitelist = appendAWSWhitelist;\nmodule.exports.setAWSWhitelist = setAWSWhitelist;","map":{"version":3,"names":["CallCapturer","require","capturer","Aws","res","serviceName","init","prototype","operation","formatOperation","request","httpRequest","region","requestId","request_id","retries","retryCount","extendedRequestId","toLowerCase","id_2","addData","capture","data","attribute","setAWSWhitelist","source","String","Object","Error","appendAWSWhitelist","append","charAt","toUpperCase","slice","module","exports"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/aws-xray-sdk-core/dist/lib/segments/attributes/aws.js"],"sourcesContent":["\"use strict\";\nvar CallCapturer = require('../../patchers/call_capturer.js');\nvar capturer = new CallCapturer();\n/**\n * Represents a AWS client call. Automatically captures data from the supplied response object,\n * Data captured depends on the whitelisting file supplied.\n * The base whitelisting file can be found at /lib/resources/aws_whitelist.json.\n * @constructor\n * @param {any} res - The response object from the AWS call. Typed as any to avoid AWS SDK dependency. Otherwise would be AWS.Response.\n * @param {string} serviceName - The service name of the AWS client.\n * @see https://github.com/aws/aws-sdk-js/blob/master/lib/response.js\n */\nfunction Aws(res, serviceName) {\n    this.init(res, serviceName);\n}\nAws.prototype.init = function init(res, serviceName) {\n    //TODO: account ID\n    this.operation = formatOperation(res.request.operation) || '';\n    if (res && res.request && res.request.httpRequest && res.request.httpRequest.region) {\n        this.region = res.request.httpRequest.region;\n    }\n    if (res && res.requestId) {\n        this.request_id = res.requestId;\n    }\n    this.retries = res.retryCount || 0;\n    if (res.extendedRequestId && serviceName && serviceName.toLowerCase() === 's3') {\n        this.id_2 = res.extendedRequestId;\n    }\n    if (serviceName) {\n        this.addData(capturer.capture(serviceName.toLowerCase(), res));\n    }\n};\nAws.prototype.addData = function addData(data) {\n    for (var attribute in data) {\n        this[attribute] = data[attribute];\n    }\n};\n/**\n * Overrides the default whitelisting file to specify what params to capture on each AWS Service call.\n * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n * @exports setAWSWhitelist\n */\nvar setAWSWhitelist = function setAWSWhitelist(source) {\n    if (!source || source instanceof String || !(typeof source === 'string' || (source instanceof Object))) {\n        throw new Error('Please specify a path to the local whitelist file, or supply a whitelist source object.');\n    }\n    capturer = new CallCapturer(source);\n};\n/**\n * Appends to the default whitelisting file to specify what params to capture on each AWS Service call.\n * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n * @exports appendAWSWhitelist\n */\nvar appendAWSWhitelist = function appendAWSWhitelist(source) {\n    if (!source || source instanceof String || !(typeof source === 'string' || (source instanceof Object))) {\n        throw new Error('Please specify a path to the local whitelist file, or supply a whitelist source object.');\n    }\n    capturer.append(source);\n};\nfunction formatOperation(operation) {\n    if (!operation) {\n        return;\n    }\n    return operation.charAt(0).toUpperCase() + operation.slice(1);\n}\nmodule.exports = Aws;\nmodule.exports.appendAWSWhitelist = appendAWSWhitelist;\nmodule.exports.setAWSWhitelist = setAWSWhitelist;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,iCAAiC,CAAC;AAC7D,IAAIC,QAAQ,GAAG,IAAIF,YAAY,CAAC,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,GAAGA,CAACC,GAAG,EAAEC,WAAW,EAAE;EAC3B,IAAI,CAACC,IAAI,CAACF,GAAG,EAAEC,WAAW,CAAC;AAC/B;AACAF,GAAG,CAACI,SAAS,CAACD,IAAI,GAAG,SAASA,IAAIA,CAACF,GAAG,EAAEC,WAAW,EAAE;EACjD;EACA,IAAI,CAACG,SAAS,GAAGC,eAAe,CAACL,GAAG,CAACM,OAAO,CAACF,SAAS,CAAC,IAAI,EAAE;EAC7D,IAAIJ,GAAG,IAAIA,GAAG,CAACM,OAAO,IAAIN,GAAG,CAACM,OAAO,CAACC,WAAW,IAAIP,GAAG,CAACM,OAAO,CAACC,WAAW,CAACC,MAAM,EAAE;IACjF,IAAI,CAACA,MAAM,GAAGR,GAAG,CAACM,OAAO,CAACC,WAAW,CAACC,MAAM;EAChD;EACA,IAAIR,GAAG,IAAIA,GAAG,CAACS,SAAS,EAAE;IACtB,IAAI,CAACC,UAAU,GAAGV,GAAG,CAACS,SAAS;EACnC;EACA,IAAI,CAACE,OAAO,GAAGX,GAAG,CAACY,UAAU,IAAI,CAAC;EAClC,IAAIZ,GAAG,CAACa,iBAAiB,IAAIZ,WAAW,IAAIA,WAAW,CAACa,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;IAC5E,IAAI,CAACC,IAAI,GAAGf,GAAG,CAACa,iBAAiB;EACrC;EACA,IAAIZ,WAAW,EAAE;IACb,IAAI,CAACe,OAAO,CAAClB,QAAQ,CAACmB,OAAO,CAAChB,WAAW,CAACa,WAAW,CAAC,CAAC,EAAEd,GAAG,CAAC,CAAC;EAClE;AACJ,CAAC;AACDD,GAAG,CAACI,SAAS,CAACa,OAAO,GAAG,SAASA,OAAOA,CAACE,IAAI,EAAE;EAC3C,KAAK,IAAIC,SAAS,IAAID,IAAI,EAAE;IACxB,IAAI,CAACC,SAAS,CAAC,GAAGD,IAAI,CAACC,SAAS,CAAC;EACrC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACC,MAAM,EAAE;EACnD,IAAI,CAACA,MAAM,IAAIA,MAAM,YAAYC,MAAM,IAAI,EAAE,OAAOD,MAAM,KAAK,QAAQ,IAAKA,MAAM,YAAYE,MAAO,CAAC,EAAE;IACpG,MAAM,IAAIC,KAAK,CAAC,yFAAyF,CAAC;EAC9G;EACA1B,QAAQ,GAAG,IAAIF,YAAY,CAACyB,MAAM,CAAC;AACvC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAII,kBAAkB,GAAG,SAASA,kBAAkBA,CAACJ,MAAM,EAAE;EACzD,IAAI,CAACA,MAAM,IAAIA,MAAM,YAAYC,MAAM,IAAI,EAAE,OAAOD,MAAM,KAAK,QAAQ,IAAKA,MAAM,YAAYE,MAAO,CAAC,EAAE;IACpG,MAAM,IAAIC,KAAK,CAAC,yFAAyF,CAAC;EAC9G;EACA1B,QAAQ,CAAC4B,MAAM,CAACL,MAAM,CAAC;AAC3B,CAAC;AACD,SAAShB,eAAeA,CAACD,SAAS,EAAE;EAChC,IAAI,CAACA,SAAS,EAAE;IACZ;EACJ;EACA,OAAOA,SAAS,CAACuB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGxB,SAAS,CAACyB,KAAK,CAAC,CAAC,CAAC;AACjE;AACAC,MAAM,CAACC,OAAO,GAAGhC,GAAG;AACpB+B,MAAM,CAACC,OAAO,CAACN,kBAAkB,GAAGA,kBAAkB;AACtDK,MAAM,CAACC,OAAO,CAACX,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}