{"ast":null,"code":"import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport moveFeatures from '../lib/move_features.js';\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function () {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\nDirectSelect.fireActionable = function (state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\nDirectSelect.startDragging = function (state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\nDirectSelect.stopDragging = function (state) {\n  if (state.canDragMove && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\nDirectSelect.onMidpoint = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\nDirectSelect.pathsToCoordinates = function (featureId, paths) {\n  return paths.map(coord_path => ({\n    feature_id: featureId,\n    coord_path\n  }));\n};\nDirectSelect.onFeature = function (state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);else this.stopDragging(state);\n};\nDirectSelect.dragFeature = function (state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\nDirectSelect.dragVertex = function (state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function (opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : []\n  };\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n  this.setActionableState({\n    trash: true\n  });\n  return state;\n};\nDirectSelect.onStop = function () {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\nDirectSelect.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\nDirectSelect.onTrash = function (state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths.sort((a, b) => b.localeCompare(a, 'en', {\n    numeric: true\n  })).forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\nDirectSelect.onMouseMove = function (state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const isMidPoint = isMidpoint(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });else if (onVertex && !noCoords) this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });else this.updateUIClasses({\n    mouse: Constants.cursors.NONE\n  });\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\nDirectSelect.onMouseOut = function (state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function (state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\nDirectSelect.onDrag = function (state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);else this.dragFeature(state, e, delta);\n  state.dragMoveLocation = e.lngLat;\n};\nDirectSelect.onClick = function (state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\nDirectSelect.onTap = function (state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function (state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\nexport default DirectSelect;","map":{"version":3,"names":["noTarget","isOfMetaType","isActiveFeature","isInactiveFeature","isShiftDown","createSupplementaryPoints","constrainFeatureMovement","doubleClickZoom","Constants","moveFeatures","isVertex","meta","VERTEX","isMidpoint","MIDPOINT","DirectSelect","fireUpdate","fire","events","UPDATE","action","updateActions","CHANGE_COORDINATES","features","getSelected","map","f","toGeoJSON","fireActionable","state","setActionableState","combineFeatures","uncombineFeatures","trash","selectedCoordPaths","length","startDragging","e","initialDragPanState","dragPan","isEnabled","disable","canDragMove","dragMoveLocation","lngLat","stopDragging","enable","dragMoving","onVertex","about","featureTarget","properties","selectedIndex","indexOf","coord_path","push","selectedCoordinates","pathsToCoordinates","featureId","setSelectedCoordinates","onMidpoint","feature","addCoordinate","lng","lat","paths","feature_id","onFeature","dragFeature","delta","dragVertex","selectedCoords","getCoordinate","selectedCoordPoints","coords","type","geojsonTypes","FEATURE","geometry","POINT","coordinates","constrainedDelta","i","coord","updateCoordinate","clickNoTarget","changeMode","modes","SIMPLE_SELECT","clickInactive","clickActiveFeature","clearSelectedCoordinates","changed","onSetup","opts","getFeature","Error","TypeError","startPos","coordPath","setSelected","onStop","toDisplayFeatures","geojson","id","active","activeStates","ACTIVE","midpoints","selectedPaths","forEach","INACTIVE","onTrash","sort","a","b","localeCompare","numeric","removeCoordinate","isValid","deleteFeature","onMouseMove","isFeature","isMidPoint","noCoords","updateUIClasses","mouse","cursors","MOVE","NONE","isDraggableItem","onMouseOut","onTouchStart","onMouseDown","onDrag","originalEvent","stopPropagation","onClick","onTap","onTouchEnd","onMouseUp"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/modes/direct_select.js"],"sourcesContent":["import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport moveFeatures from '../lib/move_features.js';\n\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\n\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function() {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nDirectSelect.fireActionable = function(state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\n\nDirectSelect.startDragging = function(state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.stopDragging = function(state) {\n  if (state.canDragMove && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\n\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\n\nDirectSelect.onMidpoint = function(state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\n\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\n};\n\nDirectSelect.onFeature = function(state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\n  else this.stopDragging(state);\n};\n\nDirectSelect.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.dragVertex = function(state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\n\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function(opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\n  };\n\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return state;\n};\n\nDirectSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\n\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\n\nDirectSelect.onTrash = function(state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\n    .forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\n\nDirectSelect.onMouseMove = function(state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const isMidPoint = isMidpoint(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\n\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\n\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\n\nDirectSelect.onDrag = function(state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\n  else this.dragFeature(state, e, delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.onClick = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\n\nDirectSelect.onTap = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\n\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\n\nexport default DirectSelect;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}