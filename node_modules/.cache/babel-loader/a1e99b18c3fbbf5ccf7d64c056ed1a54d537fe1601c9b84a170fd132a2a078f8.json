{"ast":null,"code":"import * as Constants from '../constants.js';\nexport default function (parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX || startCoord[1] < Constants.LAT_RENDERED_MIN || endCoord[1] > Constants.LAT_RENDERED_MAX || endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}","map":{"version":3,"names":["Constants","parent","startVertex","endVertex","startCoord","geometry","coordinates","endCoord","LAT_RENDERED_MAX","LAT_RENDERED_MIN","mid","lng","lat","type","geojsonTypes","FEATURE","properties","meta","MIDPOINT","coord_path","POINT"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js"],"sourcesContent":["import * as Constants from '../constants.js';\n\nexport default function(parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,iBAAiB;AAE5C,eAAe,UAASC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAE;EACtD,MAAMC,UAAU,GAAGF,WAAW,CAACG,QAAQ,CAACC,WAAW;EACnD,MAAMC,QAAQ,GAAGJ,SAAS,CAACE,QAAQ,CAACC,WAAW;;EAE/C;EACA;EACA,IAAIF,UAAU,CAAC,CAAC,CAAC,GAAGJ,SAAS,CAACQ,gBAAgB,IAC5CJ,UAAU,CAAC,CAAC,CAAC,GAAGJ,SAAS,CAACS,gBAAgB,IAC1CF,QAAQ,CAAC,CAAC,CAAC,GAAGP,SAAS,CAACQ,gBAAgB,IACxCD,QAAQ,CAAC,CAAC,CAAC,GAAGP,SAAS,CAACS,gBAAgB,EAAE;IAC1C,OAAO,IAAI;EACb;EAEA,MAAMC,GAAG,GAAG;IACVC,GAAG,EAAE,CAACP,UAAU,CAAC,CAAC,CAAC,GAAGG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;IACtCK,GAAG,EAAE,CAACR,UAAU,CAAC,CAAC,CAAC,GAAGG,QAAQ,CAAC,CAAC,CAAC,IAAI;EACvC,CAAC;EAED,OAAO;IACLM,IAAI,EAAEb,SAAS,CAACc,YAAY,CAACC,OAAO;IACpCC,UAAU,EAAE;MACVC,IAAI,EAAEjB,SAAS,CAACiB,IAAI,CAACC,QAAQ;MAC7BjB,MAAM;MACNU,GAAG,EAAED,GAAG,CAACC,GAAG;MACZC,GAAG,EAAEF,GAAG,CAACE,GAAG;MACZO,UAAU,EAAEhB,SAAS,CAACa,UAAU,CAACG;IACnC,CAAC;IACDd,QAAQ,EAAE;MACRQ,IAAI,EAAEb,SAAS,CAACc,YAAY,CAACM,KAAK;MAClCd,WAAW,EAAE,CAACI,GAAG,CAACC,GAAG,EAAED,GAAG,CAACE,GAAG;IAChC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}