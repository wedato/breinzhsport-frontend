{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar $byteLength = require('array-buffer-byte-length');\nvar availableTypedArrays = require('available-typed-arrays')();\nvar callBound = require('call-bound');\nvar isArrayBuffer = require('is-array-buffer');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\nvar $sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\n// https://262.ecma-international.org/8.0/#sec-isdetachedbuffer\n\nmodule.exports = function IsDetachedBuffer(arrayBuffer) {\n  var isSAB = isSharedArrayBuffer(arrayBuffer);\n  if (!isArrayBuffer(arrayBuffer) && !isSAB) {\n    throw new $TypeError('Assertion failed: `arrayBuffer` must be an Object with an [[ArrayBufferData]] internal slot');\n  }\n  if ((isSAB ? $sabByteLength : $byteLength)(arrayBuffer) === 0) {\n    try {\n      new global[availableTypedArrays[0]](arrayBuffer); // eslint-disable-line no-new\n    } catch (error) {\n      return !!error && error.name === 'TypeError';\n    }\n  }\n  return false;\n};","map":{"version":3,"names":["$TypeError","require","$byteLength","availableTypedArrays","callBound","isArrayBuffer","isSharedArrayBuffer","$sabByteLength","module","exports","IsDetachedBuffer","arrayBuffer","isSAB","global","error","name"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/es-abstract/2024/IsDetachedBuffer.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar $byteLength = require('array-buffer-byte-length');\nvar availableTypedArrays = require('available-typed-arrays')();\nvar callBound = require('call-bound');\nvar isArrayBuffer = require('is-array-buffer');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\n\nvar $sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\n// https://262.ecma-international.org/8.0/#sec-isdetachedbuffer\n\nmodule.exports = function IsDetachedBuffer(arrayBuffer) {\n\tvar isSAB = isSharedArrayBuffer(arrayBuffer);\n\tif (!isArrayBuffer(arrayBuffer) && !isSAB) {\n\t\tthrow new $TypeError('Assertion failed: `arrayBuffer` must be an Object with an [[ArrayBufferData]] internal slot');\n\t}\n\tif ((isSAB ? $sabByteLength : $byteLength)(arrayBuffer) === 0) {\n\t\ttry {\n\t\t\tnew global[availableTypedArrays[0]](arrayBuffer); // eslint-disable-line no-new\n\t\t} catch (error) {\n\t\t\treturn !!error && error.name === 'TypeError';\n\t\t}\n\t}\n\treturn false;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,WAAW,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACrD,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAC9D,IAAIG,SAAS,GAAGH,OAAO,CAAC,YAAY,CAAC;AACrC,IAAII,aAAa,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,wBAAwB,CAAC;AAE3D,IAAIM,cAAc,GAAGH,SAAS,CAAC,wCAAwC,EAAE,IAAI,CAAC;;AAE9E;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,gBAAgBA,CAACC,WAAW,EAAE;EACvD,IAAIC,KAAK,GAAGN,mBAAmB,CAACK,WAAW,CAAC;EAC5C,IAAI,CAACN,aAAa,CAACM,WAAW,CAAC,IAAI,CAACC,KAAK,EAAE;IAC1C,MAAM,IAAIZ,UAAU,CAAC,6FAA6F,CAAC;EACpH;EACA,IAAI,CAACY,KAAK,GAAGL,cAAc,GAAGL,WAAW,EAAES,WAAW,CAAC,KAAK,CAAC,EAAE;IAC9D,IAAI;MACH,IAAIE,MAAM,CAACV,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACf,OAAO,CAAC,CAACA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,WAAW;IAC7C;EACD;EACA,OAAO,KAAK;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}