{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar IsTypedArrayOutOfBounds = require('./IsTypedArrayOutOfBounds');\nvar MakeTypedArrayWithBufferWitnessRecord = require('./MakeTypedArrayWithBufferWitnessRecord');\nvar isObject = require('../helpers/isObject');\nvar isTypedArray = require('is-typed-array');\n\n// https://262.ecma-international.org/15.0/#sec-validatetypedarray\n\nmodule.exports = function ValidateTypedArray(O, order) {\n  if (order !== 'SEQ-CST' && order !== 'UNORDERED') {\n    throw new $TypeError('Assertion failed: `order` must be ~SEQ-CST~ or ~UNORDERED~');\n  }\n  if (!isObject(O)) {\n    throw new $TypeError('Assertion failed: `O` must be an Object'); // step 1\n  }\n  if (!isTypedArray(O)) {\n    throw new $TypeError('Assertion failed: `O` must be a Typed Array'); // steps 1 - 2\n  }\n  var taRecord = MakeTypedArrayWithBufferWitnessRecord(O, order); // step 3\n\n  if (IsTypedArrayOutOfBounds(taRecord)) {\n    throw new $TypeError('`O` must be in-bounds and backed by a non-detached buffer'); // step 4\n  }\n  return taRecord; // step 5\n};","map":{"version":3,"names":["$TypeError","require","IsTypedArrayOutOfBounds","MakeTypedArrayWithBufferWitnessRecord","isObject","isTypedArray","module","exports","ValidateTypedArray","O","order","taRecord"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/es-abstract/2024/ValidateTypedArray.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsTypedArrayOutOfBounds = require('./IsTypedArrayOutOfBounds');\nvar MakeTypedArrayWithBufferWitnessRecord = require('./MakeTypedArrayWithBufferWitnessRecord');\n\nvar isObject = require('../helpers/isObject');\n\nvar isTypedArray = require('is-typed-array');\n\n// https://262.ecma-international.org/15.0/#sec-validatetypedarray\n\nmodule.exports = function ValidateTypedArray(O, order) {\n\tif (order !== 'SEQ-CST' && order !== 'UNORDERED') {\n\t\tthrow new $TypeError('Assertion failed: `order` must be ~SEQ-CST~ or ~UNORDERED~');\n\t}\n\n\tif (!isObject(O)) {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object'); // step 1\n\t}\n\tif (!isTypedArray(O)) {\n\t\tthrow new $TypeError('Assertion failed: `O` must be a Typed Array'); // steps 1 - 2\n\t}\n\n\tvar taRecord = MakeTypedArrayWithBufferWitnessRecord(O, order); // step 3\n\n\tif (IsTypedArrayOutOfBounds(taRecord)) {\n\t\tthrow new $TypeError('`O` must be in-bounds and backed by a non-detached buffer'); // step 4\n\t}\n\n\treturn taRecord; // step 5\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAClE,IAAIE,qCAAqC,GAAGF,OAAO,CAAC,yCAAyC,CAAC;AAE9F,IAAIG,QAAQ,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAE7C,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;;AAE5C;;AAEAK,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,CAAC,EAAEC,KAAK,EAAE;EACtD,IAAIA,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,WAAW,EAAE;IACjD,MAAM,IAAIV,UAAU,CAAC,4DAA4D,CAAC;EACnF;EAEA,IAAI,CAACI,QAAQ,CAACK,CAAC,CAAC,EAAE;IACjB,MAAM,IAAIT,UAAU,CAAC,yCAAyC,CAAC,CAAC,CAAC;EAClE;EACA,IAAI,CAACK,YAAY,CAACI,CAAC,CAAC,EAAE;IACrB,MAAM,IAAIT,UAAU,CAAC,6CAA6C,CAAC,CAAC,CAAC;EACtE;EAEA,IAAIW,QAAQ,GAAGR,qCAAqC,CAACM,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC;;EAEhE,IAAIR,uBAAuB,CAACS,QAAQ,CAAC,EAAE;IACtC,MAAM,IAAIX,UAAU,CAAC,2DAA2D,CAAC,CAAC,CAAC;EACpF;EAEA,OAAOW,QAAQ,CAAC,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}