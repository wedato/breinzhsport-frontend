{"ast":null,"code":"import { useCallback, useRef } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './utils';\nfunction isService(actor) {\n  return 'state' in actor && 'machine' in actor;\n}\nvar defaultCompare = function (a, b) {\n  return a === b;\n};\nvar defaultGetSnapshot = function (a, initialStateCacheRef) {\n  if (isService(a)) {\n    // A status of 0 = interpreter not started\n    if (a.status === 0 && initialStateCacheRef.current) {\n      return initialStateCacheRef.current;\n    }\n    var snapshot = getServiceSnapshot(a);\n    initialStateCacheRef.current = a.status === 0 ? snapshot : null;\n    return snapshot;\n  }\n  return isActorWithState(a) ? a.state : undefined;\n};\nexport function useSelector(actor, selector, compare, getSnapshot) {\n  if (compare === void 0) {\n    compare = defaultCompare;\n  }\n  var initialStateCacheRef = useRef(null);\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [actor]);\n  var boundGetSnapshot = useCallback(function () {\n    if (getSnapshot) {\n      return getSnapshot(actor);\n    }\n    return defaultGetSnapshot(actor, initialStateCacheRef);\n  }, [actor, getSnapshot]);\n  var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}","map":{"version":3,"names":["useCallback","useRef","useSyncExternalStoreWithSelector","isActorWithState","getServiceSnapshot","isService","actor","defaultCompare","a","b","defaultGetSnapshot","initialStateCacheRef","status","current","snapshot","state","undefined","useSelector","selector","compare","getSnapshot","subscribe","handleStoreChange","unsubscribe","boundGetSnapshot","selectedSnapshot"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/ui-react-core/node_modules/@xstate/react/es/useSelector.js"],"sourcesContent":["import { useCallback, useRef } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './utils';\nfunction isService(actor) {\n    return 'state' in actor && 'machine' in actor;\n}\nvar defaultCompare = function (a, b) { return a === b; };\nvar defaultGetSnapshot = function (a, initialStateCacheRef) {\n    if (isService(a)) {\n        // A status of 0 = interpreter not started\n        if (a.status === 0 && initialStateCacheRef.current) {\n            return initialStateCacheRef.current;\n        }\n        var snapshot = getServiceSnapshot(a);\n        initialStateCacheRef.current = a.status === 0 ? snapshot : null;\n        return snapshot;\n    }\n    return isActorWithState(a) ? a.state : undefined;\n};\nexport function useSelector(actor, selector, compare, getSnapshot) {\n    if (compare === void 0) { compare = defaultCompare; }\n    var initialStateCacheRef = useRef(null);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actor]);\n    var boundGetSnapshot = useCallback(function () {\n        if (getSnapshot) {\n            return getSnapshot(actor);\n        }\n        return defaultGetSnapshot(actor, initialStateCacheRef);\n    }, [actor, getSnapshot]);\n    var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n    return selectedSnapshot;\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC3C,SAASC,gCAAgC,QAAQ,4CAA4C;AAC7F,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,SAASC,kBAAkB,QAAQ,SAAS;AAC5C,SAASC,SAASA,CAACC,KAAK,EAAE;EACtB,OAAO,OAAO,IAAIA,KAAK,IAAI,SAAS,IAAIA,KAAK;AACjD;AACA,IAAIC,cAAc,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;EAAE,OAAOD,CAAC,KAAKC,CAAC;AAAE,CAAC;AACxD,IAAIC,kBAAkB,GAAG,SAAAA,CAAUF,CAAC,EAAEG,oBAAoB,EAAE;EACxD,IAAIN,SAAS,CAACG,CAAC,CAAC,EAAE;IACd;IACA,IAAIA,CAAC,CAACI,MAAM,KAAK,CAAC,IAAID,oBAAoB,CAACE,OAAO,EAAE;MAChD,OAAOF,oBAAoB,CAACE,OAAO;IACvC;IACA,IAAIC,QAAQ,GAAGV,kBAAkB,CAACI,CAAC,CAAC;IACpCG,oBAAoB,CAACE,OAAO,GAAGL,CAAC,CAACI,MAAM,KAAK,CAAC,GAAGE,QAAQ,GAAG,IAAI;IAC/D,OAAOA,QAAQ;EACnB;EACA,OAAOX,gBAAgB,CAACK,CAAC,CAAC,GAAGA,CAAC,CAACO,KAAK,GAAGC,SAAS;AACpD,CAAC;AACD,OAAO,SAASC,WAAWA,CAACX,KAAK,EAAEY,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAE;EAC/D,IAAID,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAGZ,cAAc;EAAE;EACpD,IAAII,oBAAoB,GAAGV,MAAM,CAAC,IAAI,CAAC;EACvC,IAAIoB,SAAS,GAAGrB,WAAW,CAAC,UAAUsB,iBAAiB,EAAE;IACrD,IAAIC,WAAW,GAAGjB,KAAK,CAACe,SAAS,CAACC,iBAAiB,CAAC,CAACC,WAAW;IAChE,OAAOA,WAAW;EACtB,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EACX,IAAIkB,gBAAgB,GAAGxB,WAAW,CAAC,YAAY;IAC3C,IAAIoB,WAAW,EAAE;MACb,OAAOA,WAAW,CAACd,KAAK,CAAC;IAC7B;IACA,OAAOI,kBAAkB,CAACJ,KAAK,EAAEK,oBAAoB,CAAC;EAC1D,CAAC,EAAE,CAACL,KAAK,EAAEc,WAAW,CAAC,CAAC;EACxB,IAAIK,gBAAgB,GAAGvB,gCAAgC,CAACmB,SAAS,EAAEG,gBAAgB,EAAEA,gBAAgB,EAAEN,QAAQ,EAAEC,OAAO,CAAC;EACzH,OAAOM,gBAAgB;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}