{"ast":null,"code":"import { toHex } from \"@aws-sdk/util-hex-encoding\";\nvar Int64 = function () {\n  function Int64(bytes) {\n    this.bytes = bytes;\n    if (bytes.byteLength !== 8) {\n      throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n    }\n  }\n  Int64.fromNumber = function (number) {\n    if (number > 9223372036854776000 || number < -9223372036854776000) {\n      throw new Error(\"\".concat(number, \" is too large (or, if negative, too small) to represent as an Int64\"));\n    }\n    var bytes = new Uint8Array(8);\n    for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n      bytes[i] = remaining;\n    }\n    if (number < 0) {\n      negate(bytes);\n    }\n    return new Int64(bytes);\n  };\n  Int64.prototype.valueOf = function () {\n    var bytes = this.bytes.slice(0);\n    var negative = bytes[0] & 128;\n    if (negative) {\n      negate(bytes);\n    }\n    return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n  };\n  Int64.prototype.toString = function () {\n    return String(this.valueOf());\n  };\n  return Int64;\n}();\nexport { Int64 };\nfunction negate(bytes) {\n  for (var i = 0; i < 8; i++) {\n    bytes[i] ^= 0xff;\n  }\n  for (var i = 7; i > -1; i--) {\n    bytes[i]++;\n    if (bytes[i] !== 0) break;\n  }\n}","map":{"version":3,"names":["toHex","Int64","bytes","byteLength","Error","fromNumber","number","concat","Uint8Array","i","remaining","Math","abs","round","negate","prototype","valueOf","slice","negative","parseInt","toString","String"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-sdk/eventstream-codec/dist-es/Int64.js"],"sourcesContent":["import { toHex } from \"@aws-sdk/util-hex-encoding\";\nvar Int64 = (function () {\n    function Int64(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    Int64.fromNumber = function (number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(\"\".concat(number, \" is too large (or, if negative, too small) to represent as an Int64\"));\n        }\n        var bytes = new Uint8Array(8);\n        for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    };\n    Int64.prototype.valueOf = function () {\n        var bytes = this.bytes.slice(0);\n        var negative = bytes[0] & 128;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    };\n    Int64.prototype.toString = function () {\n        return String(this.valueOf());\n    };\n    return Int64;\n}());\nexport { Int64 };\nfunction negate(bytes) {\n    for (var i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (var i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,4BAA4B;AAClD,IAAIC,KAAK,GAAI,YAAY;EACrB,SAASA,KAAKA,CAACC,KAAK,EAAE;IAClB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAIA,KAAK,CAACC,UAAU,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,uCAAuC,CAAC;IAC5D;EACJ;EACAH,KAAK,CAACI,UAAU,GAAG,UAAUC,MAAM,EAAE;IACjC,IAAIA,MAAM,GAAG,mBAAmB,IAAIA,MAAM,GAAG,CAAC,mBAAmB,EAAE;MAC/D,MAAM,IAAIF,KAAK,CAAC,EAAE,CAACG,MAAM,CAACD,MAAM,EAAE,qEAAqE,CAAC,CAAC;IAC7G;IACA,IAAIJ,KAAK,GAAG,IAAIM,UAAU,CAAC,CAAC,CAAC;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACP,MAAM,CAAC,CAAC,EAAEG,CAAC,GAAG,CAAC,CAAC,IAAIC,SAAS,GAAG,CAAC,EAAED,CAAC,EAAE,EAAEC,SAAS,IAAI,GAAG,EAAE;MACtGR,KAAK,CAACO,CAAC,CAAC,GAAGC,SAAS;IACxB;IACA,IAAIJ,MAAM,GAAG,CAAC,EAAE;MACZQ,MAAM,CAACZ,KAAK,CAAC;IACjB;IACA,OAAO,IAAID,KAAK,CAACC,KAAK,CAAC;EAC3B,CAAC;EACDD,KAAK,CAACc,SAAS,CAACC,OAAO,GAAG,YAAY;IAClC,IAAId,KAAK,GAAG,IAAI,CAACA,KAAK,CAACe,KAAK,CAAC,CAAC,CAAC;IAC/B,IAAIC,QAAQ,GAAGhB,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG;IAC7B,IAAIgB,QAAQ,EAAE;MACVJ,MAAM,CAACZ,KAAK,CAAC;IACjB;IACA,OAAOiB,QAAQ,CAACnB,KAAK,CAACE,KAAK,CAAC,EAAE,EAAE,CAAC,IAAIgB,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3D,CAAC;EACDjB,KAAK,CAACc,SAAS,CAACK,QAAQ,GAAG,YAAY;IACnC,OAAOC,MAAM,CAAC,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC;EACjC,CAAC;EACD,OAAOf,KAAK;AAChB,CAAC,CAAC,CAAE;AACJ,SAASA,KAAK;AACd,SAASa,MAAMA,CAACZ,KAAK,EAAE;EACnB,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxBP,KAAK,CAACO,CAAC,CAAC,IAAI,IAAI;EACpB;EACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;IACzBP,KAAK,CAACO,CAAC,CAAC,EAAE;IACV,IAAIP,KAAK,CAACO,CAAC,CAAC,KAAK,CAAC,EACd;EACR;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}