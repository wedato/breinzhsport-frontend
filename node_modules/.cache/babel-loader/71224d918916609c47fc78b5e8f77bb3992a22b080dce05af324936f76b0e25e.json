{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar floor = require('./floor');\nvar IsFixedLengthArrayBuffer = require('./IsFixedLengthArrayBuffer');\nvar IsTypedArrayOutOfBounds = require('./IsTypedArrayOutOfBounds');\nvar TypedArrayElementSize = require('./TypedArrayElementSize');\nvar isTypedArrayWithBufferWitnessRecord = require('../helpers/records/typed-array-with-buffer-witness-record');\nvar typedArrayBuffer = require('typed-array-buffer');\nvar typedArrayByteOffset = require('typed-array-byte-offset');\nvar typedArrayLength = require('typed-array-length');\n\n// http://www.ecma-international.org/ecma-262/15.0/#sec-typedarraylength\n\nmodule.exports = function TypedArrayLength(taRecord) {\n  if (!isTypedArrayWithBufferWitnessRecord(taRecord)) {\n    throw new $TypeError('Assertion failed: `taRecord` must be a TypedArray With Buffer Witness Record');\n  }\n  if (IsTypedArrayOutOfBounds(taRecord)) {\n    throw new $TypeError('Assertion failed: `taRecord` is out of bounds'); // step 1\n  }\n  var O = taRecord['[[Object]]']; // step 2\n\n  var length = typedArrayLength(O);\n  if (length !== 'AUTO') {\n    return length; // step 3\n  }\n  if (IsFixedLengthArrayBuffer(typedArrayBuffer(O))) {\n    throw new $TypeError('Assertion failed: array buffer is not fixed length'); // step 4\n  }\n  var byteOffset = typedArrayByteOffset(O); // step 5\n\n  var elementSize = TypedArrayElementSize(O); // step 6\n\n  var byteLength = taRecord['[[CachedBufferByteLength]]']; // step 7\n\n  if (byteLength === 'DETACHED') {\n    throw new $TypeError('Assertion failed: typed array is detached'); // step 8\n  }\n  return floor((byteLength - byteOffset) / elementSize); // step 9\n};","map":{"version":3,"names":["$TypeError","require","floor","IsFixedLengthArrayBuffer","IsTypedArrayOutOfBounds","TypedArrayElementSize","isTypedArrayWithBufferWitnessRecord","typedArrayBuffer","typedArrayByteOffset","typedArrayLength","module","exports","TypedArrayLength","taRecord","O","length","byteOffset","elementSize","byteLength"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/es-abstract/2024/TypedArrayLength.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar floor = require('./floor');\nvar IsFixedLengthArrayBuffer = require('./IsFixedLengthArrayBuffer');\nvar IsTypedArrayOutOfBounds = require('./IsTypedArrayOutOfBounds');\nvar TypedArrayElementSize = require('./TypedArrayElementSize');\n\nvar isTypedArrayWithBufferWitnessRecord = require('../helpers/records/typed-array-with-buffer-witness-record');\n\nvar typedArrayBuffer = require('typed-array-buffer');\nvar typedArrayByteOffset = require('typed-array-byte-offset');\nvar typedArrayLength = require('typed-array-length');\n\n// http://www.ecma-international.org/ecma-262/15.0/#sec-typedarraylength\n\nmodule.exports = function TypedArrayLength(taRecord) {\n\tif (!isTypedArrayWithBufferWitnessRecord(taRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `taRecord` must be a TypedArray With Buffer Witness Record');\n\t}\n\n\tif (IsTypedArrayOutOfBounds(taRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `taRecord` is out of bounds'); // step 1\n\t}\n\n\tvar O = taRecord['[[Object]]']; // step 2\n\n\tvar length = typedArrayLength(O);\n\tif (length !== 'AUTO') {\n\t\treturn length; // step 3\n\t}\n\n\tif (IsFixedLengthArrayBuffer(typedArrayBuffer(O))) {\n\t\tthrow new $TypeError('Assertion failed: array buffer is not fixed length'); // step 4\n\t}\n\n\tvar byteOffset = typedArrayByteOffset(O); // step 5\n\n\tvar elementSize = TypedArrayElementSize(O); // step 6\n\n\tvar byteLength = taRecord['[[CachedBufferByteLength]]']; // step 7\n\n\tif (byteLength === 'DETACHED') {\n\t\tthrow new $TypeError('Assertion failed: typed array is detached'); // step 8\n\t}\n\n\treturn floor((byteLength - byteOffset) / elementSize); // step 9\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIE,wBAAwB,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AACpE,IAAIG,uBAAuB,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AAClE,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,yBAAyB,CAAC;AAE9D,IAAIK,mCAAmC,GAAGL,OAAO,CAAC,2DAA2D,CAAC;AAE9G,IAAIM,gBAAgB,GAAGN,OAAO,CAAC,oBAAoB,CAAC;AACpD,IAAIO,oBAAoB,GAAGP,OAAO,CAAC,yBAAyB,CAAC;AAC7D,IAAIQ,gBAAgB,GAAGR,OAAO,CAAC,oBAAoB,CAAC;;AAEpD;;AAEAS,MAAM,CAACC,OAAO,GAAG,SAASC,gBAAgBA,CAACC,QAAQ,EAAE;EACpD,IAAI,CAACP,mCAAmC,CAACO,QAAQ,CAAC,EAAE;IACnD,MAAM,IAAIb,UAAU,CAAC,8EAA8E,CAAC;EACrG;EAEA,IAAII,uBAAuB,CAACS,QAAQ,CAAC,EAAE;IACtC,MAAM,IAAIb,UAAU,CAAC,+CAA+C,CAAC,CAAC,CAAC;EACxE;EAEA,IAAIc,CAAC,GAAGD,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;;EAEhC,IAAIE,MAAM,GAAGN,gBAAgB,CAACK,CAAC,CAAC;EAChC,IAAIC,MAAM,KAAK,MAAM,EAAE;IACtB,OAAOA,MAAM,CAAC,CAAC;EAChB;EAEA,IAAIZ,wBAAwB,CAACI,gBAAgB,CAACO,CAAC,CAAC,CAAC,EAAE;IAClD,MAAM,IAAId,UAAU,CAAC,oDAAoD,CAAC,CAAC,CAAC;EAC7E;EAEA,IAAIgB,UAAU,GAAGR,oBAAoB,CAACM,CAAC,CAAC,CAAC,CAAC;;EAE1C,IAAIG,WAAW,GAAGZ,qBAAqB,CAACS,CAAC,CAAC,CAAC,CAAC;;EAE5C,IAAII,UAAU,GAAGL,QAAQ,CAAC,4BAA4B,CAAC,CAAC,CAAC;;EAEzD,IAAIK,UAAU,KAAK,UAAU,EAAE;IAC9B,MAAM,IAAIlB,UAAU,CAAC,2CAA2C,CAAC,CAAC,CAAC;EACpE;EAEA,OAAOE,KAAK,CAAC,CAACgB,UAAU,GAAGF,UAAU,IAAIC,WAAW,CAAC,CAAC,CAAC;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}