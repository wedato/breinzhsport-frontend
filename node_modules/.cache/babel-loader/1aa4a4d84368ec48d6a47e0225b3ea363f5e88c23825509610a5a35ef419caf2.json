{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\aws_poc\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState(() => {\n    // Récupérer le panier du localStorage s'il existe\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  // Sauvegarder le panier dans localStorage à chaque modification\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Ajouter un produit au panier\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      // Vérifier si le produit est déjà dans le panier\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      if (existingItemIndex >= 0) {\n        // Si le produit existe déjà, mettre à jour la quantité\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity\n        };\n        return updatedCart;\n      } else {\n        // Sinon, ajouter le nouveau produit\n        return [...prevCart, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n\n  // Mettre à jour la quantité d'un produit\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Supprimer un produit du panier\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n\n  // Vider le panier\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Calculer le total du panier\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateQuantity,\n      removeFromCart,\n      clearCart,\n      getCartTotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"T7moOaDzx6qmGgRYKFg7QlDAK/o=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","quantity","prevCart","existingItemIndex","findIndex","item","id","updatedCart","updateQuantity","productId","removeFromCart","map","filter","clearCart","getCartTotal","reduce","total","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jonat/aws_poc/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    // Récupérer le panier du localStorage s'il existe\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  // Sauvegarder le panier dans localStorage à chaque modification\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Ajouter un produit au panier\n  const addToCart = (product, quantity = 1) => {\n    setCart((prevCart) => {\n      // Vérifier si le produit est déjà dans le panier\n      const existingItemIndex = prevCart.findIndex(\n        (item) => item.id === product.id\n      );\n\n      if (existingItemIndex >= 0) {\n        // Si le produit existe déjà, mettre à jour la quantité\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity,\n        };\n        return updatedCart;\n      } else {\n        // Sinon, ajouter le nouveau produit\n        return [...prevCart, { ...product, quantity }];\n      }\n    });\n  };\n\n  // Mettre à jour la quantité d'un produit\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n\n    setCart((prevCart) =>\n      prevCart.map((item) =>\n        item.id === productId ? { ...item, quantity } : item\n      )\n    );\n  };\n\n  // Supprimer un produit du panier\n  const removeFromCart = (productId) => {\n    setCart((prevCart) => prevCart.filter((item) => item.id !== productId));\n  };\n\n  // Vider le panier\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Calculer le total du panier\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        addToCart,\n        updateQuantity,\n        removeFromCart,\n        clearCart,\n        getCartTotal,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}