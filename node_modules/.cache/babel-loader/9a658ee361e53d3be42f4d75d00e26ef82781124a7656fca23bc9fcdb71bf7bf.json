{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar ArrayBufferByteLength = require('./ArrayBufferByteLength');\nvar IsDetachedBuffer = require('./IsDetachedBuffer');\nvar isTypedArray = require('is-typed-array');\nvar typedArrayBuffer = require('typed-array-buffer');\n\n// https://262.ecma-international.org/15.0/#sec-maketypedarraywithbufferwitnessrecord\n\nmodule.exports = function MakeTypedArrayWithBufferWitnessRecord(obj, order) {\n  if (!isTypedArray(obj)) {\n    throw new $TypeError('Assertion failed: `obj` must be a Typed Array');\n  }\n  if (order !== 'SEQ-CST' && order !== 'UNORDERED') {\n    throw new $TypeError('Assertion failed: `order` must be ~SEQ-CST~ or ~UNORDERED~');\n  }\n  var buffer = typedArrayBuffer(obj); // step 1\n\n  var byteLength = IsDetachedBuffer(buffer) ? 'DETACHED' : ArrayBufferByteLength(buffer, order); // steps 2 - 3\n\n  return {\n    '[[Object]]': obj,\n    '[[CachedBufferByteLength]]': byteLength\n  }; // step 4\n};","map":{"version":3,"names":["$TypeError","require","ArrayBufferByteLength","IsDetachedBuffer","isTypedArray","typedArrayBuffer","module","exports","MakeTypedArrayWithBufferWitnessRecord","obj","order","buffer","byteLength"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/es-abstract/2024/MakeTypedArrayWithBufferWitnessRecord.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar ArrayBufferByteLength = require('./ArrayBufferByteLength');\nvar IsDetachedBuffer = require('./IsDetachedBuffer');\n\nvar isTypedArray = require('is-typed-array');\nvar typedArrayBuffer = require('typed-array-buffer');\n\n// https://262.ecma-international.org/15.0/#sec-maketypedarraywithbufferwitnessrecord\n\nmodule.exports = function MakeTypedArrayWithBufferWitnessRecord(obj, order) {\n\tif (!isTypedArray(obj)) {\n\t\tthrow new $TypeError('Assertion failed: `obj` must be a Typed Array');\n\t}\n\tif (order !== 'SEQ-CST' && order !== 'UNORDERED') {\n\t\tthrow new $TypeError('Assertion failed: `order` must be ~SEQ-CST~ or ~UNORDERED~');\n\t}\n\n\tvar buffer = typedArrayBuffer(obj); // step 1\n\n\tvar byteLength = IsDetachedBuffer(buffer) ? 'DETACHED' : ArrayBufferByteLength(buffer, order); // steps 2 - 3\n\n\treturn { '[[Object]]': obj, '[[CachedBufferByteLength]]': byteLength }; // step 4\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAEpD,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;;AAEpD;;AAEAK,MAAM,CAACC,OAAO,GAAG,SAASC,qCAAqCA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC3E,IAAI,CAACN,YAAY,CAACK,GAAG,CAAC,EAAE;IACvB,MAAM,IAAIT,UAAU,CAAC,+CAA+C,CAAC;EACtE;EACA,IAAIU,KAAK,KAAK,SAAS,IAAIA,KAAK,KAAK,WAAW,EAAE;IACjD,MAAM,IAAIV,UAAU,CAAC,4DAA4D,CAAC;EACnF;EAEA,IAAIW,MAAM,GAAGN,gBAAgB,CAACI,GAAG,CAAC,CAAC,CAAC;;EAEpC,IAAIG,UAAU,GAAGT,gBAAgB,CAACQ,MAAM,CAAC,GAAG,UAAU,GAAGT,qBAAqB,CAACS,MAAM,EAAED,KAAK,CAAC,CAAC,CAAC;;EAE/F,OAAO;IAAE,YAAY,EAAED,GAAG;IAAE,4BAA4B,EAAEG;EAAW,CAAC,CAAC,CAAC;AACzE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}