{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  // default params\n  var steps = options.steps || 64;\n  var properties = options.properties ? options.properties : !Array.isArray(center) && center.type === \"Feature\" && center.properties ? center.properties : {};\n  // main\n  var coordinates = [];\n  for (var i = 0; i < steps; i++) {\n    coordinates.push(destination_1.default(center, radius, i * -360 / steps, options).geometry.coordinates);\n  }\n  coordinates.push(coordinates[0]);\n  return helpers_1.polygon([coordinates], properties);\n}\nexports.default = circle;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","destination_1","require","helpers_1","circle","center","radius","options","steps","properties","Array","isArray","type","coordinates","i","push","default","geometry","polygon"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@turf/circle/dist/js/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination_1.default(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return helpers_1.polygon([coordinates], properties);\n}\nexports.default = circle;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACjE,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAe,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACrC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC;EACA,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK,IAAI,EAAE;EAC/B,IAAIC,UAAU,GAAGF,OAAO,CAACE,UAAU,GAC7BF,OAAO,CAACE,UAAU,GAClB,CAACC,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,IAAIA,MAAM,CAACO,IAAI,KAAK,SAAS,IAAIP,MAAM,CAACI,UAAU,GACpEJ,MAAM,CAACI,UAAU,GACjB,CAAC,CAAC;EACZ;EACA,IAAII,WAAW,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,EAAEM,CAAC,EAAE,EAAE;IAC5BD,WAAW,CAACE,IAAI,CAACd,aAAa,CAACe,OAAO,CAACX,MAAM,EAAEC,MAAM,EAAGQ,CAAC,GAAG,CAAC,GAAG,GAAIN,KAAK,EAAED,OAAO,CAAC,CAACU,QAAQ,CACvFJ,WAAW,CAAC;EACrB;EACAA,WAAW,CAACE,IAAI,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,OAAOV,SAAS,CAACe,OAAO,CAAC,CAACL,WAAW,CAAC,EAAEJ,UAAU,CAAC;AACvD;AACAV,OAAO,CAACiB,OAAO,GAAGZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}