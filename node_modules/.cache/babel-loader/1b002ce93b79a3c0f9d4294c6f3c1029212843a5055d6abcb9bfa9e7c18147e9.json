{"ast":null,"code":"\"use strict\";\n\nvar fs = require('fs');\nvar logger = require('../../logger');\nvar ENV_CONFIG_LOCATION = '/var/elasticbeanstalk/xray/environment.conf';\nvar ElasticBeanstalkPlugin = {\n  /**\n   * A function to get data from the Elastic Beanstalk environment configuration file.\n   * @param {function} callback - The callback for the plugin loader.\n   */\n  getData: function (callback) {\n    fs.readFile(ENV_CONFIG_LOCATION, 'utf8', function (err, rawData) {\n      if (err) {\n        logger.getLogger().error('Error loading Elastic Beanstalk plugin:', err.stack);\n        callback();\n      } else {\n        var data = JSON.parse(rawData);\n        var metadata = {\n          elastic_beanstalk: {\n            environment: data.environment_name,\n            version_label: data.version_label,\n            deployment_id: data.deployment_id\n          }\n        };\n        callback(metadata);\n      }\n    });\n  },\n  originName: 'AWS::ElasticBeanstalk::Environment'\n};\nmodule.exports = ElasticBeanstalkPlugin;","map":{"version":3,"names":["fs","require","logger","ENV_CONFIG_LOCATION","ElasticBeanstalkPlugin","getData","callback","readFile","err","rawData","getLogger","error","stack","data","JSON","parse","metadata","elastic_beanstalk","environment","environment_name","version_label","deployment_id","originName","module","exports"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/aws-xray-sdk-core/dist/lib/segments/plugins/elastic_beanstalk_plugin.js"],"sourcesContent":["\"use strict\";\nvar fs = require('fs');\nvar logger = require('../../logger');\nvar ENV_CONFIG_LOCATION = '/var/elasticbeanstalk/xray/environment.conf';\nvar ElasticBeanstalkPlugin = {\n    /**\n     * A function to get data from the Elastic Beanstalk environment configuration file.\n     * @param {function} callback - The callback for the plugin loader.\n     */\n    getData: function (callback) {\n        fs.readFile(ENV_CONFIG_LOCATION, 'utf8', function (err, rawData) {\n            if (err) {\n                logger.getLogger().error('Error loading Elastic Beanstalk plugin:', err.stack);\n                callback();\n            }\n            else {\n                var data = JSON.parse(rawData);\n                var metadata = {\n                    elastic_beanstalk: {\n                        environment: data.environment_name,\n                        version_label: data.version_label,\n                        deployment_id: data.deployment_id\n                    }\n                };\n                callback(metadata);\n            }\n        });\n    },\n    originName: 'AWS::ElasticBeanstalk::Environment'\n};\nmodule.exports = ElasticBeanstalkPlugin;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIE,mBAAmB,GAAG,6CAA6C;AACvE,IAAIC,sBAAsB,GAAG;EACzB;AACJ;AACA;AACA;EACIC,OAAO,EAAE,SAAAA,CAAUC,QAAQ,EAAE;IACzBN,EAAE,CAACO,QAAQ,CAACJ,mBAAmB,EAAE,MAAM,EAAE,UAAUK,GAAG,EAAEC,OAAO,EAAE;MAC7D,IAAID,GAAG,EAAE;QACLN,MAAM,CAACQ,SAAS,CAAC,CAAC,CAACC,KAAK,CAAC,yCAAyC,EAAEH,GAAG,CAACI,KAAK,CAAC;QAC9EN,QAAQ,CAAC,CAAC;MACd,CAAC,MACI;QACD,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC;QAC9B,IAAIO,QAAQ,GAAG;UACXC,iBAAiB,EAAE;YACfC,WAAW,EAAEL,IAAI,CAACM,gBAAgB;YAClCC,aAAa,EAAEP,IAAI,CAACO,aAAa;YACjCC,aAAa,EAAER,IAAI,CAACQ;UACxB;QACJ,CAAC;QACDf,QAAQ,CAACU,QAAQ,CAAC;MACtB;IACJ,CAAC,CAAC;EACN,CAAC;EACDM,UAAU,EAAE;AAChB,CAAC;AACDC,MAAM,CAACC,OAAO,GAAGpB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}