{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport { Hub, Signer, jitteredExponentialRetry, getAmplifyUserAgent, Credentials } from \"@aws-amplify/core\";\nimport { Geo } from \"@aws-amplify/geo\";\nimport { Map as MaplibreMap } from \"maplibre-gl\";\nimport { urlEncodePeriods } from \"./utils\";\n/**\n * An object for encapsulating an Amplify Geo transform request and Amplify credentials\n * @class AmplifyMapLibreRequest\n * @param {ICredentials} currentCredentials Amplify credentials used for signing transformRequests\n * @param {String} region AWS region\n * @return {AmplifyMapLibreRequest} `this`\n *\n */\nexport default class AmplifyMapLibreRequest {\n  constructor(currentCredentials, region) {\n    this.refreshCredentials = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        this.credentials = yield Credentials.get();\n      } catch (e) {\n        console.error(`Failed to refresh credentials: ${e}`);\n        throw e;\n      }\n    });\n    this.refreshCredentialsWithRetry = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        const MAX_DELAY_MS = 5 * 60 * 1000; // 5 minutes\n        yield jitteredExponentialRetry(this.refreshCredentials, [], MAX_DELAY_MS);\n        // Refresh credentials on a timer because HubEvents do not trigger on credential refresh currently\n        this.activeTimeout && clearTimeout(this.activeTimeout);\n        // Refresh credentials when expiration time is later than now\n        if (this.credentials.expiration.getTime() > new Date().getTime()) {\n          const expiration = new Date(this.credentials.expiration);\n          const timeout = expiration.getTime() - new Date().getTime() - 10000; // Adds a 10 second buffer time before the next refresh\n          this.activeTimeout = window.setTimeout(this.refreshCredentialsWithRetry, Math.min(timeout, 3600000) // Set timeout to an hour if we somehow don't have a value for timeout\n          );\n        }\n      } catch (e) {\n        console.error(`Failed to refresh credentials: ${e}`);\n      }\n    });\n    /**\n     * A callback function that can be passed to a maplibre map object that is run before the map makes a request for an external URL. This transform request is used to sign the request with AWS Sigv4 Auth. [https://maplibre.org/maplibre-gl-js-docs/api/map/](https://maplibre.org/maplibre-gl-js-docs/api/map/)\n     * @param {string} url\n     * @param {string} resourceType\n     * @returns {RequestParameters} [https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters](https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters)\n     */\n    this.transformRequest = (url, resourceType) => {\n      let styleUrl = url;\n      if (resourceType === \"Style\" && !url.includes(\"://\")) {\n        if (this.region == undefined) {\n          throw new Error(\"AWS region for map is undefined. Please verify that the region is set in aws-exports.js or that you are providing an AWS region parameter to createMap\");\n        }\n        styleUrl = `https://maps.geo.${this.region}.amazonaws.com/maps/v0/maps/${url}/style-descriptor`;\n      }\n      const urlObject = new URL(styleUrl);\n      if (urlObject.hostname.endsWith(\".amazonaws.com\")) {\n        // only sign AWS requests (with the signature as part of the query string)\n        urlObject.searchParams.append('x-amz-user-agent', encodeURIComponent(urlEncodePeriods(getAmplifyUserAgent())));\n        return {\n          url: Signer.signUrl(urlObject.href, {\n            access_key: this.credentials.accessKeyId,\n            secret_key: this.credentials.secretAccessKey,\n            session_token: this.credentials.sessionToken\n          })\n        };\n      }\n    };\n    this.credentials = currentCredentials;\n    this.region = region;\n    this.activeTimeout = null;\n    this.refreshCredentialsWithRetry();\n    Hub.listen(\"auth\", data => {\n      switch (data.payload.event) {\n        case \"signIn\":\n        case \"signOut\":\n        case \"tokenRefresh\":\n          this.refreshCredentialsWithRetry();\n          break;\n      }\n    });\n  }\n}\n_a = AmplifyMapLibreRequest;\nAmplifyMapLibreRequest.createMapLibreMap = options => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n      region,\n      mapConstructor = MaplibreMap\n    } = options,\n    maplibreOption = __rest(options, [\"region\", \"mapConstructor\"]);\n  const defaultMap = Geo.getDefaultMap();\n  const amplifyRequest = new AmplifyMapLibreRequest(yield Credentials.get(), region || defaultMap.region);\n  const transformRequest = amplifyRequest.transformRequest;\n  const map = new mapConstructor(Object.assign(Object.assign({}, maplibreOption), {\n    style: options.style || defaultMap.mapName,\n    // Amplify uses the name of the map in the maplibre style field,\n    transformRequest\n  }));\n  return map;\n});\nexport const createMap = options => __awaiter(void 0, void 0, void 0, function* () {\n  return AmplifyMapLibreRequest.createMapLibreMap(options);\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","Hub","Signer","jitteredExponentialRetry","getAmplifyUserAgent","Credentials","Geo","Map","MaplibreMap","urlEncodePeriods","AmplifyMapLibreRequest","constructor","currentCredentials","region","refreshCredentials","credentials","get","console","error","refreshCredentialsWithRetry","MAX_DELAY_MS","activeTimeout","clearTimeout","expiration","getTime","Date","timeout","window","setTimeout","Math","min","transformRequest","url","resourceType","styleUrl","includes","undefined","Error","urlObject","URL","hostname","endsWith","searchParams","append","encodeURIComponent","signUrl","href","access_key","accessKeyId","secret_key","secretAccessKey","session_token","sessionToken","listen","data","payload","event","createMapLibreMap","options","mapConstructor","maplibreOption","defaultMap","getDefaultMap","amplifyRequest","map","assign","style","mapName","createMap"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/maplibre-gl-js-amplify/lib/esm/AmplifyMapLibreRequest.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a;\nimport { Hub, Signer, jitteredExponentialRetry, getAmplifyUserAgent, Credentials, } from \"@aws-amplify/core\";\nimport { Geo } from \"@aws-amplify/geo\";\nimport { Map as MaplibreMap } from \"maplibre-gl\";\nimport { urlEncodePeriods } from \"./utils\";\n/**\n * An object for encapsulating an Amplify Geo transform request and Amplify credentials\n * @class AmplifyMapLibreRequest\n * @param {ICredentials} currentCredentials Amplify credentials used for signing transformRequests\n * @param {String} region AWS region\n * @return {AmplifyMapLibreRequest} `this`\n *\n */\nexport default class AmplifyMapLibreRequest {\n    constructor(currentCredentials, region) {\n        this.refreshCredentials = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.credentials = yield Credentials.get();\n            }\n            catch (e) {\n                console.error(`Failed to refresh credentials: ${e}`);\n                throw e;\n            }\n        });\n        this.refreshCredentialsWithRetry = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const MAX_DELAY_MS = 5 * 60 * 1000; // 5 minutes\n                yield jitteredExponentialRetry(this.refreshCredentials, [], MAX_DELAY_MS);\n                // Refresh credentials on a timer because HubEvents do not trigger on credential refresh currently\n                this.activeTimeout && clearTimeout(this.activeTimeout);\n                // Refresh credentials when expiration time is later than now\n                if (this.credentials.expiration.getTime() > (new Date()).getTime()) {\n                    const expiration = new Date(this.credentials.expiration);\n                    const timeout = expiration.getTime() - new Date().getTime() - 10000; // Adds a 10 second buffer time before the next refresh\n                    this.activeTimeout = window.setTimeout(this.refreshCredentialsWithRetry, Math.min(timeout, 3600000) // Set timeout to an hour if we somehow don't have a value for timeout\n                    );\n                }\n            }\n            catch (e) {\n                console.error(`Failed to refresh credentials: ${e}`);\n            }\n        });\n        /**\n         * A callback function that can be passed to a maplibre map object that is run before the map makes a request for an external URL. This transform request is used to sign the request with AWS Sigv4 Auth. [https://maplibre.org/maplibre-gl-js-docs/api/map/](https://maplibre.org/maplibre-gl-js-docs/api/map/)\n         * @param {string} url\n         * @param {string} resourceType\n         * @returns {RequestParameters} [https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters](https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters)\n         */\n        this.transformRequest = (url, resourceType) => {\n            let styleUrl = url;\n            if (resourceType === \"Style\" && !url.includes(\"://\")) {\n                if (this.region == undefined) {\n                    throw new Error(\"AWS region for map is undefined. Please verify that the region is set in aws-exports.js or that you are providing an AWS region parameter to createMap\");\n                }\n                styleUrl = `https://maps.geo.${this.region}.amazonaws.com/maps/v0/maps/${url}/style-descriptor`;\n            }\n            const urlObject = new URL(styleUrl);\n            if (urlObject.hostname.endsWith(\".amazonaws.com\")) {\n                // only sign AWS requests (with the signature as part of the query string)\n                urlObject.searchParams.append('x-amz-user-agent', encodeURIComponent(urlEncodePeriods(getAmplifyUserAgent())));\n                return {\n                    url: Signer.signUrl(urlObject.href, {\n                        access_key: this.credentials.accessKeyId,\n                        secret_key: this.credentials.secretAccessKey,\n                        session_token: this.credentials.sessionToken,\n                    }),\n                };\n            }\n        };\n        this.credentials = currentCredentials;\n        this.region = region;\n        this.activeTimeout = null;\n        this.refreshCredentialsWithRetry();\n        Hub.listen(\"auth\", (data) => {\n            switch (data.payload.event) {\n                case \"signIn\":\n                case \"signOut\":\n                case \"tokenRefresh\":\n                    this.refreshCredentialsWithRetry();\n                    break;\n            }\n        });\n    }\n}\n_a = AmplifyMapLibreRequest;\nAmplifyMapLibreRequest.createMapLibreMap = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    const { region, mapConstructor = MaplibreMap } = options, maplibreOption = __rest(options, [\"region\", \"mapConstructor\"]);\n    const defaultMap = Geo.getDefaultMap();\n    const amplifyRequest = new AmplifyMapLibreRequest(yield Credentials.get(), region || defaultMap.region);\n    const transformRequest = amplifyRequest.transformRequest;\n    const map = new mapConstructor(Object.assign(Object.assign({}, maplibreOption), { style: options.style || defaultMap.mapName, // Amplify uses the name of the map in the maplibre style field,\n        transformRequest }));\n    return map;\n});\nexport const createMap = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    return AmplifyMapLibreRequest.createMapLibreMap(options);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}