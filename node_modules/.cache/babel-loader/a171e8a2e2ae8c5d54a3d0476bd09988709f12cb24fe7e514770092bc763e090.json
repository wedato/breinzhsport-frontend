{"ast":null,"code":"import AWSXRay from\"aws-xray-sdk-core\";// Configuration de X-Ray pour le frontend\nconst xrayConfig={serviceName:\"breinzhsport-frontend\",samplingRules:{default:{fixed_target:1,rate:0.1}}};// Initialisation de X-Ray avec la configuration\nAWSXRay.middleware.setSamplingRules(xrayConfig.samplingRules);AWSXRay.setServiceName(xrayConfig.serviceName);// Fonction pour tracer les requêtes API\nexport const traceApiCall=async(apiName,operation,params)=>{const segment=AWSXRay.beginSegment(`API-${apiName}`);try{segment.addAnnotation(\"operation\",operation);segment.addAnnotation(\"params\",JSON.stringify(params));// Ici, vous effectuez votre appel API\n// const result = await yourApiCall(params);\nsegment.close();// return result;\n}catch(error){segment.addError(error);segment.close();throw error;}};export default AWSXRay;","map":{"version":3,"names":["AWSXRay","xrayConfig","serviceName","samplingRules","default","fixed_target","rate","middleware","setSamplingRules","setServiceName","traceApiCall","apiName","operation","params","segment","beginSegment","addAnnotation","JSON","stringify","close","error","addError"],"sources":["C:/Users/jonat/aws_poc/frontend/src/xray-config.js"],"sourcesContent":["import AWSXRay from \"aws-xray-sdk-core\";\n\n// Configuration de X-Ray pour le frontend\nconst xrayConfig = {\n  serviceName: \"breinzhsport-frontend\",\n  samplingRules: {\n    default: {\n      fixed_target: 1,\n      rate: 0.1,\n    },\n  },\n};\n\n// Initialisation de X-Ray avec la configuration\nAWSXRay.middleware.setSamplingRules(xrayConfig.samplingRules);\nAWSXRay.setServiceName(xrayConfig.serviceName);\n\n// Fonction pour tracer les requêtes API\nexport const traceApiCall = async (apiName, operation, params) => {\n  const segment = AWSXRay.beginSegment(`API-${apiName}`);\n  try {\n    segment.addAnnotation(\"operation\", operation);\n    segment.addAnnotation(\"params\", JSON.stringify(params));\n\n    // Ici, vous effectuez votre appel API\n    // const result = await yourApiCall(params);\n\n    segment.close();\n    // return result;\n  } catch (error) {\n    segment.addError(error);\n    segment.close();\n    throw error;\n  }\n};\n\nexport default AWSXRay;\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,mBAAmB,CAEvC;AACA,KAAM,CAAAC,UAAU,CAAG,CACjBC,WAAW,CAAE,uBAAuB,CACpCC,aAAa,CAAE,CACbC,OAAO,CAAE,CACPC,YAAY,CAAE,CAAC,CACfC,IAAI,CAAE,GACR,CACF,CACF,CAAC,CAED;AACAN,OAAO,CAACO,UAAU,CAACC,gBAAgB,CAACP,UAAU,CAACE,aAAa,CAAC,CAC7DH,OAAO,CAACS,cAAc,CAACR,UAAU,CAACC,WAAW,CAAC,CAE9C;AACA,MAAO,MAAM,CAAAQ,YAAY,CAAG,KAAAA,CAAOC,OAAO,CAAEC,SAAS,CAAEC,MAAM,GAAK,CAChE,KAAM,CAAAC,OAAO,CAAGd,OAAO,CAACe,YAAY,CAAC,OAAOJ,OAAO,EAAE,CAAC,CACtD,GAAI,CACFG,OAAO,CAACE,aAAa,CAAC,WAAW,CAAEJ,SAAS,CAAC,CAC7CE,OAAO,CAACE,aAAa,CAAC,QAAQ,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC,CAEvD;AACA;AAEAC,OAAO,CAACK,KAAK,CAAC,CAAC,CACf;AACF,CAAE,MAAOC,KAAK,CAAE,CACdN,OAAO,CAACO,QAAQ,CAACD,KAAK,CAAC,CACvBN,OAAO,CAACK,KAAK,CAAC,CAAC,CACf,KAAM,CAAAC,KAAK,CACb,CACF,CAAC,CAED,cAAe,CAAApB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}