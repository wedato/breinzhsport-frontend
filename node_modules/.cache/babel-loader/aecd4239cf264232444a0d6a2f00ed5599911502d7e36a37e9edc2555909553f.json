{"ast":null,"code":"import { generateID } from '../lib/id.js';\nimport Feature from './feature.js';\nimport * as Constants from '../constants.js';\nimport MultiPoint from './point.js';\nimport MultiLineString from './line_string.js';\nimport MultiPolygon from './polygon.js';\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = !parts[1] ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\nconst MultiFeature = function (ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\nMultiFeature.prototype = Object.create(Feature.prototype);\nMultiFeature.prototype._coordinatesToFeatures = function (coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: generateID(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\nMultiFeature.prototype.isValid = function () {\n  return this.features.every(f => f.isValid());\n};\nMultiFeature.prototype.setCoordinates = function (coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\nMultiFeature.prototype.getCoordinate = function (path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\nMultiFeature.prototype.getCoordinates = function () {\n  return JSON.parse(JSON.stringify(this.features.map(f => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\nMultiFeature.prototype.updateCoordinate = function (path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\nMultiFeature.prototype.addCoordinate = function (path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\nMultiFeature.prototype.removeCoordinate = function (path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\nMultiFeature.prototype.getFeatures = function () {\n  return this.features;\n};\nexport default MultiFeature;","map":{"version":3,"names":["generateID","Feature","Constants","MultiPoint","MultiLineString","MultiPolygon","models","takeAction","features","action","path","lng","lat","parts","split","idx","parseInt","tail","slice","join","MultiFeature","ctx","geojson","call","coordinates","model","geometry","type","undefined","TypeError","_coordinatesToFeatures","prototype","Object","create","Model","bind","map","coords","id","geojsonTypes","FEATURE","properties","replace","isValid","every","f","setCoordinates","changed","getCoordinate","getCoordinates","JSON","parse","stringify","POLYGON","updateCoordinate","addCoordinate","removeCoordinate","getFeatures"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/feature_types/multi_feature.js"],"sourcesContent":["import {generateID} from '../lib/id.js';\nimport Feature from './feature.js';\nimport * as Constants from '../constants.js';\n\nimport MultiPoint from './point.js';\nimport MultiLineString from './line_string.js';\nimport MultiPolygon from './polygon.js';\n\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\n\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\n\nconst MultiFeature = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\n\nMultiFeature.prototype = Object.create(Feature.prototype);\n\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: generateID(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\n\nMultiFeature.prototype.isValid = function() {\n  return this.features.every(f => f.isValid());\n};\n\nMultiFeature.prototype.setCoordinates = function(coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\n\nMultiFeature.prototype.getCoordinate = function(path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\n\nMultiFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\n\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.removeCoordinate = function(path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\n\nMultiFeature.prototype.getFeatures = function() {\n  return this.features;\n};\n\nexport default MultiFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}