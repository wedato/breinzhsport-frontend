{"ast":null,"code":"import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nvar EventStreamCodec = function () {\n  function EventStreamCodec(toUtf8, fromUtf8) {\n    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n  }\n  EventStreamCodec.prototype.encode = function (_a) {\n    var rawHeaders = _a.headers,\n      body = _a.body;\n    var headers = this.headerMarshaller.format(rawHeaders);\n    var length = headers.byteLength + body.byteLength + 16;\n    var out = new Uint8Array(length);\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    var checksum = new Crc32();\n    view.setUint32(0, length, false);\n    view.setUint32(4, headers.byteLength, false);\n    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n    out.set(headers, 12);\n    out.set(body, headers.byteLength + 12);\n    view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n    return out;\n  };\n  EventStreamCodec.prototype.decode = function (message) {\n    var _a = splitMessage(message),\n      headers = _a.headers,\n      body = _a.body;\n    return {\n      headers: this.headerMarshaller.parse(headers),\n      body: body\n    };\n  };\n  EventStreamCodec.prototype.formatHeaders = function (rawHeaders) {\n    return this.headerMarshaller.format(rawHeaders);\n  };\n  return EventStreamCodec;\n}();\nexport { EventStreamCodec };","map":{"version":3,"names":["Crc32","HeaderMarshaller","splitMessage","EventStreamCodec","toUtf8","fromUtf8","headerMarshaller","prototype","encode","_a","rawHeaders","headers","body","format","length","byteLength","out","Uint8Array","view","DataView","buffer","byteOffset","checksum","setUint32","update","subarray","digest","set","decode","message","parse","formatHeaders"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-sdk/eventstream-codec/dist-es/EventStreamCodec.js"],"sourcesContent":["import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nvar EventStreamCodec = (function () {\n    function EventStreamCodec(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n    }\n    EventStreamCodec.prototype.encode = function (_a) {\n        var rawHeaders = _a.headers, body = _a.body;\n        var headers = this.headerMarshaller.format(rawHeaders);\n        var length = headers.byteLength + body.byteLength + 16;\n        var out = new Uint8Array(length);\n        var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        var checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    };\n    EventStreamCodec.prototype.decode = function (message) {\n        var _a = splitMessage(message), headers = _a.headers, body = _a.body;\n        return { headers: this.headerMarshaller.parse(headers), body: body };\n    };\n    EventStreamCodec.prototype.formatHeaders = function (rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    };\n    return EventStreamCodec;\n}());\nexport { EventStreamCodec };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,IAAIC,gBAAgB,GAAI,YAAY;EAChC,SAASA,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACxC,IAAI,CAACC,gBAAgB,GAAG,IAAIL,gBAAgB,CAACG,MAAM,EAAEC,QAAQ,CAAC;EAClE;EACAF,gBAAgB,CAACI,SAAS,CAACC,MAAM,GAAG,UAAUC,EAAE,EAAE;IAC9C,IAAIC,UAAU,GAAGD,EAAE,CAACE,OAAO;MAAEC,IAAI,GAAGH,EAAE,CAACG,IAAI;IAC3C,IAAID,OAAO,GAAG,IAAI,CAACL,gBAAgB,CAACO,MAAM,CAACH,UAAU,CAAC;IACtD,IAAII,MAAM,GAAGH,OAAO,CAACI,UAAU,GAAGH,IAAI,CAACG,UAAU,GAAG,EAAE;IACtD,IAAIC,GAAG,GAAG,IAAIC,UAAU,CAACH,MAAM,CAAC;IAChC,IAAII,IAAI,GAAG,IAAIC,QAAQ,CAACH,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,UAAU,EAAEL,GAAG,CAACD,UAAU,CAAC;IACnE,IAAIO,QAAQ,GAAG,IAAItB,KAAK,CAAC,CAAC;IAC1BkB,IAAI,CAACK,SAAS,CAAC,CAAC,EAAET,MAAM,EAAE,KAAK,CAAC;IAChCI,IAAI,CAACK,SAAS,CAAC,CAAC,EAAEZ,OAAO,CAACI,UAAU,EAAE,KAAK,CAAC;IAC5CG,IAAI,CAACK,SAAS,CAAC,CAAC,EAAED,QAAQ,CAACE,MAAM,CAACR,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC;IACtEV,GAAG,CAACW,GAAG,CAAChB,OAAO,EAAE,EAAE,CAAC;IACpBK,GAAG,CAACW,GAAG,CAACf,IAAI,EAAED,OAAO,CAACI,UAAU,GAAG,EAAE,CAAC;IACtCG,IAAI,CAACK,SAAS,CAACT,MAAM,GAAG,CAAC,EAAEQ,QAAQ,CAACE,MAAM,CAACR,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAEX,MAAM,GAAG,CAAC,CAAC,CAAC,CAACY,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC;IACxF,OAAOV,GAAG;EACd,CAAC;EACDb,gBAAgB,CAACI,SAAS,CAACqB,MAAM,GAAG,UAAUC,OAAO,EAAE;IACnD,IAAIpB,EAAE,GAAGP,YAAY,CAAC2B,OAAO,CAAC;MAAElB,OAAO,GAAGF,EAAE,CAACE,OAAO;MAAEC,IAAI,GAAGH,EAAE,CAACG,IAAI;IACpE,OAAO;MAAED,OAAO,EAAE,IAAI,CAACL,gBAAgB,CAACwB,KAAK,CAACnB,OAAO,CAAC;MAAEC,IAAI,EAAEA;IAAK,CAAC;EACxE,CAAC;EACDT,gBAAgB,CAACI,SAAS,CAACwB,aAAa,GAAG,UAAUrB,UAAU,EAAE;IAC7D,OAAO,IAAI,CAACJ,gBAAgB,CAACO,MAAM,CAACH,UAAU,CAAC;EACnD,CAAC;EACD,OAAOP,gBAAgB;AAC3B,CAAC,CAAC,CAAE;AACJ,SAASA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}