{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $concat = GetIntrinsic('%Array.prototype.concat%');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar $slice = callBound('Array.prototype.slice');\nvar hasSymbols = require('has-symbols/shams')();\nvar isConcatSpreadable = hasSymbols && Symbol.isConcatSpreadable;\n\n/** @type {never[]} */\nvar empty = [];\nvar $concatApply = isConcatSpreadable ? callBind.apply($concat, empty) : null;\n\n// eslint-disable-next-line no-extra-parens\nvar isArray = isConcatSpreadable ? (/** @type {(value: unknown) => value is unknown[]} */require('isarray')) : null;\n\n/** @type {import('.')} */\nmodule.exports = isConcatSpreadable\n// eslint-disable-next-line no-unused-vars\n? function safeArrayConcat(item) {\n  for (var i = 0; i < arguments.length; i += 1) {\n    /** @type {typeof item} */var arg = arguments[i];\n    // @ts-expect-error ts(2538) see https://github.com/microsoft/TypeScript/issues/9998#issuecomment-1890787975; works if `const`\n    if (arg && typeof arg === 'object' && typeof arg[isConcatSpreadable] === 'boolean') {\n      // @ts-expect-error ts(7015) TS doesn't yet support Symbol indexing\n      if (!empty[isConcatSpreadable]) {\n        // @ts-expect-error ts(7015) TS doesn't yet support Symbol indexing\n        empty[isConcatSpreadable] = true;\n      }\n      // @ts-expect-error ts(2721) ts(18047) not sure why TS can't figure out this can't be null\n      var arr = isArray(arg) ? $slice(arg) : [arg];\n      // @ts-expect-error ts(7015) TS can't handle expandos on an array\n      arr[isConcatSpreadable] = true; // shadow the property. TODO: use [[Define]]\n      arguments[i] = arr;\n    }\n  }\n  // @ts-expect-error ts(2345) https://github.com/microsoft/TypeScript/issues/57164 TS doesn't understand that apply can take an arguments object\n  return $concatApply(arguments);\n} : callBind($concat, empty);","map":{"version":3,"names":["GetIntrinsic","require","$concat","callBind","callBound","$slice","hasSymbols","isConcatSpreadable","Symbol","empty","$concatApply","apply","isArray","module","exports","safeArrayConcat","item","i","arguments","length","arg","arr"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/safe-array-concat/index.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $concat = GetIntrinsic('%Array.prototype.concat%');\n\nvar callBind = require('call-bind');\n\nvar callBound = require('call-bound');\nvar $slice = callBound('Array.prototype.slice');\n\nvar hasSymbols = require('has-symbols/shams')();\nvar isConcatSpreadable = hasSymbols && Symbol.isConcatSpreadable;\n\n/** @type {never[]} */ var empty = [];\nvar $concatApply = isConcatSpreadable ? callBind.apply($concat, empty) : null;\n\n// eslint-disable-next-line no-extra-parens\nvar isArray = isConcatSpreadable ? /** @type {(value: unknown) => value is unknown[]} */ (require('isarray')) : null;\n\n/** @type {import('.')} */\nmodule.exports = isConcatSpreadable\n\t// eslint-disable-next-line no-unused-vars\n\t? function safeArrayConcat(item) {\n\t\tfor (var i = 0; i < arguments.length; i += 1) {\n\t\t\t/** @type {typeof item} */ var arg = arguments[i];\n\t\t\t// @ts-expect-error ts(2538) see https://github.com/microsoft/TypeScript/issues/9998#issuecomment-1890787975; works if `const`\n\t\t\tif (arg && typeof arg === 'object' && typeof arg[isConcatSpreadable] === 'boolean') {\n\t\t\t\t// @ts-expect-error ts(7015) TS doesn't yet support Symbol indexing\n\t\t\t\tif (!empty[isConcatSpreadable]) {\n\t\t\t\t\t// @ts-expect-error ts(7015) TS doesn't yet support Symbol indexing\n\t\t\t\t\tempty[isConcatSpreadable] = true;\n\t\t\t\t}\n\t\t\t\t// @ts-expect-error ts(2721) ts(18047) not sure why TS can't figure out this can't be null\n\t\t\t\tvar arr = isArray(arg) ? $slice(arg) : [arg];\n\t\t\t\t// @ts-expect-error ts(7015) TS can't handle expandos on an array\n\t\t\t\tarr[isConcatSpreadable] = true; // shadow the property. TODO: use [[Define]]\n\t\t\t\targuments[i] = arr;\n\t\t\t}\n\t\t}\n\t\t// @ts-expect-error ts(2345) https://github.com/microsoft/TypeScript/issues/57164 TS doesn't understand that apply can take an arguments object\n\t\treturn $concatApply(arguments);\n\t}\n\t: callBind($concat, empty);\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,OAAO,GAAGF,YAAY,CAAC,0BAA0B,CAAC;AAEtD,IAAIG,QAAQ,GAAGF,OAAO,CAAC,WAAW,CAAC;AAEnC,IAAIG,SAAS,GAAGH,OAAO,CAAC,YAAY,CAAC;AACrC,IAAII,MAAM,GAAGD,SAAS,CAAC,uBAAuB,CAAC;AAE/C,IAAIE,UAAU,GAAGL,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC/C,IAAIM,kBAAkB,GAAGD,UAAU,IAAIE,MAAM,CAACD,kBAAkB;;AAEhE;AAAuB,IAAIE,KAAK,GAAG,EAAE;AACrC,IAAIC,YAAY,GAAGH,kBAAkB,GAAGJ,QAAQ,CAACQ,KAAK,CAACT,OAAO,EAAEO,KAAK,CAAC,GAAG,IAAI;;AAE7E;AACA,IAAIG,OAAO,GAAGL,kBAAkB,IAAG,qDAAuDN,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI;;AAEpH;AACAY,MAAM,CAACC,OAAO,GAAGP;AAChB;AAAA,EACE,SAASQ,eAAeA,CAACC,IAAI,EAAE;EAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IAC7C,0BAA2B,IAAIG,GAAG,GAAGF,SAAS,CAACD,CAAC,CAAC;IACjD;IACA,IAAIG,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,CAACb,kBAAkB,CAAC,KAAK,SAAS,EAAE;MACnF;MACA,IAAI,CAACE,KAAK,CAACF,kBAAkB,CAAC,EAAE;QAC/B;QACAE,KAAK,CAACF,kBAAkB,CAAC,GAAG,IAAI;MACjC;MACA;MACA,IAAIc,GAAG,GAAGT,OAAO,CAACQ,GAAG,CAAC,GAAGf,MAAM,CAACe,GAAG,CAAC,GAAG,CAACA,GAAG,CAAC;MAC5C;MACAC,GAAG,CAACd,kBAAkB,CAAC,GAAG,IAAI,CAAC,CAAC;MAChCW,SAAS,CAACD,CAAC,CAAC,GAAGI,GAAG;IACnB;EACD;EACA;EACA,OAAOX,YAAY,CAACQ,SAAS,CAAC;AAC/B,CAAC,GACCf,QAAQ,CAACD,OAAO,EAAEO,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}