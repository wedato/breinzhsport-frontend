{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __spread, __values } from \"tslib\";\nimport { DescribeProjectVersionsCommand } from \"../commands/DescribeProjectVersionsCommand\";\nimport { WaiterState, createWaiter } from \"@aws-sdk/util-waiter\";\nvar checkState = function (client, input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var result_1, returnComparator, allStringEq_5, _a, _b, element_4, returnComparator, _c, _d, anyStringEq_4, exception_1;\n    var e_1, _e, e_2, _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _g.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, client.send(new DescribeProjectVersionsCommand(input))];\n        case 1:\n          result_1 = _g.sent();\n          try {\n            returnComparator = function () {\n              var flat_1 = [].concat.apply([], __spread(result_1.ProjectVersionDescriptions));\n              var projection_3 = flat_1.map(function (element_2) {\n                return element_2.Status;\n              });\n              return projection_3;\n            };\n            allStringEq_5 = returnComparator().length > 0;\n            try {\n              for (_a = __values(returnComparator()), _b = _a.next(); !_b.done; _b = _a.next()) {\n                element_4 = _b.value;\n                allStringEq_5 = allStringEq_5 && element_4 == \"RUNNING\";\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n            if (allStringEq_5) {\n              return [2 /*return*/, {\n                state: WaiterState.SUCCESS\n              }];\n            }\n          } catch (e) {}\n          try {\n            returnComparator = function () {\n              var flat_1 = [].concat.apply([], __spread(result_1.ProjectVersionDescriptions));\n              var projection_3 = flat_1.map(function (element_2) {\n                return element_2.Status;\n              });\n              return projection_3;\n            };\n            try {\n              for (_c = __values(returnComparator()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                anyStringEq_4 = _d.value;\n                if (anyStringEq_4 == \"FAILED\") {\n                  return [2 /*return*/, {\n                    state: WaiterState.FAILURE\n                  }];\n                }\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (_d && !_d.done && (_f = _c.return)) _f.call(_c);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n          } catch (e) {}\n          return [3 /*break*/, 3];\n        case 2:\n          exception_1 = _g.sent();\n          return [3 /*break*/, 3];\n        case 3:\n          return [2 /*return*/, {\n            state: WaiterState.RETRY\n          }];\n      }\n    });\n  });\n};\n/**\n * Wait until the ProjectVersion is running.\n *  @param params : Waiter configuration options.\n *  @param input : the input to DescribeProjectVersionsCommand for polling.\n */\nexport var waitForProjectVersionRunning = function (params, input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var serviceDefaults;\n    return __generator(this, function (_a) {\n      serviceDefaults = {\n        minDelay: 30,\n        maxDelay: 120\n      };\n      return [2 /*return*/, createWaiter(__assign(__assign({}, serviceDefaults), params), input, checkState)];\n    });\n  });\n};","map":{"version":3,"names":["DescribeProjectVersionsCommand","WaiterState","createWaiter","checkState","client","input","__awaiter","send","result_1","_g","sent","returnComparator","flat_1","concat","apply","__spread","ProjectVersionDescriptions","projection_3","map","element_2","Status","allStringEq_5","length","_a","__values","_b","next","done","element_4","value","state","SUCCESS","e","_c","_d","anyStringEq_4","FAILURE","RETRY","waitForProjectVersionRunning","params","serviceDefaults","minDelay","maxDelay","__assign"],"sources":["C:\\Users\\jonat\\aws_poc\\frontend\\node_modules\\@aws-sdk\\client-rekognition\\waiters\\waitForProjectVersionRunning.ts"],"sourcesContent":["import { RekognitionClient } from \"../RekognitionClient\";\nimport {\n  DescribeProjectVersionsCommand,\n  DescribeProjectVersionsCommandInput,\n} from \"../commands/DescribeProjectVersionsCommand\";\nimport { WaiterConfiguration, WaiterResult, WaiterState, createWaiter } from \"@aws-sdk/util-waiter\";\n\nconst checkState = async (\n  client: RekognitionClient,\n  input: DescribeProjectVersionsCommandInput\n): Promise<WaiterResult> => {\n  try {\n    let result: any = await client.send(new DescribeProjectVersionsCommand(input));\n    try {\n      let returnComparator = () => {\n        let flat_1: any[] = [].concat(...result.ProjectVersionDescriptions);\n        let projection_3 = flat_1.map((element_2: any) => {\n          return element_2.Status;\n        });\n        return projection_3;\n      };\n      let allStringEq_5 = returnComparator().length > 0;\n      for (let element_4 of returnComparator()) {\n        allStringEq_5 = allStringEq_5 && element_4 == \"RUNNING\";\n      }\n      if (allStringEq_5) {\n        return { state: WaiterState.SUCCESS };\n      }\n    } catch (e) {}\n    try {\n      let returnComparator = () => {\n        let flat_1: any[] = [].concat(...result.ProjectVersionDescriptions);\n        let projection_3 = flat_1.map((element_2: any) => {\n          return element_2.Status;\n        });\n        return projection_3;\n      };\n      for (let anyStringEq_4 of returnComparator()) {\n        if (anyStringEq_4 == \"FAILED\") {\n          return { state: WaiterState.FAILURE };\n        }\n      }\n    } catch (e) {}\n  } catch (exception) {}\n  return { state: WaiterState.RETRY };\n};\n/**\n * Wait until the ProjectVersion is running.\n *  @param params : Waiter configuration options.\n *  @param input : the input to DescribeProjectVersionsCommand for polling.\n */\nexport const waitForProjectVersionRunning = async (\n  params: WaiterConfiguration<RekognitionClient>,\n  input: DescribeProjectVersionsCommandInput\n): Promise<WaiterResult> => {\n  const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n  return createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\n"],"mappings":";AACA,SACEA,8BAA8B,QAEzB,4CAA4C;AACnD,SAA4CC,WAAW,EAAEC,YAAY,QAAQ,sBAAsB;AAEnG,IAAMC,UAAU,GAAG,SAAAA,CACjBC,MAAyB,EACzBC,KAA0C;EAAA,OAAAC,SAAA;;;;;;;UAGtB,qBAAMF,MAAM,CAACG,IAAI,CAAC,IAAIP,8BAA8B,CAACK,KAAK,CAAC,CAAC;;UAA1EG,QAAA,GAAcC,EAAA,CAAAC,IAAA,EAA4D;UAC9E,IAAI;YACEC,gBAAgB,GAAG,SAAAA,CAAA;cACrB,IAAIC,MAAM,GAAU,EAAE,CAACC,MAAM,CAAAC,KAAA,CAAT,EAAE,EAAAC,QAAA,CAAWP,QAAM,CAACQ,0BAA0B,EAAC;cACnE,IAAIC,YAAY,GAAGL,MAAM,CAACM,GAAG,CAAC,UAACC,SAAc;gBAC3C,OAAOA,SAAS,CAACC,MAAM;cACzB,CAAC,CAAC;cACF,OAAOH,YAAY;YACrB,CAAC;YACGI,aAAa,GAAGV,gBAAgB,EAAE,CAACW,MAAM,GAAG,CAAC;;cACjD,KAAsBC,EAAA,GAAAC,QAAA,CAAAb,gBAAgB,EAAE,GAAAc,EAAA,GAAAF,EAAA,CAAAG,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAF,EAAA,CAAAG,IAAA,IAAE;gBAAjCE,SAAS,GAAAH,EAAA,CAAAI,KAAA;gBAChBR,aAAa,GAAGA,aAAa,IAAIO,SAAS,IAAI,SAAS;;;;;;;;;;;;;YAEzD,IAAIP,aAAa,EAAE;cACjB,sBAAO;gBAAES,KAAK,EAAE7B,WAAW,CAAC8B;cAAO,CAAE;;WAExC,CAAC,OAAOC,CAAC,EAAE;UACZ,IAAI;YACErB,gBAAgB,GAAG,SAAAA,CAAA;cACrB,IAAIC,MAAM,GAAU,EAAE,CAACC,MAAM,CAAAC,KAAA,CAAT,EAAE,EAAAC,QAAA,CAAWP,QAAM,CAACQ,0BAA0B,EAAC;cACnE,IAAIC,YAAY,GAAGL,MAAM,CAACM,GAAG,CAAC,UAACC,SAAc;gBAC3C,OAAOA,SAAS,CAACC,MAAM;cACzB,CAAC,CAAC;cACF,OAAOH,YAAY;YACrB,CAAC;;cACD,KAA0BgB,EAAA,GAAAT,QAAA,CAAAb,gBAAgB,EAAE,GAAAuB,EAAA,GAAAD,EAAA,CAAAP,IAAA,KAAAQ,EAAA,CAAAP,IAAA,EAAAO,EAAA,GAAAD,EAAA,CAAAP,IAAA,IAAE;gBAArCS,aAAa,GAAAD,EAAA,CAAAL,KAAA;gBACpB,IAAIM,aAAa,IAAI,QAAQ,EAAE;kBAC7B,sBAAO;oBAAEL,KAAK,EAAE7B,WAAW,CAACmC;kBAAO,CAAE;;;;;;;;;;;;;;WAG1C,CAAC,OAAOJ,CAAC,EAAE;;;;;;UAEd,sBAAO;YAAEF,KAAK,EAAE7B,WAAW,CAACoC;UAAK,CAAE;;;;CACpC;AACD;;;;;AAKA,OAAO,IAAMC,4BAA4B,GAAG,SAAAA,CAC1CC,MAA8C,EAC9ClC,KAA0C;EAAA,OAAAC,SAAA;;;MAEpCkC,eAAe,GAAG;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MACvD,sBAAOxC,YAAY,CAAAyC,QAAA,CAAAA,QAAA,KAAMH,eAAe,GAAKD,MAAM,GAAIlC,KAAK,EAAEF,UAAU,CAAC;;;CAC1E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}