{"ast":null,"code":"'use strict';\n\nvar modulo = require('./modulo');\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\nvar isFinite = require('math-intrinsics/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-touint16\n\nvar two16 = 0x10000; // Math.pow(2, 16)\n\nmodule.exports = function ToUint16(argument) {\n  var number = ToNumber(argument);\n  if (!isFinite(number) || number === 0) {\n    return 0;\n  }\n  var int = truncate(number);\n  var int16bit = modulo(int, two16);\n  return int16bit === 0 ? 0 : int16bit; // in the spec, these are math values, so we filter out -0 here\n};","map":{"version":3,"names":["modulo","require","ToNumber","truncate","isFinite","two16","module","exports","ToUint16","argument","number","int","int16bit"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/es-abstract/2024/ToUint16.js"],"sourcesContent":["'use strict';\n\nvar modulo = require('./modulo');\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\n\nvar isFinite = require('math-intrinsics/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-touint16\n\nvar two16 = 0x10000; // Math.pow(2, 16)\n\nmodule.exports = function ToUint16(argument) {\n\tvar number = ToNumber(argument);\n\tif (!isFinite(number) || number === 0) {\n\t\treturn 0;\n\t}\n\tvar int = truncate(number);\n\tvar int16bit = modulo(int, two16);\n\treturn int16bit === 0 ? 0 : int16bit; // in the spec, these are math values, so we filter out -0 here\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEpC,IAAIG,QAAQ,GAAGH,OAAO,CAAC,0BAA0B,CAAC;;AAElD;;AAEA,IAAII,KAAK,GAAG,OAAO,CAAC,CAAC;;AAErBC,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACC,QAAQ,EAAE;EAC5C,IAAIC,MAAM,GAAGR,QAAQ,CAACO,QAAQ,CAAC;EAC/B,IAAI,CAACL,QAAQ,CAACM,MAAM,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;IACtC,OAAO,CAAC;EACT;EACA,IAAIC,GAAG,GAAGR,QAAQ,CAACO,MAAM,CAAC;EAC1B,IAAIE,QAAQ,GAAGZ,MAAM,CAACW,GAAG,EAAEN,KAAK,CAAC;EACjC,OAAOO,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAGA,QAAQ,CAAC,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}