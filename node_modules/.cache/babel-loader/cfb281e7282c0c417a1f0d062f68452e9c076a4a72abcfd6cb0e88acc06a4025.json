{"ast":null,"code":"function e(t) {\n  switch (t && t.type || null) {\n    case \"FeatureCollection\":\n      return t.features = t.features.reduce(function (t, r) {\n        return t.concat(e(r));\n      }, []), t;\n    case \"Feature\":\n      return t.geometry ? e(t.geometry).map(function (e) {\n        var r = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(t.properties)),\n          geometry: e\n        };\n        return void 0 !== t.id && (r.id = t.id), r;\n      }) : [t];\n    case \"MultiPoint\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Point\",\n          coordinates: e\n        };\n      });\n    case \"MultiPolygon\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Polygon\",\n          coordinates: e\n        };\n      });\n    case \"MultiLineString\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"LineString\",\n          coordinates: e\n        };\n      });\n    case \"GeometryCollection\":\n      return t.geometries.map(e).reduce(function (e, t) {\n        return e.concat(t);\n      }, []);\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [t];\n  }\n}\nexport { e as default };","map":{"version":3,"names":["e","t","type","features","reduce","r","concat","geometry","map","properties","JSON","parse","stringify","id","coordinates","geometries","default"],"sources":["C:\\Users\\jonat\\aws_poc\\frontend\\node_modules\\geojson-flatten\\index.js"],"sourcesContent":["export default function flatten(gj) {\n  switch ((gj && gj.type) || null) {\n    case \"FeatureCollection\":\n      gj.features = gj.features.reduce(function(mem, feature) {\n        return mem.concat(flatten(feature));\n      }, []);\n      return gj;\n    case \"Feature\":\n      if (!gj.geometry) return [gj];\n      return flatten(gj.geometry).map(function(geom) {\n        var data = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(gj.properties)),\n          geometry: geom\n        };\n        if (gj.id !== undefined) {\n          data.id = gj.id;\n        }\n        return data;\n      });\n    case \"MultiPoint\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Point\", coordinates: _ };\n      });\n    case \"MultiPolygon\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Polygon\", coordinates: _ };\n      });\n    case \"MultiLineString\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"LineString\", coordinates: _ };\n      });\n    case \"GeometryCollection\":\n      return gj.geometries.map(flatten).reduce(function(memo, geoms) {\n        return memo.concat(geoms);\n      }, []);\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [gj];\n  }\n}\n"],"mappings":"AAAwB,SAAAA,EAAQC,CAAA;EAC9B,QAASA,CAAA,IAAMA,CAAA,CAAGC,IAAA,IAAS;IACzB,KAAK;MAIH,OAHAD,CAAA,CAAGE,QAAA,GAAWF,CAAA,CAAGE,QAAA,CAASC,MAAA,CAAO,UAASH,CAAA,EAAKI,CAAA;QAC7C,OAAOJ,CAAA,CAAIK,MAAA,CAAON,CAAA,CAAQK,CAAA,EAC5B;MAAA,GAAG,KACMJ,CAAA;IACX,KAAK;MACH,OAAKA,CAAA,CAAGM,QAAA,GACMP,CAAA,CAACC,CAAA,CAAGM,QAAA,EAAUC,GAAA,CAAI,UAASR,CAAA;QACvC,IAAQK,CAAA,GAAG;UACTH,IAAA,EAAM;UACNO,UAAA,EAAYC,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,SAAA,CAAUX,CAAA,CAAGQ,UAAA;UACzCF,QAAA,EAAUP;QAAA;QAKZ,YAHc,MAAVC,CAAA,CAAGY,EAAA,KACLR,CAAA,CAAKQ,EAAA,GAAKZ,CAAA,CAAGY,EAAA,GAAAR,CAGjB;MAAA,KAXyB,CAACJ,CAAA;IAY5B,KAAK;MACH,OAAOA,CAAA,CAAGa,WAAA,CAAYN,GAAA,CAAI,UAASR,CAAA;QACjC,OAAO;UAAEE,IAAA,EAAM;UAASY,WAAA,EAAad;QAAA,CACvC;MAAA;IACF,KAAK;MACH,OAASC,CAAA,CAACa,WAAA,CAAYN,GAAA,CAAI,UAASR,CAAA;QACjC,OAAO;UAAEE,IAAA,EAAM;UAAWY,WAAA,EAAad;QAAA,CACzC;MAAA;IACF,KAAK;MACH,OAAOC,CAAA,CAAGa,WAAA,CAAYN,GAAA,CAAI,UAASR,CAAA;QACjC,OAAO;UAAEE,IAAA,EAAM;UAAcY,WAAA,EAAad;QAAA,CAC5C;MAAA;IACF,KAAK;MACH,OAAOC,CAAA,CAAGc,UAAA,CAAWP,GAAA,CAAIR,CAAA,EAASI,MAAA,CAAO,UAASJ,CAAA,EAAMC,CAAA;QACtD,OAAWD,CAAA,CAACM,MAAA,CAAOL,CAAA,CACrB;MAAA,GAAG;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACH,OAAO,CAACA,CAAA;EAAA;AAEd;AAAA,SAAAD,CAAA,IAAAgB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}