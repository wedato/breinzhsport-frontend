{"ast":null,"code":"import { __awaiter as e, __rest as t } from \"tslib\";\nimport { Auth as r } from \"aws-amplify\";\nimport n from \"lodash/get.js\";\nimport { createMachine as o, sendUpdate as i } from \"xstate\";\nimport { runValidators as s } from \"../../../validators/index.mjs\";\nimport { clearAttributeToVerify as a, clearChallengeName as d, clearRequiredAttributes as c, clearError as l, clearFormValues as u, clearTouched as g, clearUnverifiedContactMethods as m, clearValidationError as f, handleInput as p, handleSubmit as h, handleBlur as I, parsePhoneNumber as v, setChallengeName as S, setConfirmResetPasswordIntent as A, setConfirmSignUpIntent as U, setRequiredAttributes as E, setCredentials as y, setFieldErrors as T, setRemoteError as C, setTotpSecretCode as b, setUnverifiedContactMethods as N, setUser as w, setUsernameAuthAttributes as R } from \"../actions.mjs\";\nimport { defaultServices as P } from \"../defaultServices.mjs\";\nimport { isEmpty as V } from \"../../../utils/index.mjs\";\nconst _ = [\"SMS_MFA\", \"SOFTWARE_TOKEN_MFA\"],\n  F = e => n(e, \"data.challengeName\"),\n  O = (e, t) => e === t,\n  j = e => _.includes(e);\nfunction k({\n  services: n\n}) {\n  return o({\n    initial: \"init\",\n    id: \"signInActor\",\n    predictableActionArguments: !0,\n    states: {\n      init: {\n        always: [{\n          target: \"autoSignIn.submit\",\n          cond: \"shouldAutoSubmit\"\n        }, {\n          target: \"autoSignIn\",\n          cond: \"shouldAutoSignIn\"\n        }, {\n          target: \"signIn\"\n        }]\n      },\n      signIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              FEDERATED_SIGN_IN: \"federatedSignIn\"\n            }\n          },\n          federatedSignIn: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"federatedSignIn\",\n              onError: {\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"parsePhoneNumber\", \"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"verifying\"\n              }],\n              onError: [{\n                cond: \"shouldRedirectToConfirmSignUp\",\n                actions: [\"setCredentials\", \"setConfirmSignUpIntent\"],\n                target: \"rejected\"\n              }, {\n                cond: \"shouldRedirectToConfirmResetPassword\",\n                actions: [\"setUsernameAuthAttributes\", \"setConfirmResetPasswordIntent\"],\n                target: \"rejected\"\n              }, {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }]\n            }\n          },\n          verifying: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"checkVerifiedContact\",\n              onDone: [{\n                cond: \"shouldRequestVerification\",\n                target: \"#signInActor.verifyUser\",\n                actions: \"setUnverifiedContactMethods\"\n              }, {\n                target: \"resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      autoSignIn: {\n        initial: \"pending\",\n        states: {\n          pending: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            on: {\n              AUTO_SIGN_IN: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              AUTO_SIGN_IN_FAILURE: {\n                actions: \"setRemoteError\",\n                target: \"pending\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"#signInActor.signIn\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      confirmSignIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"confirmSignIn\",\n              onDone: {\n                target: \"#signInActor.resolved\",\n                actions: [\"setUser\", \"clearChallengeName\", \"clearRequiredAttributes\"]\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          }\n        }\n      },\n      forceNewPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: \"sendUpdate\"\n              },\n              invalid: {\n                entry: \"sendUpdate\"\n              }\n            },\n            on: {\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submit: {\n            initial: \"idle\",\n            entry: \"clearError\",\n            states: {\n              idle: {\n                entry: \"sendUpdate\",\n                on: {\n                  SUBMIT: {\n                    actions: \"handleSubmit\",\n                    target: \"validate\"\n                  }\n                }\n              },\n              validate: {\n                entry: \"sendUpdate\",\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"sendUpdate\", \"clearError\"],\n                invoke: {\n                  src: \"forceNewPassword\",\n                  onDone: [{\n                    cond: \"shouldConfirmSignIn\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.confirmSignIn\"\n                  }, {\n                    cond: \"shouldSetupTOTP\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.setupTOTP\"\n                  }, {\n                    target: \"resolved\",\n                    actions: [\"setUser\", \"setCredentials\"]\n                  }],\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              resolved: {\n                type: \"final\",\n                always: \"#signInActor.resolved\"\n              }\n            }\n          }\n        }\n      },\n      setupTOTP: {\n        initial: \"getTotpSecretCode\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          getTotpSecretCode: {\n            invoke: {\n              src: \"getTotpSecretCode\",\n              onDone: {\n                target: \"edit\",\n                actions: \"setTotpSecretCode\"\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"verifyTotpToken\",\n              onDone: {\n                actions: [\"clearChallengeName\", \"clearRequiredAttributes\"],\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      verifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"verifyUser\",\n              onDone: {\n                target: \"#signInActor.confirmVerifyUser\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmVerifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUnverifiedContactMethods\", \"clearAttributeToVerify\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"confirmVerifyUser\",\n              onDone: {\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\",\n        data: e => ({\n          user: e.user\n        })\n      },\n      rejected: {\n        type: \"final\",\n        data: (e, t) => ({\n          intent: e.redirectIntent,\n          authAttributes: e.authAttributes\n        })\n      }\n    }\n  }, {\n    actions: {\n      clearAttributeToVerify: a,\n      clearChallengeName: d,\n      clearRequiredAttributes: c,\n      clearError: l,\n      clearFormValues: u,\n      clearTouched: g,\n      clearUnverifiedContactMethods: m,\n      clearValidationError: f,\n      handleInput: p,\n      handleSubmit: h,\n      handleBlur: I,\n      parsePhoneNumber: v,\n      setChallengeName: S,\n      setConfirmResetPasswordIntent: A,\n      setConfirmSignUpIntent: U,\n      setRequiredAttributes: E,\n      setCredentials: y,\n      setFieldErrors: T,\n      setRemoteError: C,\n      setTotpSecretCode: b,\n      setUnverifiedContactMethods: N,\n      setUser: w,\n      setUsernameAuthAttributes: R,\n      sendUpdate: i()\n    },\n    guards: {\n      shouldAutoSignIn: e => \"autoSignIn\" === (null == e ? void 0 : e.intent),\n      shouldAutoSubmit: e => \"autoSignInSubmit\" === (null == e ? void 0 : e.intent),\n      shouldConfirmSignIn: (e, t) => j(F(t)),\n      shouldForceChangePassword: (e, t) => O(F(t), \"NEW_PASSWORD_REQUIRED\"),\n      shouldRedirectToConfirmResetPassword: (e, t) => \"PasswordResetRequiredException\" === t.data.code,\n      shouldRedirectToConfirmSignUp: (e, t) => \"UserNotConfirmedException\" === t.data.code,\n      shouldRequestVerification: (e, t) => {\n        const {\n          unverified: r,\n          verified: n\n        } = t.data;\n        return V(n) && !V(r);\n      },\n      shouldSetupTOTP: (e, t) => O(F(t), \"MFA_SETUP\")\n    },\n    services: {\n      signIn(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n              authAttributes: e = {},\n              formValues: r = {}\n            } = t,\n            o = Object.assign(Object.assign({}, e), r),\n            {\n              username: i,\n              password: s\n            } = o;\n          return yield n.handleSignIn({\n            username: i,\n            password: s\n          });\n        });\n      },\n      confirmSignIn(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n              challengeName: e,\n              user: o\n            } = t,\n            {\n              confirmation_code: i\n            } = t.formValues,\n            s = j(e) ? e : void 0;\n          return yield n.handleConfirmSignIn({\n            user: o,\n            code: i,\n            mfaType: s\n          }), yield r.currentAuthenticatedUser();\n        });\n      },\n      forceNewPassword(n) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            user: e,\n            formValues: o\n          } = n;\n          let i,\n            {\n              password: s,\n              confirm_password: a,\n              phone_number: d,\n              country_code: c\n            } = o,\n            l = t(o, [\"password\", \"confirm_password\", \"phone_number\", \"country_code\"]);\n          d && (i = `${c}${d}`.replace(/[^A-Z0-9+]/gi, \"\"), l = Object.assign(Object.assign({}, l), {\n            phone_number: i\n          }));\n          try {\n            const t = yield r.completeNewPassword(e, s, l);\n            return t.challengeName ? t : r.currentAuthenticatedUser();\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        });\n      },\n      getTotpSecretCode(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            user: e\n          } = t;\n          return r.setupTOTP(e);\n        });\n      },\n      verifyTotpToken(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n              formValues: e,\n              user: n\n            } = t,\n            {\n              confirmation_code: o\n            } = e;\n          return r.verifyTotpToken(n, o);\n        });\n      },\n      federatedSignIn(t, n) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            provider: e\n          } = n.data;\n          return yield r.federatedSignIn({\n            provider: e\n          });\n        });\n      },\n      checkVerifiedContact(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            user: e\n          } = t;\n          return yield r.verifiedContact(e);\n        });\n      },\n      verifyUser(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n              unverifiedAttr: e\n            } = t.formValues,\n            n = yield r.verifyCurrentUserAttribute(e);\n          return t.attributeToVerify = e, n;\n        });\n      },\n      confirmVerifyUser(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n              attributeToVerify: e\n            } = t,\n            {\n              confirmation_code: n\n            } = t.formValues;\n          return yield r.verifyCurrentUserAttributeSubmit(e, n);\n        });\n      },\n      validateFields(t) {\n        return e(this, void 0, void 0, function* () {\n          return s(t.formValues, t.touched, t.passwordSettings, [P.validateFormPassword, P.validateConfirmPassword]);\n        });\n      }\n    }\n  });\n}\nexport { k as signInActor };","map":{"version":3,"names":["__awaiter","e","__rest","t","Auth","r","n","createMachine","o","sendUpdate","i","runValidators","s","clearAttributeToVerify","a","clearChallengeName","d","clearRequiredAttributes","c","clearError","l","clearFormValues","u","clearTouched","g","clearUnverifiedContactMethods","m","clearValidationError","f","handleInput","p","handleSubmit","h","handleBlur","I","parsePhoneNumber","v","setChallengeName","S","setConfirmResetPasswordIntent","A","setConfirmSignUpIntent","U","setRequiredAttributes","E","setCredentials","y","setFieldErrors","T","setRemoteError","C","setTotpSecretCode","b","setUnverifiedContactMethods","N","setUser","w","setUsernameAuthAttributes","R","defaultServices","P","isEmpty","V","_","F","O","j","includes","k","services","initial","id","predictableActionArguments","states","init","always","target","cond","signIn","exit","edit","entry","on","SUBMIT","actions","CHANGE","FEDERATED_SIGN_IN","federatedSignIn","tags","invoke","src","onError","submit","onDone","verifying","resolved","rejected","autoSignIn","pending","AUTO_SIGN_IN","AUTO_SIGN_IN_FAILURE","confirmSignIn","SIGN_IN","forceNewPassword","type","validation","valid","invalid","BLUR","idle","validate","setupTOTP","getTotpSecretCode","verifyUser","SKIP","confirmVerifyUser","data","user","intent","redirectIntent","authAttributes","guards","shouldAutoSignIn","shouldAutoSubmit","shouldConfirmSignIn","shouldForceChangePassword","shouldRedirectToConfirmResetPassword","code","shouldRedirectToConfirmSignUp","shouldRequestVerification","unverified","verified","shouldSetupTOTP","formValues","Object","assign","username","password","handleSignIn","challengeName","confirmation_code","handleConfirmSignIn","mfaType","currentAuthenticatedUser","confirm_password","phone_number","country_code","replace","completeNewPassword","Promise","reject","verifyTotpToken","provider","checkVerifiedContact","verifiedContact","unverifiedAttr","verifyCurrentUserAttribute","attributeToVerify","verifyCurrentUserAttributeSubmit","validateFields","touched","passwordSettings","validateFormPassword","validateConfirmPassword","signInActor"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/ui/dist/esm/machines/authenticator/actors/signIn.mjs"],"sourcesContent":["import{__awaiter as e,__rest as t}from\"tslib\";import{Auth as r}from\"aws-amplify\";import n from\"lodash/get.js\";import{createMachine as o,sendUpdate as i}from\"xstate\";import{runValidators as s}from\"../../../validators/index.mjs\";import{clearAttributeToVerify as a,clearChallengeName as d,clearRequiredAttributes as c,clearError as l,clearFormValues as u,clearTouched as g,clearUnverifiedContactMethods as m,clearValidationError as f,handleInput as p,handleSubmit as h,handleBlur as I,parsePhoneNumber as v,setChallengeName as S,setConfirmResetPasswordIntent as A,setConfirmSignUpIntent as U,setRequiredAttributes as E,setCredentials as y,setFieldErrors as T,setRemoteError as C,setTotpSecretCode as b,setUnverifiedContactMethods as N,setUser as w,setUsernameAuthAttributes as R}from\"../actions.mjs\";import{defaultServices as P}from\"../defaultServices.mjs\";import{isEmpty as V}from\"../../../utils/index.mjs\";const _=[\"SMS_MFA\",\"SOFTWARE_TOKEN_MFA\"],F=e=>n(e,\"data.challengeName\"),O=(e,t)=>e===t,j=e=>_.includes(e);function k({services:n}){return o({initial:\"init\",id:\"signInActor\",predictableActionArguments:!0,states:{init:{always:[{target:\"autoSignIn.submit\",cond:\"shouldAutoSubmit\"},{target:\"autoSignIn\",cond:\"shouldAutoSignIn\"},{target:\"signIn\"}]},signIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},CHANGE:{actions:\"handleInput\"},FEDERATED_SIGN_IN:\"federatedSignIn\"}},federatedSignIn:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"federatedSignIn\",onError:{actions:\"setRemoteError\"}}},submit:{tags:[\"pending\"],entry:[\"parsePhoneNumber\",\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"verifying\"}],onError:[{cond:\"shouldRedirectToConfirmSignUp\",actions:[\"setCredentials\",\"setConfirmSignUpIntent\"],target:\"rejected\"},{cond:\"shouldRedirectToConfirmResetPassword\",actions:[\"setUsernameAuthAttributes\",\"setConfirmResetPasswordIntent\"],target:\"rejected\"},{actions:\"setRemoteError\",target:\"edit\"}]}},verifying:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"checkVerifiedContact\",onDone:[{cond:\"shouldRequestVerification\",target:\"#signInActor.verifyUser\",actions:\"setUnverifiedContactMethods\"},{target:\"resolved\"}],onError:{actions:\"setRemoteError\",target:\"edit\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},autoSignIn:{initial:\"pending\",states:{pending:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],on:{AUTO_SIGN_IN:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],AUTO_SIGN_IN_FAILURE:{actions:\"setRemoteError\",target:\"pending\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],onError:{actions:\"setRemoteError\",target:\"#signInActor.signIn\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},confirmSignIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"confirmSignIn\",onDone:{target:\"#signInActor.resolved\",actions:[\"setUser\",\"clearChallengeName\",\"clearRequiredAttributes\"]},onError:{target:\"edit\",actions:\"setRemoteError\"}}}}},forceNewPassword:{type:\"parallel\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{validation:{initial:\"pending\",states:{pending:{invoke:{src:\"validateFields\",onDone:{target:\"valid\",actions:\"clearValidationError\"},onError:{target:\"invalid\",actions:\"setFieldErrors\"}}},valid:{entry:\"sendUpdate\"},invalid:{entry:\"sendUpdate\"}},on:{SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\",target:\".pending\"},BLUR:{actions:\"handleBlur\",target:\".pending\"}}},submit:{initial:\"idle\",entry:\"clearError\",states:{idle:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"validate\"}}},validate:{entry:\"sendUpdate\",invoke:{src:\"validateFields\",onDone:{target:\"pending\",actions:\"clearValidationError\"},onError:{target:\"idle\",actions:\"setFieldErrors\"}}},pending:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"forceNewPassword\",onDone:[{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{target:\"resolved\",actions:[\"setUser\",\"setCredentials\"]}],onError:{target:\"idle\",actions:\"setRemoteError\"}}},resolved:{type:\"final\",always:\"#signInActor.resolved\"}}}}},setupTOTP:{initial:\"getTotpSecretCode\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{getTotpSecretCode:{invoke:{src:\"getTotpSecretCode\",onDone:{target:\"edit\",actions:\"setTotpSecretCode\"},onError:{target:\"edit\",actions:\"setRemoteError\"}}},edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"verifyTotpToken\",onDone:{actions:[\"clearChallengeName\",\"clearRequiredAttributes\"],target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},verifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"verifyUser\",onDone:{target:\"#signInActor.confirmVerifyUser\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},confirmVerifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearUnverifiedContactMethods\",\"clearAttributeToVerify\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"confirmVerifyUser\",onDone:{target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},resolved:{type:\"final\",data:e=>({user:e.user})},rejected:{type:\"final\",data:(e,t)=>({intent:e.redirectIntent,authAttributes:e.authAttributes})}}},{actions:{clearAttributeToVerify:a,clearChallengeName:d,clearRequiredAttributes:c,clearError:l,clearFormValues:u,clearTouched:g,clearUnverifiedContactMethods:m,clearValidationError:f,handleInput:p,handleSubmit:h,handleBlur:I,parsePhoneNumber:v,setChallengeName:S,setConfirmResetPasswordIntent:A,setConfirmSignUpIntent:U,setRequiredAttributes:E,setCredentials:y,setFieldErrors:T,setRemoteError:C,setTotpSecretCode:b,setUnverifiedContactMethods:N,setUser:w,setUsernameAuthAttributes:R,sendUpdate:i()},guards:{shouldAutoSignIn:e=>\"autoSignIn\"===(null==e?void 0:e.intent),shouldAutoSubmit:e=>\"autoSignInSubmit\"===(null==e?void 0:e.intent),shouldConfirmSignIn:(e,t)=>j(F(t)),shouldForceChangePassword:(e,t)=>O(F(t),\"NEW_PASSWORD_REQUIRED\"),shouldRedirectToConfirmResetPassword:(e,t)=>\"PasswordResetRequiredException\"===t.data.code,shouldRedirectToConfirmSignUp:(e,t)=>\"UserNotConfirmedException\"===t.data.code,shouldRequestVerification:(e,t)=>{const{unverified:r,verified:n}=t.data;return V(n)&&!V(r)},shouldSetupTOTP:(e,t)=>O(F(t),\"MFA_SETUP\")},services:{signIn(t){return e(this,void 0,void 0,(function*(){const{authAttributes:e={},formValues:r={}}=t,o=Object.assign(Object.assign({},e),r),{username:i,password:s}=o;return yield n.handleSignIn({username:i,password:s})}))},confirmSignIn(t){return e(this,void 0,void 0,(function*(){const{challengeName:e,user:o}=t,{confirmation_code:i}=t.formValues,s=j(e)?e:void 0;return yield n.handleConfirmSignIn({user:o,code:i,mfaType:s}),yield r.currentAuthenticatedUser()}))},forceNewPassword(n){return e(this,void 0,void 0,(function*(){const{user:e,formValues:o}=n;let i,{password:s,confirm_password:a,phone_number:d,country_code:c}=o,l=t(o,[\"password\",\"confirm_password\",\"phone_number\",\"country_code\"]);d&&(i=`${c}${d}`.replace(/[^A-Z0-9+]/gi,\"\"),l=Object.assign(Object.assign({},l),{phone_number:i}));try{const t=yield r.completeNewPassword(e,s,l);return t.challengeName?t:r.currentAuthenticatedUser()}catch(e){return Promise.reject(e)}}))},getTotpSecretCode(t){return e(this,void 0,void 0,(function*(){const{user:e}=t;return r.setupTOTP(e)}))},verifyTotpToken(t){return e(this,void 0,void 0,(function*(){const{formValues:e,user:n}=t,{confirmation_code:o}=e;return r.verifyTotpToken(n,o)}))},federatedSignIn(t,n){return e(this,void 0,void 0,(function*(){const{provider:e}=n.data;return yield r.federatedSignIn({provider:e})}))},checkVerifiedContact(t){return e(this,void 0,void 0,(function*(){const{user:e}=t;return yield r.verifiedContact(e)}))},verifyUser(t){return e(this,void 0,void 0,(function*(){const{unverifiedAttr:e}=t.formValues,n=yield r.verifyCurrentUserAttribute(e);return t.attributeToVerify=e,n}))},confirmVerifyUser(t){return e(this,void 0,void 0,(function*(){const{attributeToVerify:e}=t,{confirmation_code:n}=t.formValues;return yield r.verifyCurrentUserAttributeSubmit(e,n)}))},validateFields(t){return e(this,void 0,void 0,(function*(){return s(t.formValues,t.touched,t.passwordSettings,[P.validateFormPassword,P.validateConfirmPassword])}))}}})}export{k as signInActor};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}