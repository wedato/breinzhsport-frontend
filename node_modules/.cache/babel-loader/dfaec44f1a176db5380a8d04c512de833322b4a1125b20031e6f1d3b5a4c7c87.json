{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport InAppMessagingClass from './InAppMessaging';\nimport PushNotificationClass from './PushNotification';\nvar logger = new Logger('Notifications');\nvar NotificationsClass = /** @class */function () {\n  function NotificationsClass() {\n    var _this = this;\n    this.config = {};\n    /**\n     * Configure Notifications\n     * @param {Object} config - Notifications configuration object\n     */\n    this.configure = function (_a) {\n      var config = (_a === void 0 ? {} : _a).Notifications;\n      _this.config = __assign(__assign({}, _this.config), config);\n      logger.debug('configure Notifications', config);\n      // Configure sub-categories\n      _this.inAppMessaging.configure(_this.config.InAppMessaging);\n      if (_this.config.Push) {\n        try {\n          // only instantiate once\n          if (!_this.pushNotification) {\n            _this.pushNotification = new PushNotificationClass();\n          }\n          _this.pushNotification.configure(_this.config.Push);\n        } catch (err) {\n          logger.error(err);\n        }\n      }\n      return _this.config;\n    };\n    this.identifyUser = function (userId, userInfo) {\n      var identifyFunctions = [];\n      if (_this.inAppMessaging) {\n        identifyFunctions.push(_this.inAppMessaging.identifyUser);\n      }\n      if (_this.pushNotification) {\n        identifyFunctions.push(_this.pushNotification.identifyUser);\n      }\n      return Promise.all(identifyFunctions.map(function (identifyFunction) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var err_1;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n                return [4 /*yield*/, identifyFunction(userId, userInfo)];\n              case 1:\n                _a.sent();\n                return [3 /*break*/, 3];\n              case 2:\n                err_1 = _a.sent();\n                logger.error('Failed to identify user', err_1);\n                throw err_1;\n              case 3:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }));\n    };\n    this.inAppMessaging = new InAppMessagingClass();\n  }\n  /**\n   * Get the name of the module category\n   * @returns {string} name of the module category\n   */\n  NotificationsClass.prototype.getModuleName = function () {\n    return 'Notifications';\n  };\n  Object.defineProperty(NotificationsClass.prototype, \"InAppMessaging\", {\n    get: function () {\n      return this.inAppMessaging;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NotificationsClass.prototype, \"Push\", {\n    get: function () {\n      var _a;\n      return (_a = this.pushNotification) !== null && _a !== void 0 ? _a : {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return NotificationsClass;\n}();\nvar Notifications = new NotificationsClass();\nexport default Notifications;\nAmplify.register(Notifications);","map":{"version":3,"names":["Amplify","ConsoleLogger","Logger","InAppMessagingClass","PushNotificationClass","logger","NotificationsClass","_this","config","configure","_a","Notifications","__assign","debug","inAppMessaging","InAppMessaging","Push","pushNotification","err","error","identifyUser","userId","userInfo","identifyFunctions","push","Promise","all","map","identifyFunction","__awaiter","sent","err_1","prototype","getModuleName","Object","defineProperty","get","register"],"sources":["C:\\Users\\jonat\\aws_poc\\frontend\\node_modules\\@aws-amplify\\notifications\\src\\Notifications.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\n\nimport InAppMessagingClass from './InAppMessaging';\nimport PushNotificationClass from './PushNotification';\nimport { InAppMessagingInterface as InAppMessaging } from './InAppMessaging/types';\nimport { PushNotificationInterface as PushNotification } from './PushNotification/types';\nimport { NotificationsCategory, NotificationsConfig, UserInfo } from './types';\n\nconst logger = new Logger('Notifications');\n\nclass NotificationsClass {\n\tprivate config: Record<string, any> = {};\n\tprivate inAppMessaging: InAppMessaging;\n\tprivate pushNotification?: PushNotification;\n\n\tconstructor() {\n\t\tthis.inAppMessaging = new InAppMessagingClass();\n\t}\n\n\t/**\n\t * Get the name of the module category\n\t * @returns {string} name of the module category\n\t */\n\tgetModuleName(): NotificationsCategory {\n\t\treturn 'Notifications';\n\t}\n\n\t/**\n\t * Configure Notifications\n\t * @param {Object} config - Notifications configuration object\n\t */\n\tconfigure = ({ Notifications: config }: NotificationsConfig = {}) => {\n\t\tthis.config = { ...this.config, ...config };\n\n\t\tlogger.debug('configure Notifications', config);\n\n\t\t// Configure sub-categories\n\t\tthis.inAppMessaging.configure(this.config.InAppMessaging);\n\n\t\tif (this.config.Push) {\n\t\t\ttry {\n\t\t\t\t// only instantiate once\n\t\t\t\tif (!this.pushNotification) {\n\t\t\t\t\tthis.pushNotification = new PushNotificationClass();\n\t\t\t\t}\n\t\t\t\tthis.pushNotification.configure(this.config.Push);\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error(err);\n\t\t\t}\n\t\t}\n\n\t\treturn this.config;\n\t};\n\n\tget InAppMessaging(): InAppMessaging {\n\t\treturn this.inAppMessaging;\n\t}\n\n\tget Push(): PushNotification {\n\t\treturn this.pushNotification ?? ({} as PushNotification);\n\t}\n\n\tidentifyUser = (userId: string, userInfo: UserInfo): Promise<void[]> => {\n\t\tconst identifyFunctions: Function[] = [];\n\t\tif (this.inAppMessaging) {\n\t\t\tidentifyFunctions.push(this.inAppMessaging.identifyUser);\n\t\t}\n\t\tif (this.pushNotification) {\n\t\t\tidentifyFunctions.push(this.pushNotification.identifyUser);\n\t\t}\n\t\treturn Promise.all<void>(\n\t\t\tidentifyFunctions.map(async identifyFunction => {\n\t\t\t\ttry {\n\t\t\t\t\tawait identifyFunction(userId, userInfo);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error('Failed to identify user', err);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n}\n\nconst Notifications = new NotificationsClass();\n\nexport default Notifications;\nAmplify.register(Notifications);\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,OAAO,EAAEC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAEpE,OAAOC,mBAAmB,MAAM,kBAAkB;AAClD,OAAOC,qBAAqB,MAAM,oBAAoB;AAKtD,IAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,eAAe,CAAC;AAE1C,IAAAI,kBAAA;EAKC,SAAAA,mBAAA;IAAA,IAAAC,KAAA;IAJQ,KAAAC,MAAM,GAAwB,EAAE;IAgBxC;;;;IAIA,KAAAC,SAAS,GAAG,UAACC,EAAmD;UAAjDF,MAAA,IAAAE,EAAA,mBAAAA,EAAA,EAAAC,aAAqB;MACnCJ,KAAI,CAACC,MAAM,GAAAI,QAAA,CAAAA,QAAA,KAAQL,KAAI,CAACC,MAAM,GAAKA,MAAM,CAAE;MAE3CH,MAAM,CAACQ,KAAK,CAAC,yBAAyB,EAAEL,MAAM,CAAC;MAE/C;MACAD,KAAI,CAACO,cAAc,CAACL,SAAS,CAACF,KAAI,CAACC,MAAM,CAACO,cAAc,CAAC;MAEzD,IAAIR,KAAI,CAACC,MAAM,CAACQ,IAAI,EAAE;QACrB,IAAI;UACH;UACA,IAAI,CAACT,KAAI,CAACU,gBAAgB,EAAE;YAC3BV,KAAI,CAACU,gBAAgB,GAAG,IAAIb,qBAAqB,EAAE;;UAEpDG,KAAI,CAACU,gBAAgB,CAACR,SAAS,CAACF,KAAI,CAACC,MAAM,CAACQ,IAAI,CAAC;SACjD,CAAC,OAAOE,GAAG,EAAE;UACbb,MAAM,CAACc,KAAK,CAACD,GAAG,CAAC;;;MAInB,OAAOX,KAAI,CAACC,MAAM;IACnB,CAAC;IAUD,KAAAY,YAAY,GAAG,UAACC,MAAc,EAAEC,QAAkB;MACjD,IAAMC,iBAAiB,GAAe,EAAE;MACxC,IAAIhB,KAAI,CAACO,cAAc,EAAE;QACxBS,iBAAiB,CAACC,IAAI,CAACjB,KAAI,CAACO,cAAc,CAACM,YAAY,CAAC;;MAEzD,IAAIb,KAAI,CAACU,gBAAgB,EAAE;QAC1BM,iBAAiB,CAACC,IAAI,CAACjB,KAAI,CAACU,gBAAgB,CAACG,YAAY,CAAC;;MAE3D,OAAOK,OAAO,CAACC,GAAG,CACjBH,iBAAiB,CAACI,GAAG,CAAC,UAAMC,gBAAgB;QAAA,OAAAC,SAAA,CAAAtB,KAAA;;;;;;gBAE1C,qBAAMqB,gBAAgB,CAACP,MAAM,EAAEC,QAAQ,CAAC;;gBAAxCZ,EAAA,CAAAoB,IAAA,EAAwC;;;;gBAExCzB,MAAM,CAACc,KAAK,CAAC,yBAAyB,EAAEY,KAAG,CAAC;gBAC5C,MAAMA,KAAG;;;;;;OAEV,CAAC,CACF;IACF,CAAC;IAhEA,IAAI,CAACjB,cAAc,GAAG,IAAIX,mBAAmB,EAAE;EAChD;EAEA;;;;EAIAG,kBAAA,CAAA0B,SAAA,CAAAC,aAAa,GAAb;IACC,OAAO,eAAe;EACvB,CAAC;EA6BDC,MAAA,CAAAC,cAAA,CAAI7B,kBAAA,CAAA0B,SAAA,kBAAc;SAAlB,SAAAI,CAAA;MACC,OAAO,IAAI,CAACtB,cAAc;IAC3B,CAAC;;;;EAEDoB,MAAA,CAAAC,cAAA,CAAI7B,kBAAA,CAAA0B,SAAA,QAAI;SAAR,SAAAI,CAAA;;MACC,QAAA1B,EAAA,GAAO,IAAI,CAACO,gBAAgB,cAAAP,EAAA,cAAAA,EAAA,GAAK,EAAuB;IACzD,CAAC;;;;EAqBF,OAAAJ,kBAAC;AAAD,CAAC,CAvED;AAyEA,IAAMK,aAAa,GAAG,IAAIL,kBAAkB,EAAE;AAE9C,eAAeK,aAAa;AAC5BX,OAAO,CAACqC,QAAQ,CAAC1B,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}