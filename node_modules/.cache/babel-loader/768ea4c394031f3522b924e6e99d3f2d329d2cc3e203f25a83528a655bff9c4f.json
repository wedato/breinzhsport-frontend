{"ast":null,"code":"'use strict';\n\nvar $abs = require('./abs');\nvar $floor = require('./floor');\nvar $isNaN = require('./isNaN');\nvar $isFinite = require('./isFinite');\n\n/** @type {import('./isInteger')} */\nmodule.exports = function isInteger(argument) {\n  if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n    return false;\n  }\n  var absValue = $abs(argument);\n  return $floor(absValue) === absValue;\n};","map":{"version":3,"names":["$abs","require","$floor","$isNaN","$isFinite","module","exports","isInteger","argument","absValue"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/math-intrinsics/isInteger.js"],"sourcesContent":["'use strict';\n\nvar $abs = require('./abs');\nvar $floor = require('./floor');\n\nvar $isNaN = require('./isNaN');\nvar $isFinite = require('./isFinite');\n\n/** @type {import('./isInteger')} */\nmodule.exports = function isInteger(argument) {\n\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\treturn false;\n\t}\n\tvar absValue = $abs(argument);\n\treturn $floor(absValue) === absValue;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC3B,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE/B,IAAIE,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AAC/B,IAAIG,SAAS,GAAGH,OAAO,CAAC,YAAY,CAAC;;AAErC;AACAI,MAAM,CAACC,OAAO,GAAG,SAASC,SAASA,CAACC,QAAQ,EAAE;EAC7C,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIL,MAAM,CAACK,QAAQ,CAAC,IAAI,CAACJ,SAAS,CAACI,QAAQ,CAAC,EAAE;IAC7E,OAAO,KAAK;EACb;EACA,IAAIC,QAAQ,GAAGT,IAAI,CAACQ,QAAQ,CAAC;EAC7B,OAAON,MAAM,CAACO,QAAQ,CAAC,KAAKA,QAAQ;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}