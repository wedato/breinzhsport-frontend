{"ast":null,"code":"import { __rest } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport { isComponentRouteKey } from '../utils.mjs';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs';\n\n// only select `route` from machine context\nconst routeSelector = ({\n  route\n}) => [route];\nconst createSelector = selectorKeys => context => {\n  const dependencies = selectorKeys.map(key => context[key]);\n  // route should always be part of deps, so hook knows when route changes.\n  return [...dependencies, context.route];\n};\nconst getRouteMachineSelector = route => isComponentRouteKey(route) ? createSelector(MACHINE_PROP_KEYS[route]) : routeSelector;\nconst isFormEventHandlerKey = key => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\nconst convertEventHandlerKey = key => EVENT_HANDLER_KEY_MAP[key];\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => Object.assign(Object.assign({}, acc), {\n  [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key]\n}), {});\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmResetPassword', props))\n  };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n  const _a = getConvertedMachineProps('confirmSignIn', props),\n    {\n      user\n    } = _a,\n    machineProps = __rest(_a, [\"user\"]);\n  // prior to the `confirmSignIn` route, `user.username` is populated\n  const challengeName = user.challengeName;\n  return {\n    Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), machineProps), {\n      challengeName\n    })\n  };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmSignUp', props))\n  };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmVerifyUser', props))\n  };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('forceNewPassword', props))\n  };\n}\nfunction resolveResetPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('resetPassword', props))\n  };\n}\nfunction resolveSetupTOTPRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('setupTOTP', props))\n  };\n}\nfunction resolveSignInRoute(Component, props) {\n  // default `hideSignUp` to false\n  const hideSignUp = false;\n  return {\n    Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('signIn', props)), {\n      hideSignUp\n    })\n  };\n}\nfunction resolveSignUpRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('signUp', props))\n  };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('verifyUser', props))\n  };\n}\nfunction resolveDefault() {\n  return {\n    Component: RenderNothing,\n    props: {}\n  };\n}\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveResetPasswordRoute, resolveSetupTOTPRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };","map":{"version":3,"names":["__rest","RenderNothing","isComponentRouteKey","MACHINE_PROP_KEYS","EVENT_HANDLER_KEY_MAP","routeSelector","route","createSelector","selectorKeys","context","dependencies","map","key","getRouteMachineSelector","isFormEventHandlerKey","includes","convertEventHandlerKey","getConvertedMachineProps","reduce","acc","Object","assign","resolveConfirmResetPasswordRoute","Component","props","resolveConfirmSignInRoute","_a","user","machineProps","challengeName","resolveConfirmSignUpRoute","resolveConfirmVerifyUserRoute","resolveForceNewPasswordRoute","resolveResetPasswordRoute","resolveSetupTOTPRoute","resolveSignInRoute","hideSignUp","resolveSignUpRoute","resolveVerifyUserRoute","resolveDefault"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticatorRoute/utils.mjs"],"sourcesContent":["import { __rest } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport { isComponentRouteKey } from '../utils.mjs';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs';\n\n// only select `route` from machine context\nconst routeSelector = ({ route }) => [route];\nconst createSelector = (selectorKeys) => (context) => {\n    const dependencies = selectorKeys.map((key) => context[key]);\n    // route should always be part of deps, so hook knows when route changes.\n    return [...dependencies, context.route];\n};\nconst getRouteMachineSelector = (route) => isComponentRouteKey(route)\n    ? createSelector(MACHINE_PROP_KEYS[route])\n    : routeSelector;\nconst isFormEventHandlerKey = (key) => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\nconst convertEventHandlerKey = (key) => EVENT_HANDLER_KEY_MAP[key];\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key] })), {});\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmResetPassword', props)),\n    };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n    const _a = getConvertedMachineProps('confirmSignIn', props), { user } = _a, machineProps = __rest(_a, [\"user\"]);\n    // prior to the `confirmSignIn` route, `user.username` is populated\n    const challengeName = user.challengeName;\n    return { Component, props: Object.assign(Object.assign(Object.assign({}, Component), machineProps), { challengeName }) };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmSignUp', props)),\n    };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmVerifyUser', props)),\n    };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('forceNewPassword', props)),\n    };\n}\nfunction resolveResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('resetPassword', props)),\n    };\n}\nfunction resolveSetupTOTPRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('setupTOTP', props)),\n    };\n}\nfunction resolveSignInRoute(Component, props) {\n    // default `hideSignUp` to false\n    const hideSignUp = false;\n    return {\n        Component,\n        props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('signIn', props)), { hideSignUp }),\n    };\n}\nfunction resolveSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('signUp', props)),\n    };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('verifyUser', props)),\n    };\n}\nfunction resolveDefault() {\n    return {\n        Component: RenderNothing,\n        props: {},\n    };\n}\n\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveResetPasswordRoute, resolveSetupTOTPRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}