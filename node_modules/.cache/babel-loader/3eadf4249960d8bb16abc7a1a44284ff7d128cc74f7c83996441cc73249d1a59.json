{"ast":null,"code":"import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\nexport default function (ctx) {\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n      controlContainer = ctx.ui.addButtons();\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => {\n          if (map.loaded()) setup.connect();\n        }, 16);\n      }\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n      ctx.options.styles.forEach(style => {\n        ctx.map.addLayer(style);\n      });\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach(style => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n  ctx.setup = setup;\n  return setup;\n}","map":{"version":3,"names":["events","Store","ui","Constants","ctx","controlContainer","mapLoadedInterval","setup","onRemove","map","off","connect","clearInterval","removeLayers","store","restoreMapConfig","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","enable","container","parentNode","removeChild","addLayers","storeMapConfig","addEventListeners","onAdd","getContainer","addButtons","options","boxSelect","isEnabled","disable","dragPanIsEnabled","dragPan","loaded","on","setInterval","start","addSource","sources","COLD","data","type","geojsonTypes","FEATURE_COLLECTION","features","HOT","styles","forEach","style","addLayer","setDirty","render","getLayer","id","removeLayer","getSource","removeSource"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/setup.js"],"sourcesContent":["import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}