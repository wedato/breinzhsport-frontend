{"ast":null,"code":"import { __awaiter } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport { Auth } from 'aws-amplify';\nimport { getActorContext, getSortedFormFields, isString, areEmptyArrays, areEmptyObjects } from '@aws-amplify/ui';\nimport { isComponentRouteKey } from '../utils.mjs';\nconst defaultComparator = () => false;\n/**\n * Does an ordering and shallow comparison of each array value,\n * plus a value equality check for empty objects and arrays.\n */\nfunction areSelectorDepsEqual(currentDeps, nextDeps) {\n  if (currentDeps.length !== nextDeps.length) {\n    return false;\n  }\n  return currentDeps.every((currentDep, index) => {\n    const nextDep = nextDeps[index];\n    if (areEmptyArrays(currentDep, nextDep) || areEmptyObjects(currentDep, nextDep)) {\n      return true;\n    }\n    return currentDep === nextDep;\n  });\n}\nconst getComparator = selector => (currentFacade, nextFacade) => {\n  const currentSelectorDeps = selector(currentFacade);\n  const nextSelectorDeps = selector(nextFacade);\n  // Shallow compare the array values\n  return areSelectorDepsEqual(currentSelectorDeps, nextSelectorDeps);\n};\nconst getQRFields = state => {\n  var _a, _b, _c;\n  return Object.assign({}, (_c = (_b = (_a = getActorContext(state)) === null || _a === void 0 ? void 0 : _a.formFields) === null || _b === void 0 ? void 0 : _b.setupTOTP) === null || _c === void 0 ? void 0 : _c.QR);\n};\nconst getTotpSecretCodeCallback = user => function getTotpSecretCode() {\n  return __awaiter(this, void 0, void 0, function* () {\n    return yield Auth.setupTOTP(user);\n  });\n};\nconst flattenFormFields = fields => fields.flatMap(([name, options]) => Object.assign({\n  name\n}, options));\nconst convertContactMethodsToFields = unverifiedContactMethods => {\n  return unverifiedContactMethods && Object.entries(unverifiedContactMethods).map(([name, value]) => {\n    const valueIsString = isString(value);\n    if (!valueIsString || !name) {\n      return {};\n    }\n    return {\n      name,\n      label: value,\n      type: 'radio',\n      value\n    };\n  });\n};\n/**\n * Retrieves default and custom (RWA only, to be updated) form field values from state machine\n * for subcomponent routes that render fields\n */\nconst getMachineFields = (route, state, unverifiedContactMethods) => {\n  if (isComponentRouteKey(route)) {\n    return route === 'verifyUser' ? convertContactMethodsToFields(unverifiedContactMethods) : flattenFormFields(getSortedFormFields(route, state));\n  }\n  return [];\n};\nexport { areSelectorDepsEqual, defaultComparator, getComparator, getMachineFields, getQRFields, getTotpSecretCodeCallback };","map":{"version":3,"names":["__awaiter","Auth","getActorContext","getSortedFormFields","isString","areEmptyArrays","areEmptyObjects","isComponentRouteKey","defaultComparator","areSelectorDepsEqual","currentDeps","nextDeps","length","every","currentDep","index","nextDep","getComparator","selector","currentFacade","nextFacade","currentSelectorDeps","nextSelectorDeps","getQRFields","state","_a","_b","_c","Object","assign","formFields","setupTOTP","QR","getTotpSecretCodeCallback","user","getTotpSecretCode","flattenFormFields","fields","flatMap","name","options","convertContactMethodsToFields","unverifiedContactMethods","entries","map","value","valueIsString","label","type","getMachineFields","route"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticator/utils.mjs"],"sourcesContent":["import { __awaiter } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport { Auth } from 'aws-amplify';\nimport { getActorContext, getSortedFormFields, isString, areEmptyArrays, areEmptyObjects } from '@aws-amplify/ui';\nimport { isComponentRouteKey } from '../utils.mjs';\n\nconst defaultComparator = () => false;\n/**\n * Does an ordering and shallow comparison of each array value,\n * plus a value equality check for empty objects and arrays.\n */\nfunction areSelectorDepsEqual(currentDeps, nextDeps) {\n    if (currentDeps.length !== nextDeps.length) {\n        return false;\n    }\n    return currentDeps.every((currentDep, index) => {\n        const nextDep = nextDeps[index];\n        if (areEmptyArrays(currentDep, nextDep) ||\n            areEmptyObjects(currentDep, nextDep)) {\n            return true;\n        }\n        return currentDep === nextDep;\n    });\n}\nconst getComparator = (selector) => (currentFacade, nextFacade) => {\n    const currentSelectorDeps = selector(currentFacade);\n    const nextSelectorDeps = selector(nextFacade);\n    // Shallow compare the array values\n    return areSelectorDepsEqual(currentSelectorDeps, nextSelectorDeps);\n};\nconst getQRFields = (state) => {\n    var _a, _b, _c;\n    return (Object.assign({}, (_c = (_b = (_a = getActorContext(state)) === null || _a === void 0 ? void 0 : _a.formFields) === null || _b === void 0 ? void 0 : _b.setupTOTP) === null || _c === void 0 ? void 0 : _c.QR));\n};\nconst getTotpSecretCodeCallback = (user) => function getTotpSecretCode() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield Auth.setupTOTP(user);\n    });\n};\nconst flattenFormFields = (fields) => fields.flatMap(([name, options]) => (Object.assign({ name }, options)));\nconst convertContactMethodsToFields = (unverifiedContactMethods) => {\n    return (unverifiedContactMethods &&\n        Object.entries(unverifiedContactMethods).map(([name, value]) => {\n            const valueIsString = isString(value);\n            if (!valueIsString || !name) {\n                return {};\n            }\n            return { name, label: value, type: 'radio', value };\n        }));\n};\n/**\n * Retrieves default and custom (RWA only, to be updated) form field values from state machine\n * for subcomponent routes that render fields\n */\nconst getMachineFields = (route, state, unverifiedContactMethods) => {\n    if (isComponentRouteKey(route)) {\n        return route === 'verifyUser'\n            ? convertContactMethodsToFields(unverifiedContactMethods)\n            : flattenFormFields(getSortedFormFields(route, state));\n    }\n    return [];\n};\n\nexport { areSelectorDepsEqual, defaultComparator, getComparator, getMachineFields, getQRFields, getTotpSecretCodeCallback };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}