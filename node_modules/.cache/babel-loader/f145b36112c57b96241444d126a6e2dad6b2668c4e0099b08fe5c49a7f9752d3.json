{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $TypeError = require('es-errors/type');\nvar $SyntaxError = require('es-errors/syntax');\n\n// https://262.ecma-international.org/14.0/#sec-stringtobigint\n\nmodule.exports = function StringToBigInt(argument) {\n  if (typeof argument !== 'string') {\n    throw new $TypeError('`argument` must be a string');\n  }\n  if (!$BigInt) {\n    throw new $SyntaxError('BigInts are not supported in this environment');\n  }\n  try {\n    return $BigInt(argument);\n  } catch (e) {\n    return void undefined;\n  }\n};","map":{"version":3,"names":["GetIntrinsic","require","$BigInt","$TypeError","$SyntaxError","module","exports","StringToBigInt","argument","e","undefined"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/es-abstract/2024/StringToBigInt.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $TypeError = require('es-errors/type');\nvar $SyntaxError = require('es-errors/syntax');\n\n// https://262.ecma-international.org/14.0/#sec-stringtobigint\n\nmodule.exports = function StringToBigInt(argument) {\n\tif (typeof argument !== 'string') {\n\t\tthrow new $TypeError('`argument` must be a string');\n\t}\n\tif (!$BigInt) {\n\t\tthrow new $SyntaxError('BigInts are not supported in this environment');\n\t}\n\ttry {\n\t\treturn $BigInt(argument);\n\t} catch (e) {\n\t\treturn void undefined;\n\t}\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;AAC5C,IAAIG,UAAU,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC1C,IAAIG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;;AAE9C;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAClD,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIL,UAAU,CAAC,6BAA6B,CAAC;EACpD;EACA,IAAI,CAACD,OAAO,EAAE;IACb,MAAM,IAAIE,YAAY,CAAC,+CAA+C,CAAC;EACxE;EACA,IAAI;IACH,OAAOF,OAAO,CAACM,QAAQ,CAAC;EACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,KAAKC,SAAS;EACtB;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}