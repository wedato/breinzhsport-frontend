{"ast":null,"code":"var cookie = {};\n\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nvar hasRequiredCookie;\nfunction requireCookie() {\n  if (hasRequiredCookie) return cookie;\n  hasRequiredCookie = 1;\n\n  /**\n   * Module exports.\n   * @public\n   */\n\n  cookie.parse = parse;\n  cookie.serialize = serialize;\n\n  /**\n   * Module variables.\n   * @private\n   */\n\n  var __toString = Object.prototype.toString;\n  var __hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n   * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n   * which has been replaced by the token definition in RFC 7230 appendix B.\n   *\n   * cookie-name       = token\n   * token             = 1*tchar\n   * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n   *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n   *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n   */\n\n  var cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n\n  /**\n   * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n   *\n   * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n   * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n   *                     ; US-ASCII characters excluding CTLs,\n   *                     ; whitespace DQUOTE, comma, semicolon,\n   *                     ; and backslash\n   */\n\n  var cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n\n  /**\n   * RegExp to match domain-value in RFC 6265 sec 4.1.1\n   *\n   * domain-value      = <subdomain>\n   *                     ; defined in [RFC1034], Section 3.5, as\n   *                     ; enhanced by [RFC1123], Section 2.1\n   * <subdomain>       = <label> | <subdomain> \".\" <label>\n   * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n   *                     Labels must be 63 characters or less.\n   *                     'let-dig' not 'letter' in the first char, per RFC1123\n   * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n   * <let-dig-hyp>     = <let-dig> | \"-\"\n   * <let-dig>         = <letter> | <digit>\n   * <letter>          = any one of the 52 alphabetic characters A through Z in\n   *                     upper case and a through z in lower case\n   * <digit>           = any one of the ten digits 0 through 9\n   *\n   * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n   *\n   * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n   * character is not permitted, but a trailing %x2E (\".\"), if present, will\n   * cause the user agent to ignore the attribute.)\n   */\n\n  var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n  /**\n   * RegExp to match path-value in RFC 6265 sec 4.1.1\n   *\n   * path-value        = <any CHAR except CTLs or \";\">\n   * CHAR              = %x01-7F\n   *                     ; defined in RFC 5234 appendix B.1\n   */\n\n  var pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\n  /**\n   * Parse a cookie header.\n   *\n   * Parse the given cookie header string into an object\n   * The object has the various cookies as keys(names) => values\n   *\n   * @param {string} str\n   * @param {object} [opt]\n   * @return {object}\n   * @public\n   */\n\n  function parse(str, opt) {\n    if (typeof str !== 'string') {\n      throw new TypeError('argument str must be a string');\n    }\n    var obj = {};\n    var len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2) return obj;\n    var dec = opt && opt.decode || decode;\n    var index = 0;\n    var eqIdx = 0;\n    var endIdx = 0;\n    do {\n      eqIdx = str.indexOf('=', index);\n      if (eqIdx === -1) break; // No more cookie pairs.\n\n      endIdx = str.indexOf(';', index);\n      if (endIdx === -1) {\n        endIdx = len;\n      } else if (eqIdx > endIdx) {\n        // backtrack on prior semicolon\n        index = str.lastIndexOf(';', eqIdx - 1) + 1;\n        continue;\n      }\n      var keyStartIdx = startIndex(str, index, eqIdx);\n      var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n      var key = str.slice(keyStartIdx, keyEndIdx);\n\n      // only assign once\n      if (!__hasOwnProperty.call(obj, key)) {\n        var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n        var valEndIdx = endIndex(str, endIdx, valStartIdx);\n        if (str.charCodeAt(valStartIdx) === 0x22 /* \" */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* \" */) {\n          valStartIdx++;\n          valEndIdx--;\n        }\n        var val = str.slice(valStartIdx, valEndIdx);\n        obj[key] = tryDecode(val, dec);\n      }\n      index = endIdx + 1;\n    } while (index < len);\n    return obj;\n  }\n  function startIndex(str, index, max) {\n    do {\n      var code = str.charCodeAt(index);\n      if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n    } while (++index < max);\n    return max;\n  }\n  function endIndex(str, index, min) {\n    while (index > min) {\n      var code = str.charCodeAt(--index);\n      if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n    }\n    return min;\n  }\n\n  /**\n   * Serialize data into a cookie header.\n   *\n   * Serialize a name value pair into a cookie string suitable for\n   * http headers. An optional options object specifies cookie parameters.\n   *\n   * serialize('foo', 'bar', { httpOnly: true })\n   *   => \"foo=bar; httpOnly\"\n   *\n   * @param {string} name\n   * @param {string} val\n   * @param {object} [opt]\n   * @return {string}\n   * @public\n   */\n\n  function serialize(name, val, opt) {\n    var enc = opt && opt.encode || encodeURIComponent;\n    if (typeof enc !== 'function') {\n      throw new TypeError('option encode is invalid');\n    }\n    if (!cookieNameRegExp.test(name)) {\n      throw new TypeError('argument name is invalid');\n    }\n    var value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n      throw new TypeError('argument val is invalid');\n    }\n    var str = name + '=' + value;\n    if (!opt) return str;\n    if (null != opt.maxAge) {\n      var maxAge = Math.floor(opt.maxAge);\n      if (!isFinite(maxAge)) {\n        throw new TypeError('option maxAge is invalid');\n      }\n      str += '; Max-Age=' + maxAge;\n    }\n    if (opt.domain) {\n      if (!domainValueRegExp.test(opt.domain)) {\n        throw new TypeError('option domain is invalid');\n      }\n      str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n      if (!pathValueRegExp.test(opt.path)) {\n        throw new TypeError('option path is invalid');\n      }\n      str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n      var expires = opt.expires;\n      if (!isDate(expires) || isNaN(expires.valueOf())) {\n        throw new TypeError('option expires is invalid');\n      }\n      str += '; Expires=' + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n      str += '; HttpOnly';\n    }\n    if (opt.secure) {\n      str += '; Secure';\n    }\n    if (opt.partitioned) {\n      str += '; Partitioned';\n    }\n    if (opt.priority) {\n      var priority = typeof opt.priority === 'string' ? opt.priority.toLowerCase() : opt.priority;\n      switch (priority) {\n        case 'low':\n          str += '; Priority=Low';\n          break;\n        case 'medium':\n          str += '; Priority=Medium';\n          break;\n        case 'high':\n          str += '; Priority=High';\n          break;\n        default:\n          throw new TypeError('option priority is invalid');\n      }\n    }\n    if (opt.sameSite) {\n      var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n      switch (sameSite) {\n        case true:\n          str += '; SameSite=Strict';\n          break;\n        case 'lax':\n          str += '; SameSite=Lax';\n          break;\n        case 'strict':\n          str += '; SameSite=Strict';\n          break;\n        case 'none':\n          str += '; SameSite=None';\n          break;\n        default:\n          throw new TypeError('option sameSite is invalid');\n      }\n    }\n    return str;\n  }\n\n  /**\n   * URL-decode string value. Optimized to skip native call when no %.\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n\n  function decode(str) {\n    return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;\n  }\n\n  /**\n   * Determine if value is a Date.\n   *\n   * @param {*} val\n   * @private\n   */\n\n  function isDate(val) {\n    return __toString.call(val) === '[object Date]';\n  }\n\n  /**\n   * Try decoding a string using a decoding function.\n   *\n   * @param {string} str\n   * @param {function} decode\n   * @private\n   */\n\n  function tryDecode(str, decode) {\n    try {\n      return decode(str);\n    } catch (e) {\n      return str;\n    }\n  }\n  return cookie;\n}\nvar cookieExports = requireCookie();\nfunction hasDocumentCookie() {\n  const testingValue = typeof global === 'undefined' ? undefined : global.TEST_HAS_DOCUMENT_COOKIE;\n  if (typeof testingValue === 'boolean') {\n    return testingValue;\n  }\n  // Can we get/set cookies on document.cookie?\n  return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n  if (typeof cookies === 'string') {\n    return cookieExports.parse(cookies);\n  } else if (typeof cookies === 'object' && cookies !== null) {\n    return cookies;\n  } else {\n    return {};\n  }\n}\nfunction readCookie(value) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const cleanValue = cleanupCookieValue(value);\n  if (!options.doNotParse) {\n    try {\n      return JSON.parse(cleanValue);\n    } catch (e) {\n      // At least we tried\n    }\n  }\n  // Ignore clean value if we failed the deserialization\n  // It is not relevant anymore to trim those values\n  return value;\n}\nfunction cleanupCookieValue(value) {\n  // express prepend j: before serializing a cookie\n  if (value && value[0] === 'j' && value[1] === ':') {\n    return value.substr(2);\n  }\n  return value;\n}\nclass Cookies {\n  constructor(cookies) {\n    let defaultSetOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.update = () => {\n      if (!this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n      const previousCookies = this.cookies;\n      this.cookies = cookieExports.parse(document.cookie);\n      this._checkChanges(previousCookies);\n    };\n    const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n  _emitChange(params) {\n    for (let i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  }\n  _checkChanges(previousCookies) {\n    const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n    names.forEach(name => {\n      if (previousCookies[name] !== this.cookies[name]) {\n        this._emitChange({\n          name,\n          value: readCookie(this.cookies[name])\n        });\n      }\n    });\n  }\n  _startPolling() {\n    this.pollingInterval = setInterval(this.update, 300);\n  }\n  _stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n  get(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    return readCookie(this.cookies[name], options);\n  }\n  getAll() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    const result = {};\n    for (let name in this.cookies) {\n      result[name] = readCookie(this.cookies[name], options);\n    }\n    return result;\n  }\n  set(name, value, options) {\n    if (options) {\n      options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n    } else {\n      options = this.defaultSetOptions;\n    }\n    const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.cookies = Object.assign(Object.assign({}, this.cookies), {\n      [name]: stringValue\n    });\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookieExports.serialize(name, stringValue, options);\n    }\n    this._emitChange({\n      name,\n      value,\n      options\n    });\n  }\n  remove(name, options) {\n    const finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = Object.assign({}, this.cookies);\n    delete this.cookies[name];\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookieExports.serialize(name, '', finalOptions);\n    }\n    this._emitChange({\n      name,\n      value: undefined,\n      options\n    });\n  }\n  addChangeListener(callback) {\n    this.changeListeners.push(callback);\n    if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.addEventListener('change', this.update);\n      } else {\n        this._startPolling();\n      }\n    }\n  }\n  removeChangeListener(callback) {\n    const idx = this.changeListeners.indexOf(callback);\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n    if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.removeEventListener('change', this.update);\n      } else {\n        this._stopPolling();\n      }\n    }\n  }\n}\nexport { Cookies as default };","map":{"version":3,"names":["cookie","hasRequiredCookie","requireCookie","parse","serialize","__toString","Object","prototype","toString","__hasOwnProperty","hasOwnProperty","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","str","opt","TypeError","obj","len","length","dec","decode","index","eqIdx","endIdx","indexOf","lastIndexOf","keyStartIdx","startIndex","keyEndIdx","endIndex","key","slice","call","valStartIdx","valEndIdx","charCodeAt","val","tryDecode","max","code","min","name","enc","encode","encodeURIComponent","test","value","maxAge","Math","floor","isFinite","domain","path","expires","isDate","isNaN","valueOf","toUTCString","httpOnly","secure","partitioned","priority","toLowerCase","sameSite","decodeURIComponent","e","cookieExports","hasDocumentCookie","testingValue","global","undefined","TEST_HAS_DOCUMENT_COOKIE","document","parseCookies","cookies","readCookie","options","arguments","cleanValue","cleanupCookieValue","doNotParse","JSON","substr","Cookies","constructor","defaultSetOptions","changeListeners","HAS_DOCUMENT_COOKIE","update","previousCookies","_checkChanges","domCookies","_emitChange","params","i","names","Set","keys","concat","forEach","_startPolling","pollingInterval","setInterval","_stopPolling","clearInterval","get","doNotUpdate","getAll","result","set","assign","stringValue","stringify","remove","finalOptions","Date","addChangeListener","callback","push","window","cookieStore","addEventListener","removeChangeListener","idx","splice","removeEventListener","default"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/universal-cookie/esm/index.mjs"],"sourcesContent":["var cookie = {};\n\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nvar hasRequiredCookie;\n\nfunction requireCookie () {\n\tif (hasRequiredCookie) return cookie;\n\thasRequiredCookie = 1;\n\n\t/**\n\t * Module exports.\n\t * @public\n\t */\n\n\tcookie.parse = parse;\n\tcookie.serialize = serialize;\n\n\t/**\n\t * Module variables.\n\t * @private\n\t */\n\n\tvar __toString = Object.prototype.toString;\n\tvar __hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t/**\n\t * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n\t * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n\t * which has been replaced by the token definition in RFC 7230 appendix B.\n\t *\n\t * cookie-name       = token\n\t * token             = 1*tchar\n\t * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n\t *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n\t *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n\t */\n\n\tvar cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n\n\t/**\n\t * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n\t *\n\t * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n\t * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n\t *                     ; US-ASCII characters excluding CTLs,\n\t *                     ; whitespace DQUOTE, comma, semicolon,\n\t *                     ; and backslash\n\t */\n\n\tvar cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n\n\t/**\n\t * RegExp to match domain-value in RFC 6265 sec 4.1.1\n\t *\n\t * domain-value      = <subdomain>\n\t *                     ; defined in [RFC1034], Section 3.5, as\n\t *                     ; enhanced by [RFC1123], Section 2.1\n\t * <subdomain>       = <label> | <subdomain> \".\" <label>\n\t * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n\t *                     Labels must be 63 characters or less.\n\t *                     'let-dig' not 'letter' in the first char, per RFC1123\n\t * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n\t * <let-dig-hyp>     = <let-dig> | \"-\"\n\t * <let-dig>         = <letter> | <digit>\n\t * <letter>          = any one of the 52 alphabetic characters A through Z in\n\t *                     upper case and a through z in lower case\n\t * <digit>           = any one of the ten digits 0 through 9\n\t *\n\t * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n\t *\n\t * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n\t * character is not permitted, but a trailing %x2E (\".\"), if present, will\n\t * cause the user agent to ignore the attribute.)\n\t */\n\n\tvar domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n\t/**\n\t * RegExp to match path-value in RFC 6265 sec 4.1.1\n\t *\n\t * path-value        = <any CHAR except CTLs or \";\">\n\t * CHAR              = %x01-7F\n\t *                     ; defined in RFC 5234 appendix B.1\n\t */\n\n\tvar pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\n\t/**\n\t * Parse a cookie header.\n\t *\n\t * Parse the given cookie header string into an object\n\t * The object has the various cookies as keys(names) => values\n\t *\n\t * @param {string} str\n\t * @param {object} [opt]\n\t * @return {object}\n\t * @public\n\t */\n\n\tfunction parse(str, opt) {\n\t  if (typeof str !== 'string') {\n\t    throw new TypeError('argument str must be a string');\n\t  }\n\n\t  var obj = {};\n\t  var len = str.length;\n\t  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n\t  if (len < 2) return obj;\n\n\t  var dec = (opt && opt.decode) || decode;\n\t  var index = 0;\n\t  var eqIdx = 0;\n\t  var endIdx = 0;\n\n\t  do {\n\t    eqIdx = str.indexOf('=', index);\n\t    if (eqIdx === -1) break; // No more cookie pairs.\n\n\t    endIdx = str.indexOf(';', index);\n\n\t    if (endIdx === -1) {\n\t      endIdx = len;\n\t    } else if (eqIdx > endIdx) {\n\t      // backtrack on prior semicolon\n\t      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n\t      continue;\n\t    }\n\n\t    var keyStartIdx = startIndex(str, index, eqIdx);\n\t    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n\t    var key = str.slice(keyStartIdx, keyEndIdx);\n\n\t    // only assign once\n\t    if (!__hasOwnProperty.call(obj, key)) {\n\t      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n\t      var valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n\t      if (str.charCodeAt(valStartIdx) === 0x22 /* \" */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* \" */) {\n\t        valStartIdx++;\n\t        valEndIdx--;\n\t      }\n\n\t      var val = str.slice(valStartIdx, valEndIdx);\n\t      obj[key] = tryDecode(val, dec);\n\t    }\n\n\t    index = endIdx + 1;\n\t  } while (index < len);\n\n\t  return obj;\n\t}\n\n\tfunction startIndex(str, index, max) {\n\t  do {\n\t    var code = str.charCodeAt(index);\n\t    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n\t  } while (++index < max);\n\t  return max;\n\t}\n\n\tfunction endIndex(str, index, min) {\n\t  while (index > min) {\n\t    var code = str.charCodeAt(--index);\n\t    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n\t  }\n\t  return min;\n\t}\n\n\t/**\n\t * Serialize data into a cookie header.\n\t *\n\t * Serialize a name value pair into a cookie string suitable for\n\t * http headers. An optional options object specifies cookie parameters.\n\t *\n\t * serialize('foo', 'bar', { httpOnly: true })\n\t *   => \"foo=bar; httpOnly\"\n\t *\n\t * @param {string} name\n\t * @param {string} val\n\t * @param {object} [opt]\n\t * @return {string}\n\t * @public\n\t */\n\n\tfunction serialize(name, val, opt) {\n\t  var enc = (opt && opt.encode) || encodeURIComponent;\n\n\t  if (typeof enc !== 'function') {\n\t    throw new TypeError('option encode is invalid');\n\t  }\n\n\t  if (!cookieNameRegExp.test(name)) {\n\t    throw new TypeError('argument name is invalid');\n\t  }\n\n\t  var value = enc(val);\n\n\t  if (!cookieValueRegExp.test(value)) {\n\t    throw new TypeError('argument val is invalid');\n\t  }\n\n\t  var str = name + '=' + value;\n\t  if (!opt) return str;\n\n\t  if (null != opt.maxAge) {\n\t    var maxAge = Math.floor(opt.maxAge);\n\n\t    if (!isFinite(maxAge)) {\n\t      throw new TypeError('option maxAge is invalid')\n\t    }\n\n\t    str += '; Max-Age=' + maxAge;\n\t  }\n\n\t  if (opt.domain) {\n\t    if (!domainValueRegExp.test(opt.domain)) {\n\t      throw new TypeError('option domain is invalid');\n\t    }\n\n\t    str += '; Domain=' + opt.domain;\n\t  }\n\n\t  if (opt.path) {\n\t    if (!pathValueRegExp.test(opt.path)) {\n\t      throw new TypeError('option path is invalid');\n\t    }\n\n\t    str += '; Path=' + opt.path;\n\t  }\n\n\t  if (opt.expires) {\n\t    var expires = opt.expires;\n\n\t    if (!isDate(expires) || isNaN(expires.valueOf())) {\n\t      throw new TypeError('option expires is invalid');\n\t    }\n\n\t    str += '; Expires=' + expires.toUTCString();\n\t  }\n\n\t  if (opt.httpOnly) {\n\t    str += '; HttpOnly';\n\t  }\n\n\t  if (opt.secure) {\n\t    str += '; Secure';\n\t  }\n\n\t  if (opt.partitioned) {\n\t    str += '; Partitioned';\n\t  }\n\n\t  if (opt.priority) {\n\t    var priority = typeof opt.priority === 'string'\n\t      ? opt.priority.toLowerCase() : opt.priority;\n\n\t    switch (priority) {\n\t      case 'low':\n\t        str += '; Priority=Low';\n\t        break\n\t      case 'medium':\n\t        str += '; Priority=Medium';\n\t        break\n\t      case 'high':\n\t        str += '; Priority=High';\n\t        break\n\t      default:\n\t        throw new TypeError('option priority is invalid')\n\t    }\n\t  }\n\n\t  if (opt.sameSite) {\n\t    var sameSite = typeof opt.sameSite === 'string'\n\t      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n\t    switch (sameSite) {\n\t      case true:\n\t        str += '; SameSite=Strict';\n\t        break;\n\t      case 'lax':\n\t        str += '; SameSite=Lax';\n\t        break;\n\t      case 'strict':\n\t        str += '; SameSite=Strict';\n\t        break;\n\t      case 'none':\n\t        str += '; SameSite=None';\n\t        break;\n\t      default:\n\t        throw new TypeError('option sameSite is invalid');\n\t    }\n\t  }\n\n\t  return str;\n\t}\n\n\t/**\n\t * URL-decode string value. Optimized to skip native call when no %.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\n\tfunction decode (str) {\n\t  return str.indexOf('%') !== -1\n\t    ? decodeURIComponent(str)\n\t    : str\n\t}\n\n\t/**\n\t * Determine if value is a Date.\n\t *\n\t * @param {*} val\n\t * @private\n\t */\n\n\tfunction isDate (val) {\n\t  return __toString.call(val) === '[object Date]';\n\t}\n\n\t/**\n\t * Try decoding a string using a decoding function.\n\t *\n\t * @param {string} str\n\t * @param {function} decode\n\t * @private\n\t */\n\n\tfunction tryDecode(str, decode) {\n\t  try {\n\t    return decode(str);\n\t  } catch (e) {\n\t    return str;\n\t  }\n\t}\n\treturn cookie;\n}\n\nvar cookieExports = requireCookie();\n\nfunction hasDocumentCookie() {\n    const testingValue = typeof global === 'undefined'\n        ? undefined\n        : global.TEST_HAS_DOCUMENT_COOKIE;\n    if (typeof testingValue === 'boolean') {\n        return testingValue;\n    }\n    // Can we get/set cookies on document.cookie?\n    return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n    if (typeof cookies === 'string') {\n        return cookieExports.parse(cookies);\n    }\n    else if (typeof cookies === 'object' && cookies !== null) {\n        return cookies;\n    }\n    else {\n        return {};\n    }\n}\nfunction readCookie(value, options = {}) {\n    const cleanValue = cleanupCookieValue(value);\n    if (!options.doNotParse) {\n        try {\n            return JSON.parse(cleanValue);\n        }\n        catch (e) {\n            // At least we tried\n        }\n    }\n    // Ignore clean value if we failed the deserialization\n    // It is not relevant anymore to trim those values\n    return value;\n}\nfunction cleanupCookieValue(value) {\n    // express prepend j: before serializing a cookie\n    if (value && value[0] === 'j' && value[1] === ':') {\n        return value.substr(2);\n    }\n    return value;\n}\n\nclass Cookies {\n    constructor(cookies, defaultSetOptions = {}) {\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = () => {\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = cookieExports.parse(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    _emitChange(params) {\n        for (let i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(previousCookies) {\n        const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name) => {\n            if (previousCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(this.cookies[name]),\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name, options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll(options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for (let name in this.cookies) {\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        }\n        else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), { [name]: stringValue });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookieExports.serialize(name, stringValue, options);\n        }\n        this._emitChange({ name, value, options });\n    }\n    remove(name, options) {\n        const finalOptions = (options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookieExports.serialize(name, '', finalOptions);\n        }\n        this._emitChange({ name, value: undefined, options });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.addEventListener('change', this.update);\n            }\n            else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.removeEventListener('change', this.update);\n            }\n            else {\n                this._stopPolling();\n            }\n        }\n    }\n}\n\nexport { Cookies as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}