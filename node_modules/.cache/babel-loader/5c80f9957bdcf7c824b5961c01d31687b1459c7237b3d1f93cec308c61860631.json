{"ast":null,"code":"import * as CommonSelectors from '../lib/common_selectors.js';\nimport * as Constants from '../constants.js';\nconst DrawPoint = {};\nDrawPoint.onSetup = function () {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n  this.addFeature(point);\n  this.clearSelectedFeatures();\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.POINT);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    point\n  };\n};\nDrawPoint.stopDrawingAndRemove = function (state) {\n  this.deleteFeature([state.point.id], {\n    silent: true\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDrawPoint.onTap = DrawPoint.onClick = function (state, e) {\n  this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.point.id]\n  });\n};\nDrawPoint.onStop = function (state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], {\n      silent: true\n    });\n  }\n};\nDrawPoint.toDisplayFeatures = function (state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = isActivePoint ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\nDrawPoint.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\nexport default DrawPoint;","map":{"version":3,"names":["CommonSelectors","Constants","DrawPoint","onSetup","point","newFeature","type","geojsonTypes","FEATURE","properties","geometry","POINT","coordinates","addFeature","clearSelectedFeatures","updateUIClasses","mouse","cursors","ADD","activateUIButton","types","setActionableState","trash","stopDrawingAndRemove","state","deleteFeature","id","silent","changeMode","modes","SIMPLE_SELECT","onTap","onClick","e","MOVE","updateCoordinate","lngLat","lng","lat","fire","events","CREATE","features","toGeoJSON","featureIds","onStop","getCoordinate","length","toDisplayFeatures","geojson","display","isActivePoint","active","activeStates","ACTIVE","INACTIVE","onTrash","onKeyUp","isEscapeKey","isEnterKey"],"sources":["C:/Users/jonat/aws_poc/frontend/node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_point.js"],"sourcesContent":["import * as CommonSelectors from '../lib/common_selectors.js';\nimport * as Constants from '../constants.js';\n\nconst DrawPoint = {};\n\nDrawPoint.onSetup = function() {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n\n  this.addFeature(point);\n\n  this.clearSelectedFeatures();\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POINT);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return { point };\n};\n\nDrawPoint.stopDrawingAndRemove = function(state) {\n  this.deleteFeature([state.point.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\n};\n\nDrawPoint.onStop = function(state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], { silent: true });\n  }\n};\n\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\n\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\n\nDrawPoint.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\n\nexport default DrawPoint;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}